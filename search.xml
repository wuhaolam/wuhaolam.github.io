<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>二进制安装MySQL5.7</title>
      <link href="/archives/10f0528f.html"/>
      <url>/archives/10f0528f.html</url>
      
        <content type="html"><![CDATA[<p>【实验需求】</p><p>运行脚本，离线部署二进制MySQL5.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : install_mysql5.7.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2023-02-27</span></span><br><span class="line"><span class="comment"># * Description   : install mysql5.7</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment">## 二进制安装 MySQL 5.7 或 MySQL8.0</span></span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">PackageDir=<span class="string">&quot;/root&quot;</span></span><br><span class="line">PackageName=<span class="string">&quot;mysql-5.7.40-linux-glibc2.12-x86_64&quot;</span></span><br><span class="line">MysqlRootPassword=<span class="string">&quot;wuhaolam&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、安装相关包</span></span><br><span class="line">yum -y install libaio numactl-libs libncurses* &amp;&gt; /dev/null || &#123; <span class="built_in">echo</span> -e <span class="string">&quot;\033[1;31minstall package fail\033[0m&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、创建用户和组及目录</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">id</span> mysql &amp;&gt; /dev/null;<span class="keyword">then</span></span><br><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /sbin/nologin mysql</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">[ -d /data/mysql/ ] || <span class="built_in">mkdir</span> -p /data/mysql/ &amp;&amp; <span class="built_in">chown</span> -R mysql:mysql /data/mysql/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、准备程序文件</span></span><br><span class="line"><span class="comment"># 下载好的程序文件</span></span><br><span class="line">[ -e <span class="variable">$&#123;PackageDir&#125;</span>/<span class="variable">$&#123;PackageName&#125;</span>.tar.gz ] || &#123; <span class="built_in">echo</span> -e <span class="string">&quot;\033[1;31mPackage file is not exits\033[0m&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"></span><br><span class="line">tar xf <span class="variable">$&#123;PackageDir&#125;</span>/<span class="variable">$&#123;PackageName&#125;</span>.tar.gz -C /usr/local/</span><br><span class="line"><span class="built_in">cd</span> /usr/local/</span><br><span class="line"><span class="built_in">ln</span> -s <span class="variable">$&#123;PackageName&#125;</span>/ mysql</span><br><span class="line"><span class="built_in">chown</span> -R root:root /usr/local/mysql/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、准备环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PATH=/usr/local/mysql/bin:$PATH&#x27;</span> &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、准备配置文件和相关目录</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/my.cnf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">socket=/data/mysql/mysql.sock</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string">prompt=&quot;\\r:\\m:\\s(\\u@\\h) [\\d]&gt;\\_&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">datadir=/data/mysql</span></span><br><span class="line"><span class="string">socket=/data/mysql/mysql.sock</span></span><br><span class="line"><span class="string">user=mysql</span></span><br><span class="line"><span class="string">symbolic-links=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">log-error=/data/mysql/mysql.log</span></span><br><span class="line"><span class="string">pid-file=/data/mysql/mysql.pid</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6、初始化数据库文件</span></span><br><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7、准备服务脚本启动</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> -e <span class="string">&quot;\033[1;32mMySQL startup success\033[0m&quot;</span> || &#123; <span class="built_in">echo</span> -e <span class="string">&quot;\033[1;31mMySQL startup failed\033[0m&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8、修改口令</span></span><br><span class="line"><span class="comment"># 修改之前生成的随机密码为指定密码</span></span><br><span class="line">Password=`awk <span class="string">&#x27;/A temporary password/ &#123;print $11&#125;&#x27;</span> /data/mysql/mysql.log`</span><br><span class="line">mysqladmin -uroot -p<span class="variable">$&#123;Password&#125;</span> password <span class="variable">$&#123;MysqlRootPassword&#125;</span> &amp;&gt; /dev/null &amp;&amp; action <span class="string">&quot;数据库安装完成&quot;</span> /bin/true || action <span class="string">&quot;密码修改失败&quot;</span> /bin/false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本案例实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本案例实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh 实现基于key验证</title>
      <link href="/archives/30f2a840.html"/>
      <url>/archives/30f2a840.html</url>
      
        <content type="html"><![CDATA[<p>[实验需求]</p><p>1、配置三台主机之间基于ssh的key验证</p><p>[实验环境]</p><p>host1: 192.168.119.129</p><p>host2: 192.168.119.146</p><p>host3: 192.168.119.150</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">LOCAL_IP=`ip a show eth0 | awk -F<span class="string">&#x27;[ /]+&#x27;</span> <span class="string">&#x27;/\&lt;inet\&gt;/&#123;print $3&#125;&#x27;</span>`</span><br><span class="line">password=wuhaolam</span><br><span class="line"><span class="comment"># 人为指定主机</span></span><br><span class="line">HOSTLIST=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">192.168.119.146</span></span><br><span class="line"><span class="string">192.168.119.150</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="comment"># 自动扫描网段内主机</span></span><br><span class="line"><span class="comment"># NET=192.168.119</span></span><br><span class="line"><span class="comment"># for HOST in &#123;1..254&#125;;do</span></span><br><span class="line"><span class="comment"># IP=&quot;$NET&quot;.&quot;$HOST&quot;</span></span><br><span class="line"><span class="comment">#ping -c 1 -w 1 $IP &amp;&gt; /dev/null &amp;&amp; echo $IP &gt;&gt; IP_alive.txt &amp;</span></span><br><span class="line"><span class="comment"># done</span></span><br><span class="line"></span><br><span class="line">[ -d /root/.ssh/ ] &amp;&amp; <span class="built_in">rm</span> -rf /root/.ssh &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line">ssh-keygen -P <span class="string">&quot;&quot;</span> -f /root/.ssh/id_rsa &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! rpm -q sshpass &amp;&gt; /dev/null;<span class="keyword">then</span></span><br><span class="line">  yum -y install sshpass &amp;&gt; /dev/null || <span class="built_in">echo</span> -e <span class="string">&#x27;\E[1;31m&quot;error: sshpass packet install false!&quot;\E[0m&#x27;</span> &amp;&amp; <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sshpass -p <span class="variable">$password</span> ssh-copy-id -o StrictHostKeyChecking=no <span class="variable">$LOCAL_IP</span> &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> IP <span class="keyword">in</span> <span class="variable">$HOSTLIST</span>; <span class="keyword">do</span></span><br><span class="line">  sshpass -p <span class="variable">$password</span> scp -o StrictHostKeyChecking=no -r /root/.ssh <span class="variable">$IP</span>:/root/ &amp;&gt; /dev/null</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$IP</span> key_authentication already <span class="keyword">done</span>.</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> IP <span class="keyword">in</span> <span class="variable">$HOSTLIST</span>; <span class="keyword">do</span></span><br><span class="line">  scp /root/.ssh/known_hosts <span class="variable">$IP</span>:/root/.ssh/ &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32msuccessful\E[0m&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本案例实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本案例实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自签名CA证书并颁发应用证书</title>
      <link href="/archives/7ca84884.html"/>
      <url>/archives/7ca84884.html</url>
      
        <content type="html"><![CDATA[<p>【实验需求】</p><p>实现私有CA的生成，并完成证书的申请</p><p>【实验环境】</p><p>Rocky Linux release 8.5 (Green Obsidian)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 创建CA相关目录和文件</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;</span><br><span class="line"><span class="built_in">touch</span> /etc/pki/CA/index.txt</span><br><span class="line"><span class="built_in">echo</span> 00 &gt; /etc/pki/CA/serial</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成CA自签名证书</span></span><br><span class="line">openssl req -utf8 -newkey rsa:2048 -subj <span class="string">&quot;/C=CN/ST=anhui/L=hefei/O=Universal/OU=tech/CN=www.hefei.com&quot;</span> -days 3650 -keyout /etc/pki/CA/private/cakey.pem -nodes -x509 -out /etc/pki/CA/cacert.pem &amp;&gt; /dev/null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成用户私钥和证书申请文件</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /data/app1</span><br><span class="line">(<span class="built_in">umask</span> 066; openssl genrsa -out /data/app1/app1.key 2048 &amp;&gt; /dev/null)</span><br><span class="line">openssl req -subj <span class="string">&quot;/C=CN/ST=anhui/L=luzhou/O=Universal/OU=sale/CN=www.sale.com&quot;</span> -new -key /data/app1/app1.key -out /data/app1/app1.csr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 颁发证书</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;y\ny\n&#x27;</span>| openssl ca -<span class="keyword">in</span> /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -cert /etc/pki/CA/cacert.pem -keyfile /etc/pki/CA/private/cakey.pem -days 1095 &amp;&gt; /dev/null</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本案例实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本案例实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网卡名修改和静态IP地址配置</title>
      <link href="/archives/f82bde29.html"/>
      <url>/archives/f82bde29.html</url>
      
        <content type="html"><![CDATA[<p>[ 实验需求 ]</p><p>1、修改主机的网卡名称为eth0</p><p>2、将 host_ip.txt 文件中的主机配置成为指定的静态IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat host_ip.txt</span></span><br><span class="line">Centos7 192.168.119.166</span><br><span class="line">Centos7-mini2 192.168.119.147</span><br><span class="line">Centos7-mini3 192.168.119.158</span><br><span class="line">Rocky8-mini 192.168.119.128</span><br><span class="line">Rocky8-mini3 192.168.119.129</span><br><span class="line">Rocky8-mini2 192.168.119.138</span><br><span class="line">Rocky8-mini5 192.168.119.146</span><br><span class="line">Rocky8-mini4 192.168.119.150</span><br><span class="line">Centos8-mini 192.168.119.148</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/sysconfig/network-scripts/</span><br><span class="line"></span><br><span class="line">HOST=`hostname`</span><br><span class="line">IP=`grep -i <span class="string">&quot;\&lt;<span class="variable">$HOST</span>\&gt;&quot;</span> /root/host_ip.txt | <span class="built_in">cut</span> -d<span class="string">&#x27; &#x27;</span> -f2`</span><br><span class="line">version_id=`sed -nr <span class="string">&#x27;/VERSION_ID/s#.*&quot;(.*)&quot;#\1#p&#x27;</span> /etc/os-release`</span><br><span class="line">IPADDR=<span class="variable">$IP</span></span><br><span class="line">GATEWAY=192.168.119.2</span><br><span class="line">DNS=192.168.119.2</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$version_id</span> = <span class="string">&quot;7&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">UUID=`sed -nr <span class="string">&#x27;/\&lt;UUID\&gt;/s/.*&quot;(.*)&quot;/\1/p&#x27;</span> /etc/sysconfig/network-scripts/ifcfg-ens33`</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$version_id</span> = <span class="string">&quot;8.5&quot;</span> ] || [ <span class="variable">$version_id</span> = <span class="string">&quot;8&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">UUID=`awk -F<span class="string">&#x27;=&#x27;</span> <span class="string">&#x27;/UUID/&#123;print $2&#125;&#x27;</span> /etc/sysconfig/network-scripts/ifcfg-ens33`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sed -Ei.bak <span class="string">&#x27;/^GRUB_CMDLINE_LINUX/s/(.*)(&quot;)$/\1 net.ifnames=0\2/&#x27;</span> /etc/default/grub</span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/network-scripts/ifcfg-eth0 &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">TYPE=Ethernet</span></span><br><span class="line"><span class="string">BOOTPROTO=static</span></span><br><span class="line"><span class="string">IPADDR=$IPADDR</span></span><br><span class="line"><span class="string">NETMASK=255.255.255.0</span></span><br><span class="line"><span class="string">GATEWAY=$GATEWAY</span></span><br><span class="line"><span class="string">DNS1=$DNS</span></span><br><span class="line"><span class="string">DEFROUTE=yes</span></span><br><span class="line"><span class="string">NAME=eth0</span></span><br><span class="line"><span class="string">UUID=$UUID</span></span><br><span class="line"><span class="string">DEVICE=eth0</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mv</span> /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-ens33.bak</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本案例实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本案例实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>磁盘存储和文件系统管理</title>
      <link href="/archives/50005d9f.html"/>
      <url>/archives/50005d9f.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、磁盘结构"><a href="#一、磁盘结构" class="headerlink" title="一、磁盘结构"></a>一、磁盘结构</h1><h2 id="1-1-设备文件"><a href="#1-1-设备文件" class="headerlink" title="1.1 设备文件"></a>1.1 设备文件</h2><p>设备文件：关联至一个设备驱动程序，进而能够跟与之对应硬件设备进行通信</p><p>设备号码：</p><ul><li>主设备号：标识设备类型，如 &#x2F;dev&#x2F;sda，&#x2F;dev&#x2F;sdb …</li><li>次设备号：标识同一类型下的不同设备，如 sda1，sda2 …</li></ul><p>设备类型：</p><ul><li>块设备：block，存取单位为“块”，磁盘</li><li>字符设备：char，存取单位“字符”，键盘</li></ul><h1 id="二、管理存储"><a href="#二、管理存储" class="headerlink" title="二、管理存储"></a>二、管理存储</h1><h2 id="2-1-磁盘分区"><a href="#2-1-磁盘分区" class="headerlink" title="2.1 磁盘分区"></a>2.1 磁盘分区</h2><h3 id="2-1-1-分区的原因"><a href="#2-1-1-分区的原因" class="headerlink" title="2.1.1 分区的原因"></a>2.1.1 分区的原因</h3><ul><li>优化 I&#x2F;O 性能</li><li>实现磁盘空间配额限制</li><li>提高修复速度</li><li>隔离系统和程序</li><li>安装多个 OS</li><li>采用不同的文件系统</li></ul><h3 id="2-1-2-分区的方式"><a href="#2-1-2-分区的方式" class="headerlink" title="2.1.2 分区的方式"></a>2.1.2 分区的方式</h3><p>两种方式：MBR 和 GPT</p><h4 id="2-1-2-1-MBR-分区"><a href="#2-1-2-1-MBR-分区" class="headerlink" title="2.1.2.1 MBR 分区"></a>2.1.2.1 MBR 分区</h4><p>MBR: Master Boot Record，使用32位表示扇区数，分区不超过2T</p><p>0磁道0扇区: 512Bytes</p><p>​    446 bytes: boot loader 启动相关</p><p>​    64 bytes: 分区表，其中每 16 bytes 标识一个分区</p><p>​    2 bytes: 55AA</p><p>MBR 分区中一块硬盘最多有四个主分区，或者3个主分区+一个扩展分区（N个逻辑分区）</p><p>MBR 分区: 主和扩展分区为 1-4，逻辑分区从5开始</p><p>MBR（硬盘主引导记录）由4个部分组成</p><table><thead><tr><th align="center">0000-0088</th><th align="center">Master Boot Record</th><th align="center">主引导程序</th></tr></thead><tbody><tr><td align="center">0089 - 01BD</td><td align="center">出错信息数据区</td><td align="center">数据区</td></tr><tr><td align="center">01BE - 01CD</td><td align="center">分区项1（16字节）</td><td align="center">分区表</td></tr><tr><td align="center">01CE - 01DD</td><td align="center">分区项2（16字节）</td><td align="center">分区表</td></tr><tr><td align="center">01DE - 01ED</td><td align="center">分区项3（16字节）</td><td align="center">分区表</td></tr><tr><td align="center">01EE - 01FD</td><td align="center">分区项4（16字节）</td><td align="center">分区表</td></tr><tr><td align="center">01FE</td><td align="center">55</td><td align="center">结束标志</td></tr><tr><td align="center">01FF</td><td align="center">AA</td><td align="center">结束标志</td></tr></tbody></table><ul><li>主引导程序（偏移地址 0000H-0088H），它负责从活动分区中装载，并运行系统引导程序</li><li>出错信息数据区，偏移地址0089H-00E1H为出错信息，00E2H-01BDH全为0字节</li><li>分区表（DPT，Disk Partition Table）含4个分区项，偏移地址01BEH-01FDH，每个分区表项长16个字节，划分成4个分区项，共64字节</li><li>结束标志，偏移地址01FE-01FF的2个字节值为结束标志55AA</li></ul><p>MBR中的DPT结构</p><table><thead><tr><th align="left">存贮字节位</th><th align="left">内容及含义</th></tr></thead><tbody><tr><td align="left">第1字节</td><td align="left">引导标志 。若值为80H表示活动分区，若值为00H表示非活动分区。</td></tr><tr><td align="left">第2、3、4字节</td><td align="left">本分区的起始磁头号、扇区号、柱面号。其中:<br />    磁头号 – 第2字节<br />    扇区号 – 第3字节的低6位<br />    柱面号 – 第3字节高2位+第4字节8位</td></tr><tr><td align="left">第5字节</td><td align="left">分区类型符 <br />    00H：表示该分区未使用<br />    06H：FAT16 基本分区<br />    0BH：FAT32 基本分区<br />    05H：扩展分区<br />    07H：NTFS分区<br />    0FH：（LBA模式）扩展分区（83H 为 Linux 分区等）</td></tr><tr><td align="left">第6、7、8字节</td><td align="left">本分区的结束磁头号、扇区号、柱面号。<br />    磁头号 – 第6字节<br />    扇区号 – 第7字节的低6位<br />    柱面号 – 第7字节的高2位+第8字节</td></tr><tr><td align="left">第9、10、11、12字节</td><td align="left">本分区之前已用了的扇区数</td></tr><tr><td align="left">第13、14、15、16字节</td><td align="left">本分区的总扇区数</td></tr></tbody></table><p>示例：备份MBR的分区表，破坏之后恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份MBR分区表</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/data/dpt.img bs=1 count=64 skip=446</span><br><span class="line">scp /data/dpt.img 192.168.119.166:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 破坏MBR分区表</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/data/sda bs=1 count=64 seek=446</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启计算机，本机无法启动</span></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用光盘启动，进入rescue mode，选择第三项 skip to shell</span></span><br><span class="line"></span><br><span class="line">scp 192.168.119.166:/root/dpt.img .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复分区表</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=dpt.img of=/dev/sda bs=1 count=64 seek=446</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="2-1-2-2-GPT-分区"><a href="#2-1-2-2-GPT-分区" class="headerlink" title="2.1.2.2 GPT 分区"></a>2.1.2.2 GPT 分区</h4><p>GPT：GUID partition table 支持128个分区</p><p>使用128位UUID表示磁盘分区和分区，GPT分区表自动备份在头和尾两份，并有CRC校验位</p><p>UEFI（统一可扩展固件接口）硬件支持GPT，使得操作系统可以启动</p><p><strong>GPT分区结构图</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/GPT.png"></p><p>GPT分区结构分为4个区域：</p><ul><li>GPT头</li><li>分区表</li><li>GPT分区</li><li>备份区域</li></ul><h3 id="2-1-3-BIOS-和-UEFI"><a href="#2-1-3-BIOS-和-UEFI" class="headerlink" title="2.1.3 BIOS 和 UEFI"></a>2.1.3 BIOS 和 UEFI</h3><p>BIOS（Basic Input Output System 基本输入输出系统）主要完成系统硬件自检和引导操作系统，操作系统开始启动之后，BIOS的任务就完成了。</p><p>UEFI(Unified Extensible Firmware Interface)统一的可扩展固件接口， 是一种详细描述类型接口的标准。UEFI 相当于一个轻量化的操作系统，提供了硬件和操作系统之间的一个接口，提供了图形化的操作界面。最关键的是引入了GPT分区表，支持2T以上的硬盘，硬盘分区不受限制。</p><p>BIOS 和 UEFI 的区别</p><ul><li>BIOS采用了16位汇编语言编写，只能运行在实模式（内存寻址方式由16位段寄存器的内容乘以16(10H)当做段基地址，加上16位偏移地址形成20位的物理地址）下，可访问的内存空间为1MB，只支持字符操作界面</li><li>UEFI采用32位或者64位的C语言编写，突破了实模式的限制，可以达到最大的寻址空间，支持图形操作界面，使用文件方式保存信息，支持GPT分区启动，适合和较新的系统和硬件的配合使用</li></ul><p><strong>BIOS + MBR 与 UEFI + GPT</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221117201115270.png" alt="image-20221117201115270"></p><p>Windows 只能安装BIOS + MBR 或 UEFI + GPT 的组合，而BIOS + GPT 和 UEFI + MBR 是不允许的，但是 BIOS + GPT + GRUB 启动Linux可以。</p><h3 id="2-1-4-管理分区"><a href="#2-1-4-管理分区" class="headerlink" title="2.1.4 管理分区"></a>2.1.4 管理分区</h3><p>列出块设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>创建分区命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk 管理MBR分区</span><br><span class="line">gdisk 管理GPT分区</span><br><span class="line">parted 高级分区操作，可以是交互或非交互式</span><br></pre></td></tr></table></figure><p>刷新内存中的分区信息，同步分区表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 适用于除Centos 6之外的其它版本</span></span><br><span class="line">partprobe</span><br></pre></td></tr></table></figure><h4 id="2-1-4-1-parted-命令"><a href="#2-1-4-1-parted-命令" class="headerlink" title="2.1.4.1 parted 命令"></a>2.1.4.1 parted 命令</h4><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted [option]... [设备 [命令 [参数]...]...]</span><br></pre></td></tr></table></figure><p>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改 /dev/sdb 的 Partition Table 的值为 gpt 或 msdos</span></span><br><span class="line">parted /dev/sdb mklable gpt|msdos</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印指定设备的所有分区信息</span></span><br><span class="line">parted /dev/sdb <span class="built_in">print</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建主分区, 大小为200M, 单位默认为M</span></span><br><span class="line">parted /dev/sdb mkpart primary 1 200</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定设备分区 1 的信息</span></span><br><span class="line">parted /dev/sdb <span class="built_in">rm</span> 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有磁盘分区信息</span></span><br><span class="line">parted -l</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># parted /dev/sdb print</span></span><br><span class="line">Model: VMware, VMware Virtual S (scsi)</span><br><span class="line">Disk /dev/sdb: 5369MB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: msdos</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start   End     Size    Type     File system  Flags</span><br><span class="line"> 1      1049kB  2149MB  2147MB  primary  ext4</span><br></pre></td></tr></table></figure><h4 id="2-1-4-2-fdisk-和-gdisk"><a href="#2-1-4-2-fdisk-和-gdisk" class="headerlink" title="2.1.4.2 fdisk 和 gdisk"></a>2.1.4.2 fdisk 和 gdisk</h4><p>常见用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l [device ...]    查看分区</span><br><span class="line">fdisk [device ...]       管理MBR分区</span><br><span class="line">gdisk [device ...]       GPT分区工具，类fdisk使用</span><br></pre></td></tr></table></figure><p>管理分区时使用的子命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p  分区列表</span><br><span class="line">t  更改分区类型 </span><br><span class="line">n  创建新分区</span><br><span class="line">d  删除分区</span><br><span class="line">v  校验分区</span><br><span class="line">u  转换单位</span><br><span class="line">w  保存并退出</span><br><span class="line">q  不保存退出</span><br></pre></td></tr></table></figure><p>查看内核是否已经识别新的分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/partitions</span><br></pre></td></tr></table></figure><p>CentOS 7,8 同步分区表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partprobe</span><br></pre></td></tr></table></figure><h2 id="2-2-文件系统"><a href="#2-2-文件系统" class="headerlink" title="2.2 文件系统"></a>2.2 文件系统</h2><h3 id="2-2-1-什么是文件系统"><a href="#2-2-1-什么是文件系统" class="headerlink" title="2.2.1 什么是文件系统"></a>2.2.1 什么是文件系统</h3><p>计算机的<strong>文件系统</strong>是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用<strong>文件</strong>和<strong>树形目录</strong>的抽象逻辑概念代替了硬盘和光盘等物理设备使用数据块的概念，用户使用文件系统来保存数据不必关心数据实际保存在硬盘（或者光盘）的地址为多少的数据块上，只需要记住这个文件的所属目录和文件名。在写入新数据之前，用户不必关心硬盘上的那个块地址没有被使用，硬盘上的存储空间管理（分配和释放）功能由文件系统自动完成，用户只需要记住数据被写入到了哪个文件中。</p><p>支持的文件系统类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls /lib/modules/`uname -r`/kernel/fs</span></span><br><span class="line">binfmt_misc.ko.xz  ceph  cramfs  ext4  fscache  gfs2   jbd2   mbcache.ko.xz  nfs_common  nls        pstore    udf</span><br><span class="line">cachefiles         cifs  dlm     fat   fuse     isofs  lockd  nfs            nfsd        overlayfs  squashfs  xfs</span><br></pre></td></tr></table></figure><h3 id="2-2-2-文件系统类型"><a href="#2-2-2-文件系统类型" class="headerlink" title="2.2.2 文件系统类型"></a>2.2.2 文件系统类型</h3><p>Linux 中常用文件系统</p><ul><li>ext4：ext 文件系统最新版</li><li>xfs：SGI，支持最大8EB的文件系统</li><li>swap</li><li>iso9660 光盘</li><li>btrfs（Oracle）</li><li>reiserfs</li></ul><p>Windows 中常用文件系统</p><ul><li>FAT32</li><li>NTFS</li><li>exFAT</li></ul><h3 id="2-2-3-文件系统的组成部分"><a href="#2-2-3-文件系统的组成部分" class="headerlink" title="2.2.3 文件系统的组成部分"></a>2.2.3 文件系统的组成部分</h3><p>内核中的模块：ext4, xfs, vfat</p><p>Linux的虚拟文件系统：VFS</p><p>用户空间的管理工具：mkfs.ext4, mkfs.xfs, mkfs.vfat</p><p>注：用户执行的命令不直接和各文件系统进行连接，而是通过虚拟文件系统，虚拟文件系统对外提供统一的访问接口，再通过虚拟文件系统和多个不同类型的文件系统连接，这样只要使用一个命令就可以访问不同的文件系统。</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221120202829203.png" alt="image-20221120202829203" style="zoom:80%;" /><h3 id="2-2-4-文件系统选择管理"><a href="#2-2-4-文件系统选择管理" class="headerlink" title="2.2.4 文件系统选择管理"></a>2.2.4 文件系统选择管理</h3><h4 id="2-2-4-1-创建文件系统"><a href="#2-2-4-1-创建文件系统" class="headerlink" title="2.2.4.1 创建文件系统"></a>2.2.4.1 创建文件系统</h4><p>创建文件管理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkfs</span><br><span class="line">  mkfs.FS_TYPE /dev/DEVICE</span><br><span class="line">  FS_TYPE: ext4 xfs btrfs vfat</span><br><span class="line">  mkfs -t FS_TYPE /dev/DEVICE</span><br><span class="line">       -L <span class="string">&#x27;LABEL&#x27;</span> 设定卷标</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mke2fs: ext 系列文件系统专用管理工具</span><br><span class="line"> -t &#123;ext2|ext3|ext4|xfs&#125;    指定文件系统类型</span><br><span class="line"> -b &#123;1024|2048|4096&#125;        指定块大小</span><br><span class="line"> -L <span class="string">&#x27;LABEL&#x27;</span>                 设置卷标</span><br><span class="line"> -j                         创建ext3系列文件系统</span><br><span class="line"> -i <span class="comment">#                       每多少个字节创建一个inode，不应该小于block大小</span></span><br><span class="line"> -N <span class="comment">#                       指定分区中创建多少个inode</span></span><br><span class="line"> -I                         一个inode记录占用的磁盘空间大小，128-4096</span><br><span class="line"> -m <span class="comment">#                       为管理人员预留空间占总空间的百分比，默认5%</span></span><br><span class="line"> -O FEATURE                 启用指定特性</span><br><span class="line"> -O ^FEATURE                关闭指定特性</span><br></pre></td></tr></table></figure><h4 id="2-2-4-2-查看和管理分区信息"><a href="#2-2-4-2-查看和管理分区信息" class="headerlink" title="2.2.4.2 查看和管理分区信息"></a>2.2.4.2 查看和管理分区信息</h4><p><strong>blkid 查看块设备属性信息</strong></p><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">blkid [option] [DEVICE]</span><br><span class="line"></span><br><span class="line">  option:</span><br><span class="line">    -U UUID: 根据指定的UUID来查找对应的设备</span><br><span class="line">    -L LABEL: 根据指定的LABEL来查找对应的设备</span><br></pre></td></tr></table></figure><p><strong>e2label：管理ext系列文件系统的LABEL</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2label DEVICE [LABEL]</span><br></pre></td></tr></table></figure><p><strong>findfs：查找分区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">findfs [options] LABEL=&lt;label&gt;</span><br><span class="line">findfs [options] UUID=&lt;uuid&gt;</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># findfs UUID=&quot;4ec1a2f6-693f-4d0a-a605-7335893cb82b&quot;</span></span><br><span class="line">/dev/sda1</span><br></pre></td></tr></table></figure><p><strong>tune2fs：重新设定ext系列文件系统可调整参数的值</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-l  查看指定文件系统超级块信息</span><br><span class="line">-L <span class="string">&#x27;LABEL&#x27;</span>  修改卷标</span><br><span class="line">-m <span class="comment">#  修改预留给管理员的空间百分比</span></span><br><span class="line">-j  将ext2升级为ext3</span><br><span class="line">-O  文件系统属性启用或禁用</span><br><span class="line">-o  调整文件系统的默认挂载选项</span><br><span class="line">-U UUID  修改UUID号</span><br></pre></td></tr></table></figure><p><strong>dumpe2fs：显示ext文件系统信息，将磁盘块分组管理</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">-h  查看超级块信息，不显示分组信息</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># dumpe2fs -h /dev/sdb1</span></span><br><span class="line">dumpe2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem volume name:   &lt;none&gt;</span><br><span class="line">Last mounted on:          /mnt/sdb1</span><br><span class="line">Filesystem UUID:          9e5c5fe3-be05-4c0b-95cd-9edda1c6c8cb</span><br><span class="line">Filesystem magic number:  0xEF53</span><br><span class="line">Filesystem revision <span class="comment">#:    1 (dynamic)</span></span><br><span class="line">Filesystem features:      has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file uninit_bg dir_nlink extra_isize</span><br><span class="line">Filesystem flags:         signed_directory_hash </span><br><span class="line">Default mount options:    user_xattr acl</span><br><span class="line">Filesystem state:         clean</span><br><span class="line">Errors behavior:          Continue</span><br><span class="line">Filesystem OS <span class="built_in">type</span>:       Linux</span><br><span class="line">Inode count:              131072</span><br><span class="line">Block count:              524288</span><br><span class="line">Reserved block count:     26214</span><br><span class="line">Free blocks:              88531</span><br><span class="line">Free inodes:              131060</span><br><span class="line">First block:              0</span><br><span class="line">Block size:               4096</span><br><span class="line">Fragment size:            4096</span><br><span class="line">Group descriptor size:    64</span><br><span class="line">Reserved GDT blocks:      255</span><br><span class="line">Blocks per group:         32768</span><br><span class="line">Fragments per group:      32768</span><br><span class="line">Inodes per group:         8192</span><br><span class="line">Inode blocks per group:   512</span><br><span class="line">Flex block group size:    16</span><br><span class="line">Filesystem created:       Mon Sep 12 20:13:42 2022</span><br><span class="line">Last mount time:          Thu Nov 17 20:43:15 2022</span><br><span class="line">Last write time:          Thu Nov 17 20:43:15 2022</span><br><span class="line">Mount count:              47</span><br><span class="line">Maximum mount count:      -1</span><br><span class="line">Last checked:             Mon Sep 12 20:13:42 2022</span><br><span class="line">Check interval:           0 (&lt;none&gt;)</span><br><span class="line">Lifetime writes:          2700 MB</span><br><span class="line">Reserved blocks uid:      0 (user root)</span><br><span class="line">Reserved blocks gid:      0 (group root)</span><br><span class="line">First inode:              11</span><br><span class="line">Inode size:          256</span><br><span class="line">Required extra isize:     28</span><br><span class="line">Desired extra isize:      28</span><br><span class="line">Journal inode:            8</span><br><span class="line">Default directory <span class="built_in">hash</span>:   half_md4</span><br><span class="line">Directory Hash Seed:      af9e86d0-9c2c-4caf-a4fd-da1266fc172a</span><br><span class="line">Journal backup:           inode blocks</span><br><span class="line">Journal features:         journal_incompat_revoke journal_64bit</span><br><span class="line">Journal size:             64M</span><br><span class="line">Journal length:           16384</span><br><span class="line">Journal sequence:         0x0000000c</span><br><span class="line">Journal start:            0</span><br></pre></td></tr></table></figure><p><strong>xfs_info：显示未挂载或已挂载的xfs文件系统信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">xfs_info mountpoint|devname</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># xfs_info /dev/sda1</span></span><br><span class="line">meta-data=/dev/sda1              isize=512    agcount=4, agsize=65536 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=1, sparse=1, rmapbt=0</span><br><span class="line">         =                       reflink=1</span><br><span class="line">data     =                       bsize=4096   blocks=262144, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0, ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><p><strong>超级块和 INODE TABEL</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221124213614993.png" alt="image-20221124213614993"></p><p><strong>块组描述符表（GDT）</strong></p><p>ext文件系统每一个块组信息使用32字节描述，这32个字节称为块组描述符，所有块组的块组描述符组成块组描述符表GDT(group descriptor table)。虽然每个块组都需要块组描述符来记录块组的信息和属性元数据，但是不是每个块组中都存放了块组描述符。将所有块组的块组信息组成一个GDT保存,并将该GDT存放于某些块组中，类似存放superblock和备份superblock的块。</p><h4 id="2-2-4-3-文件系统检测和修复"><a href="#2-2-4-3-文件系统检测和修复" class="headerlink" title="2.2.4.3 文件系统检测和修复"></a>2.2.4.3 文件系统检测和修复</h4><p>文件系统故障常发生于死机或者非正常关机之后，挂载文件系统标记为“no clean”</p><p>​    注：进行磁盘修复时一定要取消文件系统的挂载</p><p>fsck：File System Check</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fsck.FS_TYPE</span><br><span class="line">fsck -t FS_TYPE</span><br><span class="line">  注：FS_TYPE 一定要与分区上的文件系统相同</span><br><span class="line">  </span><br><span class="line">常用选项:</span><br><span class="line">  -a 自动修复</span><br><span class="line">  -r 交互式修复错误</span><br></pre></td></tr></table></figure><p>e2fsck：ext 系列文件专用的检测修复工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-y 自动回答 <span class="built_in">yes</span></span><br><span class="line">-f 强制修复</span><br><span class="line">-p 安全的进行文件系统的修复</span><br></pre></td></tr></table></figure><p>xfs_repair：xfs文件系统专用检测修复工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f 修复文件</span><br><span class="line">-n 只检查</span><br><span class="line">-d 紧急修复。允许修复只读的挂载设备，在单用户下修复 / 时使用，然后立即reboot</span><br></pre></td></tr></table></figure><p>示例：修改破坏的ext文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># !df</span></span><br><span class="line"><span class="built_in">df</span> -Th /dev/sdc</span><br><span class="line">Filesystem     Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sdc       ext4  9.8G   37M  9.3G   1% /mnt/sdc</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls /mnt/sdc/</span></span><br><span class="line">fstab  lost+found  passwd</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># dd if=/dev/zero of=/dev/sdc bs=1M count=1</span></span><br><span class="line">1+0 records <span class="keyword">in</span></span><br><span class="line">1+0 records out</span><br><span class="line">1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00332407 s, 315 MB/s</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls /mnt/sdc/  </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tune2fs -l /dev/sdc</span></span><br><span class="line">tune2fs 1.45.6 (20-Mar-2020)</span><br><span class="line">tune2fs: Bad magic number <span class="keyword">in</span> super-block <span class="keyword">while</span> trying to open /dev/sdc</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /dev/sdc</span></span><br><span class="line">Filesystem     Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sdc       ext4   64Z   64Z  9.8G 100% /mnt/sdc</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># umount /mnt/sdc </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># e2fsck -y -f /dev/sdc</span></span><br><span class="line">e2fsck 1.45.6 (20-Mar-2020)</span><br><span class="line">ext2fs_open2: Bad magic number <span class="keyword">in</span> super-block</span><br><span class="line">e2fsck: Superblock invalid, trying backup blocks...</span><br><span class="line">Resize inode not valid.  Recreate? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Pass 1: Checking inodes, blocks, and sizes</span><br><span class="line">Pass 2: Checking directory structure</span><br><span class="line">Pass 3: Checking directory connectivity</span><br><span class="line">Pass 4: Checking reference counts</span><br><span class="line">Pass 5: Checking group summary information</span><br><span class="line">Block bitmap differences:  +(98304--99330) +(163840--164866) +(229376--230402) +(294912--295938) +(819200--820226) +(884736--885762) +(1605632--1606658)</span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Free blocks count wrong <span class="keyword">for</span> group <span class="comment">#0 (23510, counted=23511).</span></span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Free blocks count wrong <span class="keyword">for</span> group <span class="comment">#1 (31741, counted=31739).</span></span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Free blocks count wrong (2554686, counted=2554685).</span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Free inodes count wrong <span class="keyword">for</span> group <span class="comment">#0 (8181, counted=8179).</span></span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Free inodes count wrong (655349, counted=655347).</span><br><span class="line">Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line">Padding at end of inode bitmap is not <span class="built_in">set</span>. Fix? <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/dev/sdc: ***** FILE SYSTEM WAS MODIFIED *****</span><br><span class="line">/dev/sdc: 13/655360 files (0.0% non-contiguous), 66755/2621440 blocks</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tune2fs -l  /dev/sdc</span></span><br><span class="line">tune2fs 1.45.6 (20-Mar-2020)</span><br><span class="line">Filesystem volume name:   &lt;none&gt;</span><br><span class="line">Last mounted on:          &lt;not available&gt;</span><br><span class="line">Filesystem UUID:          0a133b5e-e5f7-466e-8693-2250f0398266</span><br><span class="line">Filesystem magic number:  0xEF53</span><br><span class="line">Filesystem revision <span class="comment">#:    1 (dynamic)</span></span><br><span class="line">Filesystem features:      has_journal ext_attr resize_inode dir_index filetype extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum</span><br><span class="line">Filesystem flags:         signed_directory_hash </span><br><span class="line">Default mount options:    user_xattr acl</span><br><span class="line">Filesystem state:         clean</span><br><span class="line">Errors behavior:          Continue</span><br><span class="line">Filesystem OS <span class="built_in">type</span>:       Linux</span><br><span class="line">Inode count:              655360</span><br><span class="line">Block count:              2621440</span><br><span class="line">Reserved block count:     131072</span><br><span class="line">Free blocks:              2554685</span><br><span class="line">Free inodes:              655347</span><br><span class="line">First block:              0</span><br><span class="line">Block size:               4096</span><br><span class="line">Fragment size:            4096</span><br><span class="line">Group descriptor size:    64</span><br><span class="line">Reserved GDT blocks:      1024</span><br><span class="line">Blocks per group:         32768</span><br><span class="line">Fragments per group:      32768</span><br><span class="line">Inodes per group:         8192</span><br><span class="line">Inode blocks per group:   512</span><br><span class="line">Flex block group size:    16</span><br><span class="line">Filesystem created:       Fri Nov 25 21:52:06 2022</span><br><span class="line">Last mount time:          n/a</span><br><span class="line">Last write time:          Fri Nov 25 21:56:53 2022</span><br><span class="line">Mount count:              0</span><br><span class="line">Maximum mount count:      -1</span><br><span class="line">Last checked:             Fri Nov 25 21:56:53 2022</span><br><span class="line">Check interval:           0 (&lt;none&gt;)</span><br><span class="line">Lifetime writes:          8 MB</span><br><span class="line">Reserved blocks uid:      0 (user root)</span><br><span class="line">Reserved blocks gid:      0 (group root)</span><br><span class="line">First inode:              11</span><br><span class="line">Inode size:          256</span><br><span class="line">Required extra isize:     32</span><br><span class="line">Desired extra isize:      32</span><br><span class="line">Journal inode:            8</span><br><span class="line">Default directory <span class="built_in">hash</span>:   half_md4</span><br><span class="line">Directory Hash Seed:      7e999f31-eee7-479f-ad7f-f3d1f3f1b409</span><br><span class="line">Journal backup:           inode blocks</span><br><span class="line">Checksum <span class="built_in">type</span>:            crc32c</span><br><span class="line">Checksum:                 0xd4f66ca7</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount /dev/sdc /mnt/sdc/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls /mnt/sdc/</span></span><br><span class="line">fstab  lost+found  passwd</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /mnt/fstab </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># /etc/fstab</span></span><br><span class="line"><span class="comment"># Created by anaconda on Sun Mar 13 06:11:42 2022</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk/&#x27;.</span></span><br><span class="line"><span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># After editing this file, run &#x27;systemctl daemon-reload&#x27; to update systemd</span></span><br><span class="line"><span class="comment"># units generated from this file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/dev/mapper/rl-root     /                       xfs     defaults        0 0</span><br><span class="line">UUID=4ec1a2f6-693f-4d0a-a605-7335893cb82b /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/rl-data     /data                   ext4    defaults        1 2</span><br><span class="line">/dev/mapper/rl-swap     none                    swap    defaults        0 0</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /dev/sdc</span></span><br><span class="line">Filesystem     Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sdc       ext4  9.8G   37M  9.3G   1% /mnt/sdc</span><br></pre></td></tr></table></figure><h2 id="2-3-挂载"><a href="#2-3-挂载" class="headerlink" title="2.3 挂载"></a>2.3 挂载</h2><p>挂载：将额外文件系统与根文件系统某现存目录建立连接关系，使该目录作为访问该文件系统的入口</p><p>卸载：取消该关联关系的过程</p><p>挂载点原有文件在挂载完成后会被临时隐藏，因此，挂载点目录一般为空；挂载的设备正在使用中时无法被卸载</p><h3 id="2-3-1-挂载文件系统-mount"><a href="#2-3-1-挂载文件系统-mount" class="headerlink" title="2.3.1 挂载文件系统 mount"></a>2.3.1 挂载文件系统 mount</h3><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mount [-fnrsvw] [-t vfstype] [-o options] device mountpoint</span><br><span class="line"></span><br><span class="line">device: 指明要挂载的设备</span><br><span class="line">  · 设备文件：如 /dev/sda1</span><br><span class="line">  · 卷标：-L <span class="string">&#x27;LABEL&#x27;</span></span><br><span class="line">  · UUID：-U <span class="string">&#x27;UUID&#x27;</span></span><br><span class="line">  · 伪文件系统名称：proc, sysfs, devtmpfs, configfs</span><br><span class="line">  </span><br><span class="line">mountpoint: 挂载点目录必须事先存在, 建议使用空目录</span><br></pre></td></tr></table></figure><p>mount 常用命令选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-t fstype             指定要挂载的设备上的文件系统类型，如ext4、xfs</span><br><span class="line">-r                    <span class="built_in">readonly</span>，只读挂载</span><br><span class="line">-w                    <span class="built_in">read</span> and write，读写挂载，默认选项</span><br><span class="line">-n                    不更新/etc/mtab，mount 不可见</span><br><span class="line">-a                    自动挂载设备（定义在/etc/fstab文件中，且挂载选项中有auto功能）</span><br><span class="line">-L <span class="string">&#x27;LABEL&#x27;</span>            以卷标指定挂载设备</span><br><span class="line">-U <span class="string">&#x27;UUID&#x27;</span>             以UUID指定要挂载的设备</span><br><span class="line">-B, --<span class="built_in">bind</span>            绑定目录到另一个目录上</span><br><span class="line">-o options: (挂载文件系统的选项，多个选项之间使用逗号分隔)</span><br><span class="line">    async                   异步模式，内存更改，先写入缓冲区，之后写入磁盘，效率高，但不安全</span><br><span class="line">    <span class="built_in">sync</span>                    同步模式，内存更改直接写入磁盘，安全但效率低</span><br><span class="line">    atime/noatime           包含目录和文件</span><br><span class="line">    diratime/nodiratime     目录的访问时间戳</span><br><span class="line">    auto/noauto             是否支持开机自动选项，即是否支持-a选项</span><br><span class="line">    <span class="built_in">exec</span>/noexec             是否支持在文件系统上运行应用程序</span><br><span class="line">    suid/nosuid             是否支持suid和sgid权限</span><br><span class="line">    remount                 重新挂载</span><br><span class="line">    ro/rw                   只读、读写</span><br><span class="line">    user/nouser             是否允许普通用户挂载此设备，在/etc/fstab中使用</span><br><span class="line">    acl/noacl               启用此文件系统上的acl功能</span><br><span class="line">    loop                    使用loop设备</span><br><span class="line">    _netdev                 当网络可用时对网络资源进行挂载，如 NFS 文件系统</span><br><span class="line">    defaults                相当于rw, suid, dev, <span class="built_in">exec</span>, auto, nouser, async</span><br></pre></td></tr></table></figure><p>挂载规则：</p><ul><li>一个挂载点同一时间只能挂载一个设备</li><li>一个挂载点同一时间挂载了多个设备，只能看到最后一个设备的数据，其它设备上的数据将被隐藏</li><li>一个设备可以同时挂载到多个挂载点</li><li>通常挂载点一般是已经存在的空目录</li></ul><h3 id="2-3-2-卸载文件系统-umount"><a href="#2-3-2-卸载文件系统-umount" class="headerlink" title="2.3.2 卸载文件系统 umount"></a>2.3.2 卸载文件系统 umount</h3><p>卸载：可使用设备，也可以使用挂载点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount 设备名|挂载点</span><br></pre></td></tr></table></figure><h3 id="2-3-3-查看挂载情况"><a href="#2-3-3-查看挂载情况" class="headerlink" title="2.3.3 查看挂载情况"></a>2.3.3 查看挂载情况</h3><p>查看挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 通过查看/etc/mtab文件显示当前已挂载的所有设备</span><br><span class="line">(2) mount</span><br><span class="line">(3) 查看内核追踪到的已挂载的所有设备 <span class="built_in">cat</span> /proc/mounts</span><br></pre></td></tr></table></figure><p>查看挂载点情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findmnt MOUNT_POINT | DEVICE</span><br></pre></td></tr></table></figure><p>查看正在访问指定文件系统的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof MOUNT_POINT</span><br><span class="line">fuser -v MOUNT_POINT</span><br></pre></td></tr></table></figure><p>终止所有正在访问指定的文件系统的进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fuser -km MOUNT_POINT</span><br></pre></td></tr></table></figure><h3 id="2-3-4-持久挂载"><a href="#2-3-4-持久挂载" class="headerlink" title="2.3.4 持久挂载"></a>2.3.4 持久挂载</h3><p>将挂载信息写入到 &#x2F;etc&#x2F;fstab 文件中，下次开机时实现自动挂载；写入后，可使用<code>mount -a</code>及时生效</p><p>&#x2F;etc&#x2F;fstab 格式帮助<code>man 5 fstab</code></p><p>该文件中，每行定义一个要挂载的文件系统，包括如下选项</p><ul><li>要挂载的设备或伪文件系统<ul><li>设备文件</li><li>LABEL：LABEL&#x3D;“”</li><li>UUID：UUID&#x3D;“”</li><li>伪文件系统名称：proc，sysfs</li></ul></li><li>挂载点：必须是事先存在的目录</li><li>文件系统类型：ext4，xfs，iso9600，nfs，none</li><li>挂载选项：defaults，acl，bind</li><li>转储频率：0 不做备份，1 每天转储，2 每隔一天转储</li><li>fsck 检查文件系统的顺序：0 不自检，1 首先自检 一般rootfs使用，2 非rootfs使用</li></ul><p>示例：Centos7，8 中 &#x2F;etc&#x2F;fstab 的分区UUID错误导致系统无法启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">系统进入到 Emergency mode，输入 root 密码</span><br><span class="line"><span class="built_in">cat</span> /proc/mounts    可以看见 / 以读写形式挂载</span><br><span class="line">vim /etc/fstab      修改错误的挂载信息</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>示例：Centos6 中 &#x2F;etc&#x2F;fstab 的分区挂载信息错误导致无法正常启动操作系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若挂载设备的文件系统出现错误，且实行开机自检，修改 /etc/fstab 文件时，需要修改为0（开机不自检）</span></span><br><span class="line">系统自动进入到 Emergency mode，输入 root 密码</span><br><span class="line"><span class="built_in">cat</span> /proc/mounts    可以看见 / 以只读形式挂载，无法直接修改配置文件</span><br><span class="line">mount -o remount,rw /</span><br><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><h2 id="2-4-处理交换文件和分区"><a href="#2-4-处理交换文件和分区" class="headerlink" title="2.4 处理交换文件和分区"></a>2.4 处理交换文件和分区</h2><h3 id="2-4-1-swap"><a href="#2-4-1-swap" class="headerlink" title="2.4.1 swap"></a>2.4.1 swap</h3><p>swap 交换分区是系统RAM的补充，swap 分区支持虚拟内存。当没有足够的 RAM 保存系统处理的数据时会将数据写入swap分区，当系统缺乏 swap 空间时，内核会因 RAM 内存耗尽而终止进程。过多的 swap 空间会造成存储设备处于分配状态但闲置，造成浪费，过多 swap 空间还会掩盖内存泄露。</p><p>推荐 swap 空间的分配</p><table><thead><tr><th>系统中的 RAM 大小</th><th>推荐的 swap 空间</th><th>允许休眠的 swap 空间大小建议</th></tr></thead><tbody><tr><td>低于2GB</td><td>RAM 大小的2倍</td><td>RAM 大小的3倍</td></tr><tr><td>2GB - 8GB</td><td>等于 RAM 的大小</td><td>等于 RAM 的大小</td></tr><tr><td>8GB - 64GB</td><td>4GB 至 RAM 空间大小的0.5倍</td><td>RAM 空间大小的 1.5 倍</td></tr><tr><td>超过 64GB</td><td>独立负载（至少4GB）</td><td>不建议使用休眠功能</td></tr></tbody></table><h3 id="2-4-2-交换分区的实现过程"><a href="#2-4-2-交换分区的实现过程" class="headerlink" title="2.4.2 交换分区的实现过程"></a>2.4.2 交换分区的实现过程</h3><p>1、创建交换分区或文件</p><p>2、使用mkswap写入特殊签名</p><p>3、在 &#x2F;etc&#x2F;fstab 文件中添加挂载项</p><p>4、使用<code>swapon -a</code>激活交换空间</p><p>启用swap分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">swapon [options] [DEVICES]</span><br><span class="line"></span><br><span class="line">[options]</span><br><span class="line">  -a  激活所有交换分区</span><br><span class="line">  -p priority  指定优先级，或在/etc/fstab文件中的第4列指定 pri=value</span><br></pre></td></tr></table></figure><p>示例：创建交换分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo -e &quot;n\np\n\n+1G\nt\82\nw\n&quot; | fdisk /dev/sdb</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># partprobe</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># mkswap /dev/sdb2</span></span><br><span class="line">Setting up swapspace version 1, size = 1048572 KiB</span><br><span class="line">no label, UUID=84124053-781e-4f29-821a-3bbed29a13fa</span><br><span class="line">[root@centos7 ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">UUID=84124053-781e-4f29-821a-3bbed29a13fa swap swap     defaults        0 0</span><br><span class="line">[root@centos7 ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.8G        187M        1.4G        9.6M        186M        1.4G</span><br><span class="line">Swap:          3.0G          0B        3.0G</span><br><span class="line"><span class="comment"># 优先级越大越优先</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /proc/swaps </span></span><br><span class="line">FilenameTypeSizeUsedPriority</span><br><span class="line">/dev/dm-1                               partition20971480-2</span><br><span class="line">/dev/sdb2                               partition10485720-3</span><br></pre></td></tr></table></figure><p>禁用swap分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">swapoff [option] [device]</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">sed -i.bak <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><p><strong>swap 优先级</strong></p><p>可以指定swap分区的优先级从0到32767，值越大优先级越高</p><p>如果没有指定，会自动指定一个优先级，从-1开始。每加入一个没有指定优先级的swap，优先级减一</p><p>先添加的swap的缺省优先级高 ，用户可以指定优先级且必须是正数，那么永远高于默认指定的优先级</p><p>示例：以文件形式实现swap功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># dd if=/dev/zero of=/root/swapfile bs=1M count=1024</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkswap swapfile</span></span><br><span class="line"><span class="comment"># 此处挂载直接使用文件名称，不要使用UUID</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">/root/swapfile          swap                    swap    defaults        0 0</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># chmod 600 /root/swapfile </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># swapon -a</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># swapon -s</span></span><br><span class="line">FilenameTypeSizeUsedPriority</span><br><span class="line">/dev/dm-1                              partition20971480-2</span><br><span class="line">/root/swapfile                         file    10485720-3</span><br></pre></td></tr></table></figure><h3 id="2-4-3-swap-的使用策略"><a href="#2-4-3-swap-的使用策略" class="headerlink" title="2.4.3 swap 的使用策略"></a>2.4.3 swap 的使用策略</h3><p><code>/proc/sys/vm/swappiness</code>的值决定了当内存占用达到一定的百分比时，会启用swap分区的空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/sys/vm/swappiness </span></span><br><span class="line">30</span><br><span class="line">root@ubuntu18-server:~<span class="comment"># cat /proc/sys/vm/swappiness</span></span><br><span class="line">60</span><br></pre></td></tr></table></figure><p>注：内存使用到100-30&#x3D;70%的时候，就开始出现有交换分区的使用。简单的说这个参数定义了系统对swap的使用倾向，值越大越倾向于使用swap。可以设置为0，但并不会禁止对swap的使用，只是最大限度的降低使用swap。</p><h2 id="2-5-磁盘常见工具"><a href="#2-5-磁盘常见工具" class="headerlink" title="2.5 磁盘常见工具"></a>2.5 磁盘常见工具</h2><h3 id="2-5-1-文件系统实际占用空间查看工具-df"><a href="#2-5-1-文件系统实际占用空间查看工具-df" class="headerlink" title="2.5.1 文件系统实际占用空间查看工具 df"></a>2.5.1 文件系统实际占用空间查看工具 df</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> [option] [device]</span><br><span class="line"></span><br><span class="line">常用选项：</span><br><span class="line"> -H  以10为单位</span><br><span class="line"> -T  文件系统类型</span><br><span class="line"> -h  易于阅读</span><br><span class="line"> -i  使用inode的使用情况代替block的使用情况</span><br><span class="line"> -P  以POSIX兼容的格式输出</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th</span></span><br><span class="line">Filesystem          Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs            devtmpfs  877M     0  877M   0% /dev</span><br><span class="line">tmpfs               tmpfs     896M     0  896M   0% /dev/shm</span><br><span class="line">tmpfs               tmpfs     896M  8.8M  887M   1% /run</span><br><span class="line">tmpfs               tmpfs     896M     0  896M   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root xfs        30G  3.1G   27G  11% /</span><br><span class="line">/dev/sda1           xfs      1014M  212M  803M  21% /boot</span><br><span class="line">/dev/mapper/rl-data ext4       17G   54M   16G   1% /data</span><br><span class="line">tmpfs               tmpfs     180M     0  180M   0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lsblk -f</span></span><br><span class="line">NAME        FSTYPE      LABEL                UUID                                   MOUNTPOINT</span><br><span class="line">sda                                                                                 </span><br><span class="line">├─sda1      xfs                              4ec1a2f6-693f-4d0a-a605-7335893cb82b   /boot</span><br><span class="line">└─sda2      LVM2_member                      odzCiV-0bL1-GIR3-7651-S41G-ZvHI-8Mm2Y3 </span><br><span class="line">  ├─rl-root xfs                              62ae4f5a-be31-4cf7-ab63-b33f57740bbd   /</span><br><span class="line">  ├─rl-swap swap                             e342fd6e-55ce-4947-802a-38e589a95440   [SWAP]</span><br><span class="line">  └─rl-data ext4                             fefe9937-ef64-40af-a057-0a126274aba5   /data</span><br><span class="line">sdb                                                                                 </span><br><span class="line">sdc                                                                                 </span><br><span class="line">sr0         iso9660     Rocky-8-5-x86_64-dvd 2021-11-14-09-31-13-00</span><br></pre></td></tr></table></figure><h3 id="2-5-2-查看目录空间的使用情况-du"><a href="#2-5-2-查看目录空间的使用情况-du" class="headerlink" title="2.5.2 查看目录空间的使用情况 du"></a>2.5.2 查看目录空间的使用情况 du</h3><p>显示指定目录下各个子目录的大小，单位为KB</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> [option] DIR</span><br><span class="line"></span><br><span class="line">常用选项</span><br><span class="line"> -h    易于阅读</span><br><span class="line"> -s    summary</span><br><span class="line"> --max-depth=<span class="comment">#    指定最大的目录层</span></span><br><span class="line"> -x, --one-file-system    忽略不在同一个文件系统的目录</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># du -h -x --max-depth=1 /</span></span><br><span class="line">24M/etc</span><br><span class="line">1.1G/root</span><br><span class="line">233M/var</span><br><span class="line">1.5G/usr</span><br><span class="line">36K/home</span><br><span class="line">0/media</span><br><span class="line">0/mnt</span><br><span class="line">33M/opt</span><br><span class="line">0/srv</span><br><span class="line">4.0K/tmp</span><br><span class="line">24M/backup</span><br><span class="line">2.8G/</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># du -s -h -x  /</span></span><br><span class="line">2.8G/</span><br></pre></td></tr></table></figure><p>面试题：df 和 du 的区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> 查看文件系统的大小</span><br><span class="line"><span class="built_in">du</span> 查看的是目录中所有文件的大小</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刚创建的文件系统 df &gt; du </span></span><br><span class="line">刚创建一个文件系统时，没有产生任何数据，使用<span class="built_in">df</span>查看会因为文件系统中的元数据而造成<span class="built_in">df</span>查看的大小比<span class="built_in">du</span>查看的空间要大</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录中挂载其它分区 df &lt; du</span></span><br><span class="line">当一个目录中存在被其它分区挂载的挂载点，使用<span class="built_in">df</span>只会统计该目录的文件系统大小，挂载的设备分区不会统计；而使用<span class="built_in">du</span>命令查看时，它只关系该目录中的文件占用了多少空间，会将挂载点的其它分区使用大小也会计算进去</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件但不释放空间时 df &gt; du</span></span><br><span class="line">当某一个文件正在使用，如果此时将它删除，那么该文件不会立刻释放。使用<span class="built_in">df</span>查看会认为该文件没有释放，但使用<span class="built_in">du</span>查看会认为该文件被删除了，所以不存在。此时<span class="built_in">df</span>查看的空间比<span class="built_in">du</span>查看的空间要大</span><br></pre></td></tr></table></figure><h3 id="2-5-3-dd-工具"><a href="#2-5-3-dd-工具" class="headerlink" title="2.5.3 dd 工具"></a>2.5.3 dd 工具</h3><p>dd：Copy a file, converting and formatting according to the operands.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">格式</span><br><span class="line">  <span class="built_in">dd</span> <span class="keyword">if</span>=/PATH/SRC_FILE of=/PATH/DEST_FILE bs=<span class="comment"># count=#</span></span><br><span class="line">  </span><br><span class="line">常用选项</span><br><span class="line">  <span class="keyword">if</span>=file       <span class="built_in">read</span> from FILE instead of stdin</span><br><span class="line">  of=file       write to FILE instead of stdout</span><br><span class="line">  ibs=size      <span class="built_in">read</span> up to BYTES bytes at a time (default: 512)</span><br><span class="line">  obs=size      write BYTES bytes at a time (default: 512)</span><br><span class="line">  bs=size       <span class="built_in">read</span> and write up to BYTES bytes at a time (default: 512); overrides ibs and obs</span><br><span class="line">  cbs=size      convert BYTES bytes at a time</span><br><span class="line">  skip=N        skip N ibs-sized blocks at start of input</span><br><span class="line">  seek=N        skip N obs-sized blocks at start of output</span><br><span class="line">  count=N       copy only N input blocks</span><br><span class="line">  conv=conversion    convert the file as per the comma separated symbol list</span><br><span class="line">  </span><br><span class="line">  conversion 转换参数:</span><br><span class="line">    ascii    from EBCDIC to ASCII</span><br><span class="line">    ebcdic   from ASCII to EBCDIC</span><br><span class="line">    lcase    change upper <span class="keyword">case</span> to lower <span class="keyword">case</span></span><br><span class="line">    ucase    change lower <span class="keyword">case</span> to upper <span class="keyword">case</span></span><br><span class="line">    nocreat  <span class="keyword">do</span> not create the output file</span><br><span class="line">    noerror  <span class="built_in">continue</span> after <span class="built_in">read</span> errors</span><br><span class="line">    notrunc  <span class="keyword">do</span> not <span class="built_in">truncate</span> the output file</span><br><span class="line">    <span class="built_in">sync</span>     pad  every  input  block with NULs to ibs-size; when used with block or unblock, pad with spaces rather than NULs</span><br><span class="line">    fdatasync  physically write output file data before finishing</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f1.txt f2.txt </span></span><br><span class="line">abcdefg</span><br><span class="line">123456789</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># dd if=f1.txt of=f2.txt bs=1 count=2 skip=3 seek=4</span></span><br><span class="line">2+0 records <span class="keyword">in</span></span><br><span class="line">2+0 records out</span><br><span class="line">2 bytes copied, 0.000114454 s, 17.5 kB/s</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f2.txt </span></span><br><span class="line">1234de[root@Rocky8-mini ~]<span class="comment"># echo 123456789 &gt; f2.txt</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f1.txt f2.txt </span></span><br><span class="line">abcdefg</span><br><span class="line">123456789</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># dd if=f1.txt of=f2.txt bs=1 count=2 skip=3 seek=4 conv=notrunc</span></span><br><span class="line">2+0 records <span class="keyword">in</span></span><br><span class="line">2+0 records out</span><br><span class="line">2 bytes copied, 8.7494e-05 s, 22.9 kB/s</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f2.txt </span></span><br><span class="line">1234de789</span><br></pre></td></tr></table></figure><p>示例2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份MBR</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sda of=/tmp/mbr.bak bs=512 count=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 破坏MBR中的BootLoader</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=64 count=1 seek=446</span><br><span class="line"></span><br><span class="line"><span class="comment"># 有一个大于2K的二进制文件fileA。现想从第64个字节开始读取，需要读取128 Bytes。又有文件fileB，想将之前读取到的128 Bytes写入到第32字节开始的位置，替换128字节。</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=fileA of=fileB bs=1 count=128 skip=63 seek=31 conv=notrunc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将本地的/dev/sdx整盘备份到/dev/sdy中</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sdx of=/dev/sdy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将/dev/sdx全盘数据备份到指定路径的image文件</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sdx of=/PATH/TO/image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份/dev/sdx全盘数据，并利用gzip压缩，保存到指定路径</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/sdx | gzip &gt; /path/to/image.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将备份文件恢复到指定盘</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/path/to/image of=/dev/sdx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将压缩的备份文件恢复到指定盘</span></span><br><span class="line">gzip -dc /path/to/image.gz | <span class="built_in">dd</span> of=/dev/sdx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝光盘数据到root文件夹中，并保存为cdrom.iso文件</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/cdrom of=/root/cdrom.iso</span><br><span class="line"></span><br><span class="line"><span class="comment"># 销毁磁盘数据</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/urandom of=/dev/sda1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试硬盘写速度</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/dev/zero of=/root/1Gb.file bs=1024 count=1000000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试硬盘读速度</span></span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=/root/1Gb.file bs=64k | <span class="built_in">dd</span> of=/dev/null</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1、创建一个2G的文件系统，块大小为2048byte，预留1%可用空间,文件系统ext4，卷标为TEST，要求此分区开机后自动挂载至&#x2F;test目录，且默认有acl挂载选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个2G大小的空间</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lsblk /dev/sdb</span></span><br><span class="line">NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sdb      8:16   0  20G  0 disk </span><br><span class="line">└─sdb1   8:17   0   2G  0 part</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建文件系统</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mke2fs -t ext4 -b 2048 -L &#x27;TEST&#x27; -m 1 /dev/sdb1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># blkid /dev/sdb1</span></span><br><span class="line">/dev/sdb1: LABEL=<span class="string">&quot;TEST&quot;</span> UUID=<span class="string">&quot;de913645-871f-40bf-a737-820ace5def18&quot;</span> BLOCK_SIZE=<span class="string">&quot;2048&quot;</span> TYPE=<span class="string">&quot;ext4&quot;</span> PARTUUID=<span class="string">&quot;c4a635d0-01&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 持久挂载</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkdir /test</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/fstab</span></span><br><span class="line">/dev/sdb1              /test                    ext4    acl             0 0</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount -a</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /dev/sdb1</span></span><br><span class="line">Filesystem     Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sdb1      ext4  2.0G  9.1M  2.0G   1% /test</span><br></pre></td></tr></table></figure><h1 id="三、RAID"><a href="#三、RAID" class="headerlink" title="三、RAID"></a>三、RAID</h1><h2 id="3-1-什么是RAID"><a href="#3-1-什么是RAID" class="headerlink" title="3.1 什么是RAID"></a>3.1 什么是RAID</h2><p>独立硬盘冗余阵列（RAID, Redundant Array of Independent Disks），旧称廉价磁盘冗余阵列（Redundant Array of Inexpensive Disks），简称磁盘阵列。利用虚拟化存储技术把多个硬盘组合起来，成为一个或多个硬盘阵列组，目的为提升性能或数据冗余，或是两者同时提升。</p><p>RAID 层级不同，数据会以多种模式分散于各个硬盘，RAID 层级的命名会以 RAID 开头并带数字，例如：RAID 0、RAID 1、RAID 5、RAID 6、RAID 7、RAID 01、RAID 10、RAID 50、RAID 60。每种模式都有其理论上的优缺点，不同的等级在两个目标间获取平衡，分别是增加数据可靠性以及增加存储器（群）读写性能。</p><h2 id="3-2-RAID-级别"><a href="#3-2-RAID-级别" class="headerlink" title="3.2 RAID 级别"></a>3.2 RAID 级别</h2><h3 id="3-2-1-RAID-0"><a href="#3-2-1-RAID-0" class="headerlink" title="3.2.1 RAID 0"></a>3.2.1 RAID 0</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202456048.png" alt="image-20221121202456048" style="zoom:80%;" /><p>条带卷<br>最少两块<br>可用空间：N * min(disk1, disk2, …)<br>无容错</p><h3 id="3-2-2-RAID-1"><a href="#3-2-2-RAID-1" class="headerlink" title="3.2.2 RAID 1"></a>3.2.2 RAID 1</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202550639.png" alt="image-20221121202550639" style="zoom:80%;" /><p>读性能略有提升，写性能略有下降<br>利用率：50%<br>可用空间：1 * min(disk1, disk2, …)<br>有冗余<br>最少两块</p><h3 id="3-2-3-RAID-4"><a href="#3-2-3-RAID-4" class="headerlink" title="3.2.3 RAID 4"></a>3.2.3 RAID 4</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202614625.png" alt="image-20221121202614625" style="zoom:80%;" /><p>其中一块磁盘保存其余磁盘信息的奇偶校验<br>利用率：(N-1)&#x2F;N<br>有冗余<br>至少3块</p><h3 id="3-2-4-RAID-5"><a href="#3-2-4-RAID-5" class="headerlink" title="3.2.4 RAID 5"></a>3.2.4 RAID 5</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202658516.png" alt="image-20221121202658516" style="zoom:80%;" /><p>阵列数据的奇偶校验信息分布在阵列的所有磁盘上<br>利用率：(N-1)&#x2F;N<br>有容错<br>至少3块</p><h3 id="3-2-5-RAID-6"><a href="#3-2-5-RAID-6" class="headerlink" title="3.2.5 RAID 6"></a>3.2.5 RAID 6</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202720771.png" alt="image-20221121202720771" style="zoom:80%;" /><p>类似于 RAID5，双奇偶校验信息位<br>利用率：(N-2)&#x2F;N<br>有容错<br>至少4块</p><h3 id="3-2-6-RAID-10"><a href="#3-2-6-RAID-10" class="headerlink" title="3.2.6 RAID 10"></a>3.2.6 RAID 10</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202756833.png" alt="image-20221121202756833" style="zoom:80%;" /><p>多块磁盘先组合成 RAID 1，在两两组合成 RAID 0<br>至少4块</p><h3 id="3-2-7-RAID-01"><a href="#3-2-7-RAID-01" class="headerlink" title="3.2.7 RAID 01"></a>3.2.7 RAID 01</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202831767.png" alt="image-20221121202831767" style="zoom:80%;" /><p>多块磁盘先组合成 RAID 0，在两两组合成 RAID 1<br>至少4块</p><h3 id="3-2-8-RAID-50"><a href="#3-2-8-RAID-50" class="headerlink" title="3.2.8 RAID 50"></a>3.2.8 RAID 50</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202903746.png" alt="image-20221121202903746" style="zoom:80%;" /><p>多块磁盘先组合成 RAID 5，再组合成 RAID 0<br>至少6块</p><h3 id="3-2-9-RAID-60"><a href="#3-2-9-RAID-60" class="headerlink" title="3.2.9 RAID 60"></a>3.2.9 RAID 60</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221121202946490.png" alt="image-20221121202946490" style="zoom:80%;" /><p>多块磁盘先组合成 RAID 6，再组合成 RAID 0<br>至少6块</p><h3 id="3-2-10-其它级别"><a href="#3-2-10-其它级别" class="headerlink" title="3.2.10 其它级别"></a>3.2.10 其它级别</h3><p><strong>JBOD：Just a Bunch Of Disks</strong></p><p>功能：将多块磁盘的空间合并成一个大的连续的空间使用<br>第一块磁盘存放所有磁盘的分段信息，如果损坏，整个阵列会失败；后续磁盘损坏只会影响本块磁盘的数据</p><p><strong>RAID 7</strong></p><p>RAID 7并非公开的RAID标准，而是Storage Computer Corporation的专利硬件产品名称，RAID 7是以RAID 3及RAID 4为基础所发展，但是经过强化以解决原来的一些限制。另外，在实现中使用大量的缓冲存储器以及用以实现异步数组管理的专用即时处理器，使得RAID 7可以同时处理大量的IO要求，所以性能甚至超越了许多其他RAID标准的实现产品。但也因为如此，在价格方面非常的高昂。</p><p><strong>SHR(Synology Hybrid RAID)</strong></p><p>群辉公司的技术，适合不了解RAID的普通用户，根据磁盘的个数自动组成不同的RAID，只支持群辉系统</p><h3 id="3-2-11-RAID-总结"><a href="#3-2-11-RAID-总结" class="headerlink" title="3.2.11 RAID 总结"></a>3.2.11 RAID 总结</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221127190830485.png" alt="image-20221127190830485"  /><h1 id="四、逻辑卷管理器"><a href="#四、逻辑卷管理器" class="headerlink" title="四、逻辑卷管理器"></a>四、逻辑卷管理器</h1><h2 id="4-1-LVM-介绍"><a href="#4-1-LVM-介绍" class="headerlink" title="4.1 LVM 介绍"></a>4.1 LVM 介绍</h2><p>LVM：Logical Volume Manager 可以允许对卷进行方便操作的抽象层，包括重新设定文件系统的大小，允许在多个物理设备之间重新组织文件系统</p><p>实现过程：</p><ul><li>将设备指定成物理卷</li><li>用一个或多个物理卷组成一个卷组</li><li>在卷组中分配空间创建逻辑卷</li><li>逻辑卷中创建文件系统并挂载</li></ul><p>PV 加入到 VG 中后，VG 在逻辑层次上将空间划分成固定大小的块，称之为 PE（默认为 4M）；在 VG 上创建 LV 时，就是在 VG 中指定特定数量的 PE 来组织成 LV 的大小，当 PE 被分配给 LV 时，在 LV 中的存储概念称之为 LE。</p><p>物理区域–PE（Physical Extent）<br>    物理区域是物理卷中可⽤于分配的最⼩存储单元，物理区域的⼤⼩可根据实际情况在建⽴物理卷时指定。物理区域大小一旦确定将不能更改，同⼀卷组中的所有物理卷的物理区域⼤⼩需要⼀致。</p><p>逻辑区域―LE（Logical Extent）<br>    逻辑区域是逻辑卷中可⽤于分配的最⼩存储单元，逻辑区域的⼤⼩取决于逻辑卷所在卷组中的物理区域的⼤小。</p><h2 id="4-2-实现逻辑卷"><a href="#4-2-实现逻辑卷" class="headerlink" title="4.2 实现逻辑卷"></a>4.2 实现逻辑卷</h2><h3 id="4-2-1-pv-管理工具"><a href="#4-2-1-pv-管理工具" class="headerlink" title="4.2.1 pv 管理工具"></a>4.2.1 pv 管理工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建物理卷 pv</span></span><br><span class="line">pvcreate /dev/DEVICe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 pv 信息</span></span><br><span class="line">pvs</span><br><span class="line">pvdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 pv</span></span><br><span class="line">pvremove /dev/DEVICE</span><br></pre></td></tr></table></figure><h3 id="4-2-2-vg-管理工具"><a href="#4-2-2-vg-管理工具" class="headerlink" title="4.2.2 vg 管理工具"></a>4.2.2 vg 管理工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建卷组 vg</span></span><br><span class="line">vgcreate [-s <span class="comment">#[kKmMgGtTpPeE]] VolumeGroupName PhysicalDevicePath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示卷组</span></span><br><span class="line">vgs</span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理卷组</span></span><br><span class="line">vgextend VolumeGroupName PhysicalDevicePath</span><br><span class="line">vgreduce VolumeGroupName PhysicalDevicePath</span><br></pre></td></tr></table></figure><h3 id="4-2-3-lv-管理工具"><a href="#4-2-3-lv-管理工具" class="headerlink" title="4.2.3 lv 管理工具"></a>4.2.3 lv 管理工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示逻辑卷</span></span><br><span class="line">lvs</span><br><span class="line">lvdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建逻辑卷</span></span><br><span class="line">LVcreate -L <span class="comment">#[mMgGtT] -n NAME VolumeGroup</span></span><br><span class="line"><span class="comment">## 创建60%的lv大小</span></span><br><span class="line">lvcreate -l 60%VG -n mylv testvg</span><br><span class="line"><span class="comment">## 将卷组中剩余空间全部用于创建lv</span></span><br><span class="line">lvcreate -l 100%FREE -n lv2 testvg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除逻辑卷</span></span><br><span class="line">lvremove /dev/VGName/LVName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新设定文件系统大小</span></span><br><span class="line">resize2fs [-f] [-F] [-M] [-P] [-p] device [new_size]</span><br><span class="line">xfs_growfs /mountpoint</span><br></pre></td></tr></table></figure><p><strong>示例：逻辑卷创建示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line">1、创建分区并调整分区类型为8e</span><br><span class="line">[root@localhost ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): e                // 直接创建扩展分区</span><br><span class="line">Partition number (1-4, default 1): </span><br><span class="line">First sector (2048-10485759, default 2048): </span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-10485759, default 10485759): </span><br><span class="line">Using default value 10485759</span><br><span class="line">Partition 1 of <span class="built_in">type</span> Extended and of size 5 GiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): n           </span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 1 extended, 3 free)</span><br><span class="line">   l   logical (numbered from 5)</span><br><span class="line">Select (default p): l                              // 在扩展分区上创建逻辑分区5,6,7,8,9</span><br><span class="line">Adding logical partition 6</span><br><span class="line">First sector (1030144-10485759, default 1030144): </span><br><span class="line">Using default value 1030144</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (1030144-10485759, default 10485759): +500M</span><br><span class="line">Partition 6 of <span class="built_in">type</span> Linux and of size 500 MiB is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): t                             // 调整分区类型             </span><br><span class="line">Partition number (1,5-9, default 9): 5</span><br><span class="line">Hex code (<span class="built_in">type</span> L to list all codes): 8e</span><br><span class="line">Changed <span class="built_in">type</span> of partition <span class="string">&#x27;Linux&#x27;</span> to <span class="string">&#x27;Linux LVM&#x27;</span></span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): p</span><br><span class="line">Disk /dev/sdb: 5368 MB, 5368709120 bytes, 10485760 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label <span class="built_in">type</span>: dos</span><br><span class="line">Disk identifier: 0x5372fd24</span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048    10485759     5241856    5  Extended</span><br><span class="line">/dev/sdb5            4096     1028095      512000   8e  Linux LVM</span><br><span class="line">/dev/sdb6         1030144     2054143      512000   8e  Linux LVM</span><br><span class="line">/dev/sdb7         2056192     3080191      512000   8e  Linux LVM</span><br><span class="line">/dev/sdb8         3082240     5179391     1048576   8e  Linux LVM</span><br><span class="line">/dev/sdb9         5181440    10485759     2652160   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): w               // 保存退出</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">2、刷新分区</span><br><span class="line">[root@localhost ~]<span class="comment"># partprobe /dev/sdb</span></span><br><span class="line">[root@localhost ~]<span class="comment"># lsblk /dev/sdb</span></span><br><span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sdb      8:16   0    5G  0 disk </span><br><span class="line">├─sdb1   8:17   0    1K  0 part </span><br><span class="line">├─sdb5   8:21   0  500M  0 part </span><br><span class="line">├─sdb6   8:22   0  500M  0 part </span><br><span class="line">├─sdb7   8:23   0  500M  0 part </span><br><span class="line">├─sdb8   8:24   0    1G  0 part </span><br><span class="line">└─sdb9   8:25   0  2.5G  0 part </span><br><span class="line"></span><br><span class="line">3、创建 pv</span><br><span class="line">[root@localhost ~]<span class="comment"># pvcreate /dev/sdb&#123;5,6,7&#125;</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb5&quot;</span> successfully created.</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb6&quot;</span> successfully created.</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb7&quot;</span> successfully created.</span><br><span class="line">[root@localhost ~]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree  </span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;19.00g      0 </span><br><span class="line">  /dev/sdb5         lvm2 ---  500.00m 500.00m</span><br><span class="line">  /dev/sdb6         lvm2 ---  500.00m 500.00m</span><br><span class="line">  /dev/sdb7         lvm2 ---  500.00m 500.00m</span><br><span class="line"></span><br><span class="line">4、创建 VG</span><br><span class="line">[root@localhost ~]<span class="comment"># vgcreate myvg /dev/sdb&#123;5,6&#125;</span></span><br><span class="line">  Volume group <span class="string">&quot;myvg&quot;</span> successfully created</span><br><span class="line">[root@localhost ~]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g      0 </span><br><span class="line">  myvg     2   0   0 wz--n- 992.00m 992.00m</span><br><span class="line">[root@localhost ~]<span class="comment"># vgextend myvg /dev/sdb7// 扩展vg</span></span><br><span class="line">  Volume group <span class="string">&quot;myvg&quot;</span> successfully extended</span><br><span class="line"></span><br><span class="line">5、创建 LV</span><br><span class="line">[root@localhost ~]<span class="comment"># lvcreate -L 400M -n mylv myvg       // -L 大小 -n lv_name vg_name</span></span><br><span class="line">  Logical volume <span class="string">&quot;mylv&quot;</span> created.</span><br><span class="line">[root@localhost ~]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g                                                 </span><br><span class="line">  swap centos -wi-ao----   2.00g                                                 </span><br><span class="line">  mylv myvg   -wi-a----- 400.00m </span><br><span class="line">  </span><br><span class="line">6、创建文件系统</span><br><span class="line">[root@localhost ~]<span class="comment"># mke2fs -t ext4 -b 1024 -L MYLV /dev/myvg/mylv</span></span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Filesystem label=MYLV</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">Block size=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">Fragment size=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">102400 inodes, 409600 blocks</span><br><span class="line">20480 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">First data block=1</span><br><span class="line">Maximum filesystem blocks=34078720</span><br><span class="line">50 block <span class="built_in">groups</span></span><br><span class="line">8192 blocks per group, 8192 fragments per group</span><br><span class="line">2048 inodes per group</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409</span><br><span class="line"></span><br><span class="line">Allocating group tables: <span class="keyword">done</span>                            </span><br><span class="line">Writing inode tables: <span class="keyword">done</span>                            </span><br><span class="line">Creating journal (8192 blocks): <span class="keyword">done</span></span><br><span class="line">Writing superblocks and filesystem accounting information: <span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line">7、挂载</span><br><span class="line">[root@localhost ~]<span class="comment"># mount /dev/myvg/mylv /mnt/mylv.mount/</span></span><br><span class="line">[root@localhost mapper]<span class="comment"># lsblk /dev/sdb</span></span><br><span class="line">NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sdb             8:16   0    5G  0 disk </span><br><span class="line">├─sdb1          8:17   0    1K  0 part </span><br><span class="line">├─sdb5          8:21   0  500M  0 part </span><br><span class="line">│ └─myvg-mylv 253:2    0  400M  0 lvm  /mnt/mylv.mount</span><br><span class="line">├─sdb6          8:22   0  500M  0 part </span><br><span class="line">├─sdb7          8:23   0  500M  0 part </span><br><span class="line">├─sdb8          8:24   0    1G  0 part </span><br><span class="line">└─sdb9          8:25   0  2.5G  0 part </span><br></pre></td></tr></table></figure><h3 id="4-2-4-扩展和缩减逻辑卷"><a href="#4-2-4-扩展和缩减逻辑卷" class="headerlink" title="4.2.4 扩展和缩减逻辑卷"></a>4.2.4 扩展和缩减逻辑卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 扩展和缩减准备</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># pvcreate /dev/sdb</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vgcreate vg0 /dev/sdb </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvcreate -L 1G -n mylv vg0</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkfs.ext4 /dev/vg0/mylv</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount /dev/vg0/mylv /mnt/mylv</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># pvcreate /dev/sdc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vgcreate vg1 /dev/sdc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvcreate -L 1G -n xfs_lv vg1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkfs.xfs /dev/vg1/xfs_lv</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount /dev/vg1/xfs_lv /mnt/xfs_lv</span></span><br></pre></td></tr></table></figure><p><strong>1、扩展逻辑卷</strong></p><p>第一步先扩展逻辑卷的空间大小<br>第二步实现文件系统的扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看逻辑卷 mylv 的大小</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvs /dev/vg0/mylv</span></span><br><span class="line">  LV   VG  Attr       LSize Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  mylv vg0 -wi-ao---- 1.00g</span><br><span class="line"><span class="comment"># 查看卷组的剩余空间，如果空间不足需要先扩容卷组的空间</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vgs /dev/vg0</span></span><br><span class="line">  VG  <span class="comment">#PV #LV #SN Attr   VSize   VFree  </span></span><br><span class="line">  vg0   1   1   0 wz--n- &lt;20.00g &lt;19.00g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展逻辑卷 mylv 的空间至3G</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvextend -L +2G /dev/vg0/mylv </span></span><br><span class="line">  Size of logical volume vg0/mylv changed from 1.00 GiB (256 extents) to 3.00 GiB (768 extents).</span><br><span class="line">  Logical volume vg0/mylv successfully resized.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实现 mylv 文件系统的扩展</span></span><br><span class="line"><span class="comment">## 对于 ext 系列文件系统使用 resize2fs 命令</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># resize2fs /dev/vg0/mylv</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /dev/vg0/mylv </span></span><br><span class="line">Filesystem           Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-mylv ext4  3.0G  3.0M  2.8G   1% /mnt/mylv</span><br><span class="line"><span class="comment">## 对于 xfs 系列文件系统使用 xfs_growfs</span></span><br><span class="line"><span class="comment">## xfs 文件系统空间扩展同ext系列，大小由1G扩展到2G</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># xfs_growfs /mnt/xfs_lv/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /dev/vg1/xfs_lv </span></span><br><span class="line">Filesystem             Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-xfs_lv xfs   2.0G   47M  2.0G   3% /mnt/xfs_lv</span><br><span class="line"></span><br><span class="line"><span class="comment">### 文件系统扩展命令</span></span><br><span class="line">resize2fs /dev/VG_NAME/LV_NAME</span><br><span class="line">xfs_growfs MOUNTPOINT</span><br><span class="line"></span><br><span class="line"><span class="comment">### 不关注文件系统类型，一次性扩容并同步文件系统大小</span></span><br><span class="line"><span class="comment">#### 将卷组中剩余空间全部分配给指定逻辑卷</span></span><br><span class="line">lvresize -r -l +100%FREE /dev/VG_NAME/LV_NAME</span><br></pre></td></tr></table></figure><p><strong>2、缩减逻辑卷</strong></p><p>注：缩减有数据损坏的风险，建议先备份在缩减，xfs 文件系统不支持缩减</p><p>缩减逻辑卷相关过程命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/VG_NAME/LV_NAME</span><br><span class="line">e2fsck -f /dev/VG_NAME/LV_NAME</span><br><span class="line">resize2fs /dev/VG_NAME/LV_NAME <span class="comment">#[mMgGtT]</span></span><br><span class="line">lvreduce -L <span class="comment">#[mMgGtT] /dev/VG_NAME/LV_NAME</span></span><br><span class="line">mount /dev/VG_NAME/LV_NAME mountpoint</span><br></pre></td></tr></table></figure><p>示例：缩减ext系列文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以 /dev/mapper/vg0-mylv 为例</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># df -Th</span></span><br><span class="line">Filesystem             Type      Size  Used Avail Use% Mounted on</span><br><span class="line">devtmpfs               devtmpfs  877M     0  877M   0% /dev</span><br><span class="line">tmpfs                  tmpfs     896M     0  896M   0% /dev/shm</span><br><span class="line">tmpfs                  tmpfs     896M  8.8M  887M   1% /run</span><br><span class="line">tmpfs                  tmpfs     896M     0  896M   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root    xfs        30G  3.1G   27G  11% /</span><br><span class="line">/dev/sda1              xfs      1014M  212M  803M  21% /boot</span><br><span class="line">/dev/mapper/rl-data    ext4       17G   54M   16G   1% /data</span><br><span class="line">tmpfs                  tmpfs     180M     0  180M   0% /run/user/0</span><br><span class="line">/dev/mapper/vg0-mylv   ext4      3.0G  3.0M  2.8G   1% /mnt/mylv</span><br><span class="line">/dev/mapper/vg1-xfs_lv xfs       2.0G   47M  2.0G   3% /mnt/xfs_lv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消挂载</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># umount /mnt/mylv</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行磁盘检查</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># fsck -f /dev/vg0/mylv </span></span><br><span class="line">fsck from util-linux 2.32.1</span><br><span class="line">e2fsck 1.45.6 (20-Mar-2020)</span><br><span class="line">Pass 1: Checking inodes, blocks, and sizes</span><br><span class="line">Pass 2: Checking directory structure</span><br><span class="line">Pass 3: Checking directory connectivity</span><br><span class="line">Pass 4: Checking reference counts</span><br><span class="line">Pass 5: Checking group summary information</span><br><span class="line">/dev/mapper/vg0-mylv: 11/196608 files (0.0% non-contiguous), 21308/786432 blocks</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩减文件系统大小至2G</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># resize2fs /dev/vg0/mylv 2G</span></span><br><span class="line">resize2fs 1.45.6 (20-Mar-2020)</span><br><span class="line">Resizing the filesystem on /dev/vg0/mylv to 524288 (4k) blocks.</span><br><span class="line">The filesystem on /dev/vg0/mylv is now 524288 (4k) blocks long.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩减逻辑卷空间大小</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># lvreduce -L 2G /dev/vg0/mylv </span></span><br><span class="line">  WARNING: Reducing active logical volume to 2.00 GiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce vg0/mylv? [y/n]: y</span><br><span class="line">  Size of logical volume vg0/mylv changed from 3.00 GiB (768 extents) to 2.00 GiB (512 extents).</span><br><span class="line">  Logical volume vg0/mylv successfully resized.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新挂载该逻辑卷</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># mount /dev/vg0/mylv /mnt/mylv/</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment"># df -Th /mnt/mylv/</span></span><br><span class="line">Filesystem           Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-mylv ext4  2.0G  3.0M  1.9G   1% /mnt/mylv</span><br></pre></td></tr></table></figure><p>示例：缩减xfs系列文件系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># XFS文件系统不支持缩减，但可采取以下方法</span></span><br><span class="line"><span class="comment">## 使用xfsdump命令</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># yum -y install xfsdump</span></span><br><span class="line">[root@Rocky8-mini xfs_lv]<span class="comment"># ls</span></span><br><span class="line">file1  file2  file3  file4  file5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 先备份xfs文件系统数据</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># xfsdump -f data.img /mnt/xfs_lv</span></span><br><span class="line">xfsdump: using file dump (drive_simple) strategy</span><br><span class="line">xfsdump: version 3.1.8 (dump format 3.0) - <span class="built_in">type</span> ^C <span class="keyword">for</span> status and control</span><br><span class="line"></span><br><span class="line"> ============================= dump label dialog ==============================</span><br><span class="line"></span><br><span class="line">please enter label <span class="keyword">for</span> this dump session (<span class="built_in">timeout</span> <span class="keyword">in</span> 300 sec)</span><br><span class="line"> -&gt; xfs_lv</span><br><span class="line">session label entered: <span class="string">&quot;xfs_lv&quot;</span></span><br><span class="line"></span><br><span class="line"> --------------------------------- end dialog ---------------------------------</span><br><span class="line"></span><br><span class="line">xfsdump: level 0 dump of Rocky8-mini:/mnt/xfs_lv</span><br><span class="line">xfsdump: dump <span class="built_in">date</span>: Wed Nov 23 20:36:58 2022</span><br><span class="line">xfsdump: session <span class="built_in">id</span>: 3a187a59-a2f2-4637-81dc-cd1090d16dea</span><br><span class="line">xfsdump: session label: <span class="string">&quot;xfs_lv&quot;</span></span><br><span class="line">xfsdump: ino map phase 1: constructing initial dump list</span><br><span class="line">xfsdump: ino map phase 2: skipping (no pruning necessary)</span><br><span class="line">xfsdump: ino map phase 3: skipping (only one dump stream)</span><br><span class="line">xfsdump: ino map construction complete</span><br><span class="line">xfsdump: estimated dump size: 22400 bytes</span><br><span class="line"></span><br><span class="line"> ============================= media label dialog =============================</span><br><span class="line"></span><br><span class="line">please enter label <span class="keyword">for</span> media <span class="keyword">in</span> drive 0 (<span class="built_in">timeout</span> <span class="keyword">in</span> 300 sec)</span><br><span class="line"> -&gt; q</span><br><span class="line">media label entered: <span class="string">&quot;q&quot;</span></span><br><span class="line"></span><br><span class="line"> --------------------------------- end dialog ---------------------------------</span><br><span class="line"></span><br><span class="line">xfsdump: creating dump session media file 0 (media 0, file 0)</span><br><span class="line">xfsdump: dumping ino map</span><br><span class="line">xfsdump: dumping directories</span><br><span class="line">xfsdump: dumping non-directory files</span><br><span class="line">xfsdump: ending media file</span><br><span class="line">xfsdump: media file size 22576 bytes</span><br><span class="line">xfsdump: dump size (non-dir files) : 0 bytes</span><br><span class="line">xfsdump: dump complete: 26 seconds elapsed</span><br><span class="line">xfsdump: Dump Summary:</span><br><span class="line">xfsdump:   stream 0 /root/data.img OK (success)</span><br><span class="line">xfsdump: Dump Status: SUCCESS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消挂载</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># umount /mnt/xfs_lv </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩减逻辑卷大小</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvreduce -L 1G /dev/vg1/xfs_lv </span></span><br><span class="line">  WARNING: Reducing active logical volume to 1.00 GiB.</span><br><span class="line">  THIS MAY DESTROY YOUR DATA (filesystem etc.)</span><br><span class="line">Do you really want to reduce vg1/xfs_lv? [y/n]: y</span><br><span class="line">  Size of logical volume vg1/xfs_lv changed from 2.00 GiB (512 extents) to 1.00 GiB (256 extents).</span><br><span class="line">  Logical volume vg1/xfs_lv successfully resized.</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 重新创建文件系统</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkfs.xfs -f /dev/vg1/xfs_lv </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新挂载</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount /dev/vg1/xfs_lv /mnt/xfs_lv/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原数据</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># xfsrestore -f data.img /mnt/xfs_lv</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls /mnt/xfs_lv/</span></span><br><span class="line">file1  file2  file3  file4  file5</span><br></pre></td></tr></table></figure><h3 id="4-2-5-跨主机迁移卷组"><a href="#4-2-5-跨主机迁移卷组" class="headerlink" title="4.2.5 跨主机迁移卷组"></a>4.2.5 跨主机迁移卷组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 在源主机中，取消挂载所有的逻辑卷</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 禁用卷组</span></span><br><span class="line">vgchange -a n vg0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 导出卷组</span></span><br><span class="line">vgexport vg0</span><br><span class="line">pvscan</span><br><span class="line">vgdisplay</span><br><span class="line"></span><br><span class="line"><span class="comment">## 拆下旧硬盘在目标计算机上，并导入卷组</span></span><br><span class="line">vgimport vg0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 启用卷组</span></span><br><span class="line">vgchange -ay vg0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 挂载所有卷组上的逻辑卷在迁移之后的新主机上</span></span><br></pre></td></tr></table></figure><h3 id="4-2-6-拆除指定的PV存储设备"><a href="#4-2-6-拆除指定的PV存储设备" class="headerlink" title="4.2.6 拆除指定的PV存储设备"></a>4.2.6 拆除指定的PV存储设备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini etc]<span class="comment"># df -Th /mnt/mylv</span></span><br><span class="line">Filesystem           Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg0-mylv ext4  2.0G  3.0M  1.9G   1% /mnt/mylv</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini etc]<span class="comment"># umount /mnt/mylv</span></span><br><span class="line">[root@Rocky8-mini etc]<span class="comment"># lvremove /dev/vg0/mylv </span></span><br><span class="line">Do you really want to remove active logical volume vg0/mylv? [y/n]: y</span><br><span class="line">  Logical volume <span class="string">&quot;mylv&quot;</span> successfully removed.</span><br><span class="line">[root@Rocky8-mini etc]<span class="comment"># vgremove /dev/vg0</span></span><br><span class="line">  Volume group <span class="string">&quot;vg0&quot;</span> successfully removed          </span><br><span class="line">[root@Rocky8-mini etc]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG  Fmt  Attr PSize   PFree </span><br><span class="line">  /dev/sda2  rl  lvm2 a--  &lt;49.00g     0 </span><br><span class="line">  /dev/sdb       lvm2 ---   20.00g 20.00g</span><br><span class="line">  /dev/sdc   vg1 lvm2 a--  &lt;10.00g &lt;9.51g</span><br><span class="line">[root@Rocky8-mini etc]<span class="comment"># pvremove /dev/sdb </span></span><br><span class="line">  Labels on physical volume <span class="string">&quot;/dev/sdb&quot;</span> successfully wiped.</span><br></pre></td></tr></table></figure><h2 id="4-3-逻辑卷快照"><a href="#4-3-逻辑卷快照" class="headerlink" title="4.3 逻辑卷快照"></a>4.3 逻辑卷快照</h2><h3 id="4-3-1-逻辑卷快照工作原理"><a href="#4-3-1-逻辑卷快照工作原理" class="headerlink" title="4.3.1 逻辑卷快照工作原理"></a>4.3.1 逻辑卷快照工作原理</h3><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221124212331438.png" alt="image-20221124212331438" style="zoom:80%;" /><p>快照是特殊的逻辑卷，它是在生成快照时存在的逻辑卷的准确拷贝,对于需要备份或者复制的现有数据临<br>时拷贝以及其它操作来说，快照是最合适的选择,快照只有在它们和原来的逻辑卷不同时才会消耗空间，<br>建立快照的卷大小小于等于原始逻辑卷,也可以使用lvextend扩展快照</p><p>逻辑卷管理器快照<br>快照就是将当时的系统信息记录下来，就好像照相一般，若将来有任何数据改动了，则原始数据会被移<br>动到快照区，没有改动的区域则由快照区和文件系统共享</p><p>逻辑卷快照工作原理</p><ul><li>在生成快照时会分配给它一定的空间，但只有在原来的逻辑卷或者快照有所改变才会使用这些空间</li><li>当原来的逻辑卷中有所改变时，会将旧的数据复制到快照中</li><li>快照中只含有原来的逻辑卷中更改的数据或者自生成快照后的快照中更改的数据</li></ul><p>由于快照区与原本的LV共用很多PE的区块，因此快照与被快照的LV必须在同一个VG中.系统恢复的时候<br>的文件数量不能高于快照区的实际容量</p><p>快照特点：</p><ul><li>备份速度快，瞬间完</li><li>应用场景是测试环境，不能完成代替备份</li><li>快照后，逻辑卷的修改速度会一定有影响</li></ul><h3 id="4-3-2-逻辑卷快照的实现"><a href="#4-3-2-逻辑卷快照的实现" class="headerlink" title="4.3.2 逻辑卷快照的实现"></a>4.3.2 逻辑卷快照的实现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df -Th /mnt/xfs_lv</span></span><br><span class="line">Filesystem             Type  Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg1-xfs_lv xfs   495M   29M  466M   6% /mnt/xfs_lv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为该逻辑卷创建快照，ext4必须使用 -p r 实现只读</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvcreate -l 64 -s -n data-snapshot /dev/vg1/xfs_lv</span></span><br><span class="line">  Logical volume <span class="string">&quot;data-snapshot&quot;</span> created.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载快照，xfs 需使用 -o ro 实现只读，防止快照被修改</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkdir /mnt/snap         </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mount -o ro,nouuid /dev/vg1/data-snapshot /mnt/snap</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复快照</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># umount /mnt/xfs_lv </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># umount /mnt/snap </span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># lvconvert --merge /dev/vg1/data-snapshot </span></span><br><span class="line">  Merging of volume vg1/data-snapshot started.</span><br><span class="line">  vg1/xfs_lv: Merged: 100.00%</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件查找和打包压缩</title>
      <link href="/archives/c871820f.html"/>
      <url>/archives/c871820f.html</url>
      
        <content type="html"><![CDATA[<h1 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h1><p>在文件系统上查找符合条件的文件</p><p>文件查找：</p><ul><li>非实时查找（数据库查找）：locate</li><li>实时查找：find</li></ul><h2 id="一、locate"><a href="#一、locate" class="headerlink" title="一、locate"></a>一、locate</h2><ul><li>locate 查询系统上预先建立的文件索引数据库 &#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db</li><li>索引的构建是在系统较为空闲时自动进行（周期性任务），执行updatedb可以更新数据库</li><li>索引构建过程需要遍历整个根文件系统，很消耗资源</li><li>locate 和 updatedb 命令来自于 mlocate 包</li></ul><p>工作特点：</p><ul><li>查找速度快</li><li>模糊查找</li><li>非实时查找</li><li>搜索的是文件的全路径，不仅仅是文件名</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><p><code>locate [OPTION]... PATTERN...</code></p><p>常用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i 不区分大小写</span><br><span class="line">-n N 只列举前N个匹配项</span><br><span class="line">-r 使用基本的正则表达式</span><br></pre></td></tr></table></figure><p>示例：locatedb 创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#yum -y install mlocate</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate conf</span></span><br><span class="line">locate: can not <span class="built_in">stat</span> () `/var/lib/mlocate/mlocate.db<span class="string">&#x27;: No such file or directory</span></span><br><span class="line"><span class="string">[root@centos7 ~]#updatedb</span></span><br><span class="line"><span class="string">[root@centos7 ~]#ll /var/lib/mlocate/mlocate.db </span></span><br><span class="line"><span class="string">-rw-r----- 1 root slocate 978791 Oct 11 22:57 /var/lib/mlocate/mlocate.db</span></span><br><span class="line"><span class="string">[root@centos7 ~]#locate -n 3 conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/GeoIP.conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/asound.conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/chkconfig.d</span></span><br></pre></td></tr></table></figure><p>示例：文件的创建与删除无法立即更新数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#touch test1.log</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#updatedb</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">/root/test1.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment">#rm -f test1.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">/root/test1.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="二、find"><a href="#二、find" class="headerlink" title="二、find"></a>二、find</h2><p>find 是实时查找工具，通过遍历指定路径完成文件查找</p><p>工作特点：</p><ul><li>查找速度略慢</li><li>精确查找</li><li>实时查找</li><li>查找条件丰富</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find [option] ... [查找路径] [查找条件] [处理动作]</span><br><span class="line"></span><br><span class="line">查找路径：具体查找的目标路径，默认为当前目录</span><br><span class="line">查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所有文件</span><br><span class="line">处理动作：对符合条件的文件做操作，默认输出至屏幕</span><br></pre></td></tr></table></figure><h3 id="2-1-指定搜索目录层级"><a href="#2-1-指定搜索目录层级" class="headerlink" title="2.1 指定搜索目录层级"></a>2.1 指定搜索目录层级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-maxdepth level 最大搜索目录深度，指定目录下的文件为第1级</span><br><span class="line">-minddepth level 最小搜索目录深度</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -maxdepth 2 -mindepth 2</span><br></pre></td></tr></table></figure><h3 id="2-2-先处理该目录中文件再处理目录本身"><a href="#2-2-先处理该目录中文件再处理目录本身" class="headerlink" title="2.2 先处理该目录中文件再处理目录本身"></a>2.2 先处理该目录中文件再处理目录本身</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-depth</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data/test/</span></span><br><span class="line">/data/test/</span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find  /data/test/ -depth</span></span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br><span class="line">/data/test/</span><br></pre></td></tr></table></figure><h3 id="2-3-根据文件名和inode查找"><a href="#2-3-根据文件名和inode查找" class="headerlink" title="2.3 根据文件名和inode查找"></a>2.3 根据文件名和inode查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-name <span class="string">&quot;文件名称&quot;</span>        <span class="comment"># 支持使用glob，通配符需要加双引号引起来</span></span><br><span class="line">-iname <span class="string">&quot;文件名称&quot;</span>       <span class="comment"># 不区分字母大小写</span></span><br><span class="line">-inum n                <span class="comment"># 按inode号查找</span></span><br><span class="line">-samefile name         <span class="comment"># 相同inode号的文件</span></span><br><span class="line">-links n               <span class="comment"># 链接数为n的文件</span></span><br><span class="line">-regex <span class="string">&quot;PATTERN&quot;</span>       <span class="comment"># 以PATTERN匹配整个文件路径，而非文件名称</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data/ -name &quot;*.txt&quot;</span></span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br></pre></td></tr></table></figure><h3 id="2-4-根据属主、属组查找"><a href="#2-4-根据属主、属组查找" class="headerlink" title="2.4 根据属主、属组查找"></a>2.4 根据属主、属组查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-user USERNAME          <span class="comment"># 查找属主为指定用户的文件</span></span><br><span class="line">-group GROUPNAME        <span class="comment"># 查找属组为指定组的文件</span></span><br><span class="line">-uid USERID             <span class="comment"># 查找属主为指定的UID的文件</span></span><br><span class="line">-gid GROUPID            <span class="comment"># 查找属组为指定的GID文件</span></span><br><span class="line">-nouser                 <span class="comment"># 查找没有属主的文件</span></span><br><span class="line">-nogroup                <span class="comment"># 查找没有属组的文件</span></span><br></pre></td></tr></table></figure><h3 id="2-5-根据文件类型查找"><a href="#2-5-根据文件类型查找" class="headerlink" title="2.5 根据文件类型查找"></a>2.5 根据文件类型查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">type</span> TYPE</span><br><span class="line"></span><br><span class="line">TYPE 可以是以下形式:</span><br><span class="line">f: 普通文件</span><br><span class="line">d: 目录文件</span><br><span class="line">l: 符号链接文件</span><br><span class="line">s: 套接字文件</span><br><span class="line">b: 块设备文件</span><br><span class="line">c: 字符设备文件</span><br><span class="line">p: 管道文件</span><br></pre></td></tr></table></figure><h3 id="2-6-空文件或目录"><a href="#2-6-空文件或目录" class="headerlink" title="2.6 空文件或目录"></a>2.6 空文件或目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-empty</span><br><span class="line">[root@Rocky8-mini data]<span class="comment"># find /data/test/  -empty</span></span><br></pre></td></tr></table></figure><h3 id="2-7-组合条件"><a href="#2-7-组合条件" class="headerlink" title="2.7 组合条件"></a>2.7 组合条件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">与 -a</span><br><span class="line">或 -o</span><br><span class="line">非 -not</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -type d -o -type l | wc -l</span></span><br><span class="line">299</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -type d -o -type l -ls | wc -l</span></span><br><span class="line">84</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ \( -type d -o -type l \) -ls | wc -l</span></span><br><span class="line">299</span><br></pre></td></tr></table></figure><p>德摩根定律</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!A -a !B = !(A -o B)</span><br><span class="line">!A -o !B = !(A -a B)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出/tmp目录下，属主不是root，且文件名不以f开头的文件</span></span><br><span class="line">find /tmp \( -not -user root -a -not -name <span class="string">&#x27;f*&#x27;</span> \) -<span class="built_in">ls</span></span><br><span class="line">find /tmp -not \( -user root -o -name <span class="string">&#x27;f*&#x27;</span> \) -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="2-8-排除目录"><a href="#2-8-排除目录" class="headerlink" title="2.8 排除目录"></a>2.8 排除目录</h3><p>查找条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-path  PATH</span><br><span class="line">-prune 剪切</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 查找/etc/下，除了/etc/security/目录的其它所有.conf后缀的文件 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -path &#x27;/etc/security&#x27; -a -prune -o -name &quot;*.conf&quot; | wc -l</span></span><br><span class="line">80</span><br><span class="line">-- 查找/etc/下，除/etc/security和/etc/systemd,/etc/dbus-1三个目录的所有.conf后缀的文件 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ \( -path &quot;/etc/security&quot; -o -path &quot;/etc/systemd&quot; -o -path &quot;/etc/dbus-1&quot; \) -a -prune -o -name &quot;*.conf&quot; | wc -l</span></span><br><span class="line">71</span><br></pre></td></tr></table></figure><h3 id="2-9-根据文件大小和时间戳查找"><a href="#2-9-根据文件大小和时间戳查找" class="headerlink" title="2.9 根据文件大小和时间戳查找"></a>2.9 根据文件大小和时间戳查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">文件大小 常用单位：k，M，G</span><br><span class="line">  -size [+|-]<span class="comment">#UNIT</span></span><br><span class="line">    <span class="comment">#UNIT: (#-1,#]</span></span><br><span class="line">    -<span class="comment">#UNIT: [0,#-1]</span></span><br><span class="line">    +<span class="comment">#UNIT: (#,oo)</span></span><br><span class="line">    </span><br><span class="line">时间戳 </span><br><span class="line">以天为单位</span><br><span class="line">  -atime [+|-]<span class="comment">#</span></span><br><span class="line">    <span class="comment">#:[#,#+1)</span></span><br><span class="line">    +<span class="comment">#:[#+1,oo]</span></span><br><span class="line">    -<span class="comment">#:[0,#)</span></span><br><span class="line">  -mtime</span><br><span class="line">  -ctime</span><br><span class="line">以分钟为单位</span><br><span class="line">  -amin</span><br><span class="line">  -mmin</span><br><span class="line">  -cmin</span><br></pre></td></tr></table></figure><h3 id="2-10-根据权限查找"><a href="#2-10-根据权限查找" class="headerlink" title="2.10 根据权限查找"></a>2.10 根据权限查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-perm [/|-]MODe</span><br><span class="line">  MODE: 精确权限匹配</span><br><span class="line">    /MODE: 任何一类(u,g,o)对象的权限中只要能一位匹配即可</span><br><span class="line">    -MODE: 每一类对象都必须同时拥有为其指定的权限标准</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find /etc -perm /060 -<span class="built_in">ls</span> 只有当文件的属组有读或写权限时就可匹配到</span><br><span class="line">find /etc -perm -644 -<span class="built_in">ls</span> 文件的属主有读写权限，属组和其它有读权限</span><br></pre></td></tr></table></figure><h3 id="2-11-正则表达式"><a href="#2-11-正则表达式" class="headerlink" title="2.11 正则表达式"></a>2.11 正则表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-regextype <span class="built_in">type</span></span><br><span class="line">-regex pattern</span><br></pre></td></tr></table></figure><h3 id="2-12-处理动作"><a href="#2-12-处理动作" class="headerlink" title="2.12 处理动作"></a>2.12 处理动作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">print</span>    默认动作，将结果输出至屏幕</span><br><span class="line">-<span class="built_in">ls</span>       类似对查找到的文件做<span class="string">&quot;ls -dils&quot;</span></span><br><span class="line">-fls FILE    对查找到文件的长格式信息保存到指定文件中</span><br><span class="line">-delete      删除查找到的文件</span><br><span class="line">-ok COMMAND &#123;&#125; \;      对查找到的每个文件执行由COMMAND指定的命令，对每个文件执行命令前需交互式确认</span><br><span class="line">-<span class="built_in">exec</span> COMMAND &#123;&#125; \;    对查找到的每个文件执行由COMMAND指定的命令</span><br><span class="line">  &#123;&#125;: 用于引用查找到的文件名称自身</span><br><span class="line"></span><br><span class="line">note：find传递查找到的文件至后面指定的命令时，查找到所有符合条件的文件一次性传递给后面的命令</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份配置文件，并添加.bak后缀</span></span><br><span class="line">find -name <span class="string">&quot;*.conf&quot;</span> -<span class="built_in">exec</span> <span class="built_in">cp</span> &#123;&#125; &#123;&#125;.bak \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除存在时间查过三天以上的Tom的临时文件</span></span><br><span class="line">find /tmp -ctime +3 -user Tom -ok <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在主目录中查找可被其他用户写入的文件并删除其权限</span></span><br><span class="line">find ~ -perm -002 -<span class="built_in">exec</span> <span class="built_in">chmod</span> o-w &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/data下的权限为644，后缀为sh的普通文件，增加执行权限</span></span><br><span class="line">find /data -perm -644 -<span class="built_in">type</span> f -name <span class="string">&quot;*.sh&quot;</span> -<span class="built_in">exec</span> <span class="built_in">chmod</span> 755 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h2 id="三、参数替换-xargs"><a href="#三、参数替换-xargs" class="headerlink" title="三、参数替换 xargs"></a>三、参数替换 xargs</h2><p>​有些命令不支持管道来传递参数，如 ls 命令。利用 xargs 命令可以将管道符传递过来的标准输入进行处理，然后传递到指定命令的参数位置上。</p><p>​find 经常和 xargs 命令进行组合使用，如<code>find | xargs COMMAND</code></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xargs 的默认行为：对多行标准输入进行处理，用空格代替换行符，成为一行，传递给 echo 命令作为参数，进行输出</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq 5 | xargs </span></span><br><span class="line">1 2 3 4 5</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -name &quot;*.txt&quot; | xargs rm</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -name &quot;*.conf&quot; | xargs ls -Sl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xargs 可以将一行中空格作为分隔符，用 -n# 选项，指定将 # 个空格替换成换行符，输出多行</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;1..6&#125; | xargs -n3</span></span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line"></span><br><span class="line"><span class="comment"># -d 选项为输入指定一个定制的定界符</span></span><br><span class="line"><span class="comment"># echo -n 不输出尾随的换行符</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -n &quot;IXloveXyou!&quot; | xargs -d X</span></span><br><span class="line">I love you!</span><br><span class="line"></span><br><span class="line"><span class="comment"># find配合xargs实现从大到小的文件排序显示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /root -type f | xargs ls -lSh</span></span><br><span class="line">-rw-------  1 root root  29K Oct 15 10:59 /root/.bash_history</span><br><span class="line">-rw-------  1 root root  11K Oct 16 06:48 /root/.viminfo</span><br><span class="line">-rw-------. 1 root root 1.5K Mar 13  2022 /root/anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量创建和删除用户</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo user&#123;1..5&#125; | xargs -n1 useradd</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo user&#123;1..5&#125; | xargs -n1 userdel -r</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 null 字符代替空格作为分界符</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># touch &quot;a b.txt&quot; a.txt b.txt</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -type f | xargs ls</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f | xargs ls</span></span><br><span class="line"><span class="built_in">ls</span>: cannot access <span class="string">&#x27;./a&#x27;</span>: No such file or directory</span><br><span class="line">./a.txt  ./b.txt  b.txt</span><br><span class="line"><span class="comment">## 对查找出的文件使用null字符作为分界符</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f -print0</span></span><br><span class="line">./b.txt./a.txt./a b.txt[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment">#</span></span><br><span class="line"><span class="comment">## 使用null字符代替空格做分界符</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f -print0 | xargs -0 ls -l</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03 <span class="string">&#x27;./a b.txt&#x27;</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03  ./a.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03  ./b.txt</span><br></pre></td></tr></table></figure><p>ASCII码中真正的0字符，即null字符</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220323153112986.png" alt="image-20220323153112986"></p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>1、查找&#x2F;var目录下属主为root，且属组为mail的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var \( -user root -a -group mail \) -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>2、查找&#x2F;var目录下不属于root、lp、gdm的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var -not \( -user root -o -user lp -o -user gdm \)</span><br></pre></td></tr></table></figure><p>3、查找&#x2F;var目录下最近一周内其内容修改过，同时属主不为root，也不是postfix的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var -mtime -7 -a -not -user root -a -not -user postfix</span><br></pre></td></tr></table></figure><p>4、查找当前系统上没有属主或属组，且最近一个周内曾被访问过的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -atime -7 -a \( -nouser -o -nogroup \)</span><br></pre></td></tr></table></figure><p>5、查找&#x2F;etc目录下大于1M且类型为普通文件的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -<span class="built_in">type</span> f -a -size +1M</span><br></pre></td></tr></table></figure><p>6、查找&#x2F;etc目录下所有用户都没有写权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc  -not -perm /222 </span><br></pre></td></tr></table></figure><p>7、查找&#x2F;etc目录下至少有一类用户没有执行权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -not -perm -111</span><br></pre></td></tr></table></figure><p>8、查找&#x2F;etc&#x2F;init.d目录下，所有用户都有执行权限，且其它用户有写权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc/init.d -perm -113</span><br></pre></td></tr></table></figure><h1 id="压缩和解压缩"><a href="#压缩和解压缩" class="headerlink" title="压缩和解压缩"></a>压缩和解压缩</h1><p>主要针对单个文件压缩，而非目录。</p><h2 id="一、compress-和-uncompress"><a href="#一、compress-和-uncompress" class="headerlink" title="一、compress 和 uncompress"></a>一、compress 和 uncompress</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compress Options [file...]</span><br><span class="line">uncompress file.Z</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d 解压缩，相当于 uncompress</span><br><span class="line">-c 结果输出至标准输出，不删除源文件</span><br><span class="line">-v 显示详情</span><br></pre></td></tr></table></figure><p>zcat file.Z 不解压缩的前提下查看文本的文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat file.Z &gt; file</span><br></pre></td></tr></table></figure><h2 id="二、gzip-和-gunzip"><a href="#二、gzip-和-gunzip" class="headerlink" title="二、gzip 和 gunzip"></a>二、gzip 和 gunzip</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip [OPTIONs] FILE...</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-k keep，保留源文件，centos8新特性</span><br><span class="line">-d 解压缩，相当于gunzip</span><br><span class="line">-c 结果输出至标准输出，保留源文件</span><br><span class="line">-<span class="comment"># 指定压缩比(1-9)</span></span><br><span class="line"></span><br><span class="line">zcat file.gz</span><br></pre></td></tr></table></figure><h2 id="三、bzip2-和-bunzip2"><a href="#三、bzip2-和-bunzip2" class="headerlink" title="三、bzip2 和 bunzip2"></a>三、bzip2 和 bunzip2</h2><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-k keep，保留源文件，centos8新特性</span><br><span class="line">-d 解压缩，相当于gunzip</span><br><span class="line">-c 结果输出至标准输出，保留源文件</span><br><span class="line">-<span class="comment"># 指定压缩比(1-9)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不解压缩的前提下查看文本的文件内容</span></span><br><span class="line">bzcat file.bz2</span><br></pre></td></tr></table></figure><h2 id="四、xz-和-unxz"><a href="#四、xz-和-unxz" class="headerlink" title="四、xz 和 unxz"></a>四、xz 和 unxz</h2><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-kkeep，保留源文件</span><br><span class="line">-d解压缩</span><br><span class="line">-c结果输出至标准输出，保留源文件不改变</span><br><span class="line">-<span class="comment">#指定压缩比，# 取值 1-9，默认为6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不解压缩的前提下查看文本的文件内容</span></span><br><span class="line">xzcat file.xz</span><br></pre></td></tr></table></figure><h2 id="zip-和-unzip"><a href="#zip-和-unzip" class="headerlink" title="zip 和 unzip"></a>zip 和 unzip</h2><p>​zip 可以实现打包目录和多个文件成一个文件并压缩，但可能会丢失文件属性信息，如：所有者和组信息，一般建议使用 tar 代替。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip</span></span><br><span class="line">Copyright (c) 1990-2008 Info-ZIP - Type <span class="string">&#x27;zip &quot;-L&quot;&#x27;</span> <span class="keyword">for</span> software license.</span><br><span class="line">Zip 3.0 (July 5th 2008). Usage:</span><br><span class="line">zip [-options] [-b path] [-t mmddyyyy] [-n suffixes] [zipfile list] [-xi list]</span><br><span class="line">  The default action is to add or replace zipfile entries from list, <span class="built_in">which</span></span><br><span class="line">  can include the special name - to compress standard input.</span><br><span class="line">  If zipfile and list are omitted, zip compresses stdin to stdout.</span><br><span class="line">  -f   freshen: only changed files  -u   update: only changed or new files</span><br><span class="line">  -d   delete entries <span class="keyword">in</span> zipfile    -m   move into zipfile (delete OS files)</span><br><span class="line">  -r   recurse into directories     -j   junk (don<span class="string">&#x27;t record) directory names</span></span><br><span class="line"><span class="string">  -0   store only                   -l   convert LF to CR LF (-ll CR LF to LF)</span></span><br><span class="line"><span class="string">  -1   compress faster              -9   compress better</span></span><br><span class="line"><span class="string">  -q   quiet operation              -v   verbose operation/print version info</span></span><br><span class="line"><span class="string">  -c   add one-line comments        -z   add zipfile comment</span></span><br><span class="line"><span class="string">  -@   read names from stdin        -o   make zipfile as old as latest entry</span></span><br><span class="line"><span class="string">  -x   exclude the following names  -i   include only the following names</span></span><br><span class="line"><span class="string">  -F   fix zipfile (-FF try harder) -D   do not add directory entries</span></span><br><span class="line"><span class="string">  -A   adjust self-extracting exe   -J   junk zipfile prefix (unzipsfx)</span></span><br><span class="line"><span class="string">  -T   test zipfile integrity       -X   eXclude eXtra file attributes</span></span><br><span class="line"><span class="string">  -y   store symbolic links as the link instead of the referenced file</span></span><br><span class="line"><span class="string">  -e   encrypt                      -n   don&#x27;</span>t compress these suffixes</span><br><span class="line">  -h2  show more <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包并压缩</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -r /backup/test.zip /data/test/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不包括目录本身，只打包目录内的文件和子目录</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cd /data/test/; zip -r /root/test.zip *</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认解压缩至当前目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unzip test.zip</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定解压缩目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unzip test.zip -d /backup/</span></span><br></pre></td></tr></table></figure><p>实例1：交互式加密和解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -e test.zip *</span></span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line">  adding: a b.txt (stored 0%)</span><br><span class="line">  adding: a.txt.bz2 (stored 0%)</span><br><span class="line">  adding: b.txt (stored 0%)</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># unzip test.zip -d /backup/</span></span><br><span class="line">Archive:  test.zip</span><br><span class="line">[test.zip] a b.txt password: </span><br><span class="line"> extracting: /backup/a b.txt         </span><br><span class="line"> extracting: /backup/a.txt.bz2       </span><br><span class="line"> extracting: /backup/b.txt</span><br></pre></td></tr></table></figure><p>实例2：非交互式加密和解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -P 123456 test.zip *</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># unzip -P 123456 test.zip -d /backup/</span></span><br></pre></td></tr></table></figure><h1 id="打包和解包"><a href="#打包和解包" class="headerlink" title="打包和解包"></a>打包和解包</h1><h2 id="一、tar"><a href="#一、tar" class="headerlink" title="一、tar"></a>一、tar</h2><p>​    tar 即磁带归档，可以对目录和多个文件打包成一个文件，并且可以压缩，保留文件属性不丢失，常用于备份功能。</p><p>选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">-A 新增文件到已经存在的备份文件</span><br><span class="line">-b&lt;区块数目&gt; 设置每个记录的区块数目，每个区块大小为12Bytes</span><br><span class="line">-B 读取数据时重设区块的大小</span><br><span class="line">-c 建立新的备份文件</span><br><span class="line">-C&lt;目的目录&gt; 切换到指定的目录</span><br><span class="line">-d 对比备份文件内和文件系统上的文件的差异</span><br><span class="line">-f&lt;备份文件&gt; 指定备份文件</span><br><span class="line">-F&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件</span><br><span class="line">-g或--listed-incremental 处理GNU格式的大量备份</span><br><span class="line">-G或--incremental 处理旧的GNU格式的大量备份。</span><br><span class="line">-h或--dereference 不建立符号连接，直接复制该连接所指向的原始文件。</span><br><span class="line">-i或--ignore-zeros 忽略备份文件中的0 Byte区块，也就是EOF。</span><br><span class="line">-k或--keep-old-files 解开备份文件时，不覆盖已有的文件。</span><br><span class="line">-K&lt;文件&gt;或--starting-file=&lt;文件&gt; 从指定的文件开始还原。</span><br><span class="line">-l或--one-file-system 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相</span><br><span class="line">同，否则不予复制。</span><br><span class="line">-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。</span><br><span class="line">-m或--modification-time 还原文件时，不变更文件的更改时间。</span><br><span class="line">-M或--multi-volume 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。</span><br><span class="line">-N&lt;日期格式&gt;或--newer=&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。</span><br><span class="line">-o或--old-archive或--portability 将资料写入备份文件时使用V7格式。</span><br><span class="line">-O或--stdout 把从备份文件里还原的文件输出到标准输出设备。</span><br><span class="line">-p或--same-permissions 用原来的文件权限还原文件。</span><br><span class="line">-P或--absolute-names 文件名使用绝对名称，不移除文件名称前的<span class="string">&quot;/&quot;</span>号。</span><br><span class="line">-r或--append 新增文件到已存在的备份文件的结尾部分。</span><br><span class="line">-R或--block-number 列出每个信息在备份文件中的区块编号。</span><br><span class="line">-s或--same-order 还原文件的顺序和备份文件内的存放顺序相同。</span><br><span class="line">-S或--sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。</span><br><span class="line">-t或--list 列出备份文件的内容。</span><br><span class="line">-T&lt;范本文件&gt;或--files-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或</span><br><span class="line">建立符合设置条件的文件。</span><br><span class="line">-u或--update 仅置换较备份文件内的文件更新的文件。</span><br><span class="line">-U或--unlink-first 解开压缩文件还原文件之前，先解除文件的连接。</span><br><span class="line">-v或--verbose 显示指令执行过程。</span><br><span class="line">-V&lt;卷册名称&gt;或--label=&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。</span><br><span class="line">-w或--interactive 遭遇问题时先询问用户。</span><br><span class="line">-W或--verify 写入备份文件后，确认文件正确无误。</span><br><span class="line">-x或--extract或--get 从备份文件中还原文件。</span><br><span class="line">-X&lt;范本文件&gt;或--exclude-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除</span><br><span class="line">符合设置条件的文件。</span><br><span class="line">-z或--gzip或--ungzip 通过gzip指令处理备份文件。</span><br><span class="line">-Z或--compress或--uncompress 通过compress指令处理备份文件。</span><br><span class="line">-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。</span><br><span class="line">--after-date=&lt;日期时间&gt; 此参数的效果和指定<span class="string">&quot;-N&quot;</span>参数相同。</span><br><span class="line">--atime-preserve 不变更文件的存取时间。</span><br><span class="line">--backup=&lt;备份方式&gt;或--backup 移除文件前先进行备份。</span><br><span class="line">--checkpoint 读取备份文件时列出目录名称。</span><br><span class="line">--concatenate 此参数的效果和指定<span class="string">&quot;-A&quot;</span>参数相同。</span><br><span class="line">--confirmation 此参数的效果和指定<span class="string">&quot;-w&quot;</span>参数相同。</span><br><span class="line">--delete 从备份文件中删除指定的文件。</span><br><span class="line">--exclude=&lt;范本样式&gt; 排除符合范本样式的文件。</span><br><span class="line">--group=&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。</span><br><span class="line">--<span class="built_in">help</span> 在线帮助。</span><br><span class="line">--ignore-failed-read 忽略数据读取错误，不中断程序的执行。</span><br><span class="line">--new-volume-script=&lt;Script文件&gt; 此参数的效果和指定<span class="string">&quot;-F&quot;</span>参数相同。</span><br><span class="line">--newer-mtime 只保存更改过的文件。</span><br><span class="line">--no-recursion 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。</span><br><span class="line">--null 从null设备读取文件名称。</span><br><span class="line">--numeric-owner 以用户识别码及群组识别码取代用户名称和群组名称。</span><br><span class="line">--owner=&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。</span><br><span class="line">--posix 将数据写入备份文件时使用POSIX格式。</span><br><span class="line">--preserve 此参数的效果和指定<span class="string">&quot;-ps&quot;</span>参数相同。</span><br><span class="line">--preserve-order 此参数的效果和指定<span class="string">&quot;-A&quot;</span>参数相同。</span><br><span class="line">--preserve-permissions 此参数的效果和指定<span class="string">&quot;-p&quot;</span>参数相同。</span><br><span class="line">--record-size=&lt;区块数目&gt; 此参数的效果和指定<span class="string">&quot;-b&quot;</span>参数相同。</span><br><span class="line">--recursive-unlink 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。</span><br><span class="line">--remove-files 文件加入备份文件后，就将其删除。</span><br><span class="line">--rsh-command=&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。</span><br><span class="line">--same-owner 尝试以相同的文件拥有者还原文件。</span><br><span class="line">--suffix=&lt;备份字尾字符串&gt; 移除文件前先行备份。</span><br><span class="line">--totals 备份文件建立后，列出文件大小。</span><br><span class="line">--use-compress-program=&lt;执行指令&gt; 通过指定的指令处理备份文件。</span><br><span class="line">--version 显示版本信息。</span><br><span class="line">--volno-file=&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。</span><br></pre></td></tr></table></figure><p>1、创建归档，保留权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -c -f -p /PATH/TO/SOMEFILE.tar FILE...</span><br><span class="line">tar -cpf /PATH/TO/SOMEFILE.tar FILE...</span><br></pre></td></tr></table></figure><p>2、追加文件至归档，不支持对压缩文件追加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -rf /PATH/TO/SOMEFILE.tar FILE</span><br></pre></td></tr></table></figure><p>3、查看归档文件中的文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -t -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><p>4、展开归档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xf /PATH/TO/SOMEFILE.tar</span><br><span class="line">tar xf /PATH/TO/SOMEFILE.tar -C /PATH/TO/DIR</span><br></pre></td></tr></table></figure><p>5、结合压缩工具实现归档并压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-z 相当于gzip压缩工具</span><br><span class="line">-j 相当于bzip2</span><br><span class="line">-J 相当于xz</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar zcvf test.tar.gz /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar jcvf test.tar.bz2 /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar Jcvf test.tar.xz /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls</span></span><br><span class="line">test.tar.bz2  test.tar.gz  test.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只打包目录内的文件，不包括目录本身</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cd /data/test/</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># tar zcvf /root/test.tar.gz *</span></span><br></pre></td></tr></table></figure><p>6、对文件进行归档压缩式，排除指定的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--exclude 排除文件</span><br><span class="line"></span><br><span class="line">tar zcvf /root/test.tgz --exclude=/data/test/a.txt --exclude=/data/test/b.txt /data/test</span><br></pre></td></tr></table></figure><p>7、选择指定的输入和选择要排除的文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-T 选择指定的输入文件</span><br><span class="line">-X 选择只当包含要排除的文件列表</span><br><span class="line"></span><br><span class="line">tar zcvf backup.tgz -T /root/includefilelist -X /root/excludefilelist</span><br></pre></td></tr></table></figure><h2 id="二、split"><a href="#二、split" class="headerlink" title="二、split"></a>二、split</h2><p>split 命令可以将一个文件分割成多个文件</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个10M的文件</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># dd if=/dev/zero of=/data/test/bigfile bs=1M count=10</span></span><br><span class="line">10+0 records <span class="keyword">in</span></span><br><span class="line">10+0 records out</span><br><span class="line">10485760 bytes (10 MB, 10 MiB) copied, 0.00859871 s, 1.2 GB/s</span><br><span class="line"><span class="comment"># -b 指定分割的大小</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># split -b 1M bigfile smallfile</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll -h</span></span><br><span class="line">total 20M</span><br><span class="line">-rw-r--r-- 1 root root  10M Mar 23 04:23  bigfile</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaa</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileab</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileac</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfilead</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileae</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaf</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileag</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileah</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileai</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaj</span><br><span class="line"><span class="comment"># -d 分割后的文件用数字后缀 </span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># split -b 1M -d  bigfile smallfile | ll -h</span></span><br><span class="line">total 20M</span><br><span class="line">-rw-r--r-- 1 root root  10M Mar 23 04:23  bigfile</span><br><span class="line">-rw-r--r-- 1 root root    0 Mar 23 04:28  smallfile00</span><br><span class="line">-rw-r--r-- 1 root root 468K Mar 23 04:28  smallfile01</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile02</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile03</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile04</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile05</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile06</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile07</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile08</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile09</span><br><span class="line"><span class="comment"># 将切割后的小文件合并成一个大文件</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat smallfile* &gt; bigfile1</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll -h bigfile1</span></span><br><span class="line">-rw-r--r-- 1 root root 10M Mar 23 04:29 bigfile1</span><br></pre></td></tr></table></figure><h2 id="三、cpio"><a href="#三、cpio" class="headerlink" title="三、cpio"></a>三、cpio</h2><p>cpio 是通过重定向的方式将文件进行打包备份、还原恢复的工具，它可以解压缩以“.cpio”和“.tar”结尾的文件</p><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cpio [option] &gt; 文件名或设备名</span><br><span class="line">cpio [option] &lt; 文件名或设备名</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-o output模式，打包，将标准输入传入的文件名打包后发送到标准输出</span><br><span class="line">-i input模式，解包，对标准输入传入的打包文件名解包到当前目录</span><br><span class="line">-t 预览，查看标准输入传入的打包文件中包含的文件列表</span><br><span class="line">-O filename 输出到指定的归档文件名</span><br><span class="line">-A 向已存在的归档文件中追加文件</span><br><span class="line">-I filename 对指定的归档文件名解压</span><br><span class="line">-F filename 使用指定的文件名替代标准输入或输出</span><br><span class="line">-d 解包生成目录，在cpio还原时，自动的建立目录</span><br><span class="line">-v 显示打包过程中的文件名称</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份/etc目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc -print | cpio -ov &gt; bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将/data内容追加到bak.cpio</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data | cpio -oA -F bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容预览</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cpio -tv &lt; bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包文件</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cpio -idv &lt; bak.cpio</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件管理</title>
      <link href="/archives/be55afaa.html"/>
      <url>/archives/be55afaa.html</url>
      
        <content type="html"><![CDATA[<h1 id="软件的运行和编译"><a href="#软件的运行和编译" class="headerlink" title="软件的运行和编译"></a>软件的运行和编译</h1><h2 id="一、软件相关概念"><a href="#一、软件相关概念" class="headerlink" title="一、软件相关概念"></a>一、软件相关概念</h2><h3 id="1-1-ABI"><a href="#1-1-ABI" class="headerlink" title="1.1 ABI"></a>1.1 ABI</h3><p>ABI（Application Binary Interface）: 应用程序二进制接口。每个<a href="https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/192?fromModule=lemma_inlink">操作系统</a>都会为运行在该系统下的应用程序提供应用程序二进制接口。ABI包含了<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/5985445?fromModule=lemma_inlink">应用程序</a>在这个系统下运行时必须遵守的编程约定。 </p><p>Windows与Linux之间不兼容：</p><ul><li>ELF（Executable and Linkable Format）Linux</li><li>PE（Portable Executable）Windows</li></ul><h3 id="1-2-API"><a href="#1-2-API" class="headerlink" title="1.2 API"></a>1.2 API</h3><p>应用程序接口（Application Programming Interface，API），又称为应用编程接口，就是软件系统不同组成部分衔接的约定。API可以在各种不同的操作系统上实现给应用程序提供完全相同的接口，而它们本身在这些系统上的实现却可能不同。以主流的操作系统Windows和Linux为例，API分为 Windows API 和 Linux API。在Windows上开发出来的软件无法在Linux上运行，在Linux上开发出的软件也无法在Windows上运行。为了解决不同操作系统之间软件移植的困难，POSIX标准开始诞生。</p><p>可移植操作系统接口（Portable Operating System Interface，缩写为<strong>POSIX</strong>）是IEEE为要在各种UNIX操作系统上运行软件，而定义API的一系列互相关联的标准的总称。</p><h3 id="1-3-C语言程序实现过程"><a href="#1-3-C语言程序实现过程" class="headerlink" title="1.3 C语言程序实现过程"></a>1.3 C语言程序实现过程</h3><p>C源程序 –&gt; 预处理(Preprocessing) –&gt; 编译(Compilation) –&gt; 汇编(Assemble) –&gt; 链接(Linking) –&gt; 生成可执行文件</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221025172412863-1666689865377-1.png" alt="image-20221025172412863"></p><p>示例：GCC编译过程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini mnt]<span class="comment">#cat test.c </span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello,world!\n&quot;</span>);</span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对test.c文件进行预处理，生成test.i文件</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#gcc -E test.c -o test.i</span></span><br><span class="line"><span class="comment"># 对预处理文件进行编译，生成了汇编文件</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#gcc -S test.i -o test.s</span></span><br><span class="line"><span class="comment"># 对汇编文件进行编译，生成了目标文件</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#gcc -c test.s -o test.o</span></span><br><span class="line"><span class="comment"># 对目标文件进行链接，生成可执行文件</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#gcc test.o -o test</span></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#ls</span></span><br><span class="line">hgfs  <span class="built_in">test</span>  test.c  test.i  test.o  test.s</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#./test </span></span><br><span class="line">Hello,world!</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一步编译链接生成可执行文件</span></span><br><span class="line">gcc test.c -o <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h3 id="1-4-软件模块的静态和动态链接"><a href="#1-4-软件模块的静态和动态链接" class="headerlink" title="1.4 软件模块的静态和动态链接"></a>1.4 软件模块的静态和动态链接</h3><p>链接的作用是将各个模块之间的相互引用的部分处理好，使得各个模块之间能够正确的衔接，分为静态链接和动态链接。</p><p><strong>静态链接</strong></p><ul><li>将程序所对应的依赖包复制一份到包中</li><li>占用空间多，但程序迁移容易</li><li>程序升级困难，需要重新进行链接</li></ul><p><strong>动态链接</strong></p><ul><li>程序所依赖的库做动态的链接指向</li><li>占用空间少，升级方便</li></ul><p><strong>模块（库）文件</strong></p><p>查看二进制程序所依赖的库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ldd /PATH/TO/BINARY_FILE</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini mnt]<span class="comment">#ldd /usr/bin/cat</span></span><br><span class="line">linux-vdso.so.1 (0x00007ffe593e4000)</span><br><span class="line">libc.so.6 =&gt; /lib64/libc.so.6 (0x00007fd84f383000)</span><br><span class="line">/lib64/ld-linux-x86-64.so.2 (0x00007fd84f951000)</span><br></pre></td></tr></table></figure><p>管理查看本机装载的库文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加载配置文件中指定的库文件</span></span><br><span class="line">ldconfig</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示本机已经缓存的所有可用库文件名及文件路径映射关系</span></span><br><span class="line">/sbin/ldconfig –p</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/ld.so.conf</span><br><span class="line">/etc/ld.so.conf.d/*.conf</span><br></pre></td></tr></table></figure><p>缓存文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/ld.so.cache</span><br></pre></td></tr></table></figure><h1 id="软件包和包管理器"><a href="#软件包和包管理器" class="headerlink" title="软件包和包管理器"></a>软件包和包管理器</h1><h2 id="一、软件包基础知识"><a href="#一、软件包基础知识" class="headerlink" title="一、软件包基础知识"></a>一、软件包基础知识</h2><h3 id="1-1-软件包介绍"><a href="#1-1-软件包介绍" class="headerlink" title="1.1 软件包介绍"></a>1.1 软件包介绍</h3><p>最初开源软件只提供打包压缩后的源码文件，用户必须自己编译在Linux上运行的软件。当Debian诞生时，出现了dpkg的包管理工具，用来管理deb后缀的软件包文件。之后红帽开发出自己的rpm包管理工具。</p><p>示例：使用光盘自动挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Rocky Linux</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm -q autofs || yum -y install autofs</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#systemctl enable --now autofs.service</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#cd /misc/cd</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">cd</span>]<span class="comment">#ls</span></span><br><span class="line">AppStream  BaseOS  EFI  images  isolinux  LICENSE  media.repo  TRANS.TBL</span><br></pre></td></tr></table></figure><h3 id="1-2-软件包中的文件分类"><a href="#1-2-软件包中的文件分类" class="headerlink" title="1.2 软件包中的文件分类"></a>1.2 软件包中的文件分类</h3><p>​    二进制文件、库文件、配置文件、帮助文件</p><p>示例：利用cpio工具查看包文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm2cpio 包文件 | cpio –itv    预览包内文件</span><br></pre></td></tr></table></figure><h3 id="1-3-软件包管理器"><a href="#1-3-软件包管理器" class="headerlink" title="1.3 软件包管理器"></a>1.3 软件包管理器</h3><p>软件包管理器的功能：</p><p>​将编译好的应用程序的组成文件打包成一个或多多个程序包文件，利用包管理器可以方便地实现程序包的安装、卸载、查询、升级和校验等管理操作。</p><p>主流的包管理器</p><ul><li>Redhat：rpm文件，rpm包管理器</li><li>Debian：deb文件，dpkg包管理器</li></ul><h3 id="1-4-包命名"><a href="#1-4-包命名" class="headerlink" title="1.4 包命名"></a>1.4 包命名</h3><p>源代码打包文件命名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name-VERSION.tar.gz|bz2|xz</span><br><span class="line">VERSION: major.minor.release</span><br></pre></td></tr></table></figure><p>rpm包命名方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name-VERSION-release.arch.rpm</span><br><span class="line">VERSION: major.minor.release</span><br><span class="line">release: release.OS</span><br><span class="line"></span><br><span class="line">常见的<span class="built_in">arch</span></span><br><span class="line"> x86: i386,i486,i586,i686</span><br><span class="line"> x86_64: x64,x86_64,amd64</span><br><span class="line"> powerpc: ppc</span><br><span class="line"> 与平台无关: noarch</span><br></pre></td></tr></table></figure><h3 id="1-5-分类和拆包"><a href="#1-5-分类和拆包" class="headerlink" title="1.5 分类和拆包"></a>1.5 分类和拆包</h3><p>软件包为了管理和使用的便利，会将一个大的软件分类，放在不同的子包中。</p><p>包的分类</p><ul><li>Application-VERSION-ARCH.rpm    主包</li><li>Application-devel-VERSION-ARCH.rpm    开发子包</li><li>Application-utils-VERSION-ARCH.rpm    其他子包</li><li>Application-libs-VERSION-ARCH.rpm    其他子包</li></ul><h3 id="1-6-包的依赖"><a href="#1-6-包的依赖" class="headerlink" title="1.6 包的依赖"></a>1.6 包的依赖</h3><p>​    软件包之间可能存在依赖关系，甚至循环依赖，即：A包依赖B包，B包依赖C包，C包依赖A包。安装软件包时，会因为缺少依赖的包，而导致安装包失败。</p><p>解决包之间依赖的管理工具：</p><ul><li>yum：rpm包管理器的前端工具</li><li>dnf：Fedora 18+ 及 Centos 8</li><li>apt：deb包管理器的前端工具</li><li>zypper：suse上的rpm前端管理工具</li></ul><h3 id="1-7-程序包管理器相关文件"><a href="#1-7-程序包管理器相关文件" class="headerlink" title="1.7 程序包管理器相关文件"></a>1.7 程序包管理器相关文件</h3><p>1、包文件组成（每个包独有）</p><ul><li>包内的文件</li><li>元数据，如：包的名称，版本，依赖性，描述等</li><li>可能会有包安装或卸载时运行时的脚本</li></ul><p>2、数据库（公共）：&#x2F;var&#x2F;lib&#x2F;rpm</p><ul><li>程序包名称及版本</li><li>依赖关系</li><li>功能说明</li><li>包安装后生成的各文件路径及校验码信息</li></ul><h3 id="1-8-获取程序包的路径"><a href="#1-8-获取程序包的路径" class="headerlink" title="1.8 获取程序包的路径"></a>1.8 获取程序包的路径</h3><ul><li>系统发版的光盘或官方网站</li><li>第三方组织提供</li><li>软件项目官方站点</li><li>搜索引擎</li><li>自己制作</li></ul><h1 id="rpm-包管理器"><a href="#rpm-包管理器" class="headerlink" title="rpm 包管理器"></a>rpm 包管理器</h1><p>RockyLinux 上使用rpm命令管理程序包</p><p>功能：</p><p>​安装、卸载、升级、查询、校验、数据库维护</p><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm &#123;-i|--install&#125; [install-options] PACKAGE_FILE...</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-v: verbose</span><br><span class="line">-h: 以<span class="comment">#来显示程序包管理执行进度</span></span><br></pre></td></tr></table></figure><p>rpm包安装[install-options]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">test</span>: 测试安装，不真正执行安装</span><br><span class="line">--nodeps: 忽略依赖关系</span><br><span class="line">--replacepkgs</span><br><span class="line">--nosignature: 不检查来源合法性</span><br><span class="line">--nodigest: 不检查包完整性</span><br><span class="line">--noscripts: 不执行程序包脚本</span><br><span class="line">    %pre: 安装前脚本 --nopre</span><br><span class="line">    %post: 安装后脚本 --nopost</span><br><span class="line">    %preun: 卸载前脚本 --nopreun</span><br><span class="line">    %postun: 卸载后脚本 --nopostun</span><br></pre></td></tr></table></figure><h2 id="二、升级和降级"><a href="#二、升级和降级" class="headerlink" title="二、升级和降级"></a>二、升级和降级</h2><p>rpm包的升级和降级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rpm &#123;-U|--upgrade&#125; [install-options] PACKAGE_FILE ...</span><br><span class="line">rpm &#123;-F|--freshen&#125; [install-options] PACKAGE_FILE ...</span><br><span class="line">upgrage：安装有旧版程序包，则“升级”；如果不存在旧版程序包，则“安装”</span><br><span class="line">freeshen：安装有旧版程序包，则“升级”；如果不存在旧版程序包，则不执行升级操作</span><br><span class="line"></span><br><span class="line">--oldpackage：降级</span><br><span class="line">--force：强制安装</span><br></pre></td></tr></table></figure><p>注意：</p><p>(1) 不要对内核做升级操作；Linux支持多内核版本并存，因此，对直接安装新版本内核<br>(2) 如果原程序包的配置文件安装后曾被修改，升级时，新版本的提供的同一个配置文件并不会直接覆盖老版本的配置文件，而把新版本的文件重命名(FILENAME.rpmnew)后保留</p><h2 id="三、包查询"><a href="#三、包查询" class="headerlink" title="三、包查询"></a>三、包查询</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">rpm &#123;-q|--query&#125; [select-options] [query-options]</span><br><span class="line"></span><br><span class="line">[select-options]</span><br><span class="line">-a: 所有包</span><br><span class="line">-f: 查看指定的文件由哪个程序包安装生成</span><br><span class="line">-p rpmfile: 针对尚未安装的程序包文件做查询操作</span><br><span class="line"></span><br><span class="line">[query-options]</span><br><span class="line">--changelog: 查询rpm包的changelog</span><br><span class="line">-c: 查询程序的配置文件</span><br><span class="line">-d: 查询程序的文档</span><br><span class="line">-i: information</span><br><span class="line">-l: 查看指定的程序包安装后生成的所有文件</span><br><span class="line">--scripts: 程序包自带的脚本</span><br><span class="line"></span><br><span class="line"><span class="comment"># 和CAPABILITY相关</span></span><br><span class="line">--whatprovides CAPABILITY：查询指定的CAPABILITY由哪个包所提供</span><br><span class="line">--whatrequires CAPABILITY：查询指定的CAPABILITY被哪个包所依赖</span><br><span class="line">--provides：列出指定程序包所提供的CAPABILITY</span><br><span class="line">-R：查询指定的程序包所依赖的CAPABILITY</span><br></pre></td></tr></table></figure><h2 id="四、包卸载"><a href="#四、包卸载" class="headerlink" title="四、包卸载"></a>四、包卸载</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm &#123;-e|--erase&#125; [--allmatchers] [--nodeps] [--noscripts] [--notriggers] [--<span class="built_in">test</span>] PACKAGE_NAME</span><br></pre></td></tr></table></figure><p>注：当包卸载时，对应的配置文件不会删除，以FILENAME.rpmsave形式保留</p><h2 id="五、包校验"><a href="#五、包校验" class="headerlink" title="五、包校验"></a>五、包校验</h2><p>在安装包时，系统会检查包的来源是否是合法的</p><p>检查包的完整性和签名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -K|--checksig RPMFILE</span><br></pre></td></tr></table></figure><p>在检查包的来源和完整性前，必须导入所需要公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial</span></span><br><span class="line"></span><br><span class="line">rpm -qa <span class="string">&quot;gpg-pubkey*&quot;</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 公钥已导入</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm -K /misc/cd/AppStream/Packages/h/httpd-2.4.37-41.module+el8.5.0+695+1fa8055e.x86_64.rpm </span></span><br><span class="line">/misc/cd/AppStream/Packages/h/httpd-2.4.37-41.module+el8.5.0+695+1fa8055e.x86_64.rpm: digests signatures OK</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm -qa &quot;gpg-pubkey*&quot;</span></span><br><span class="line">gpg-pubkey-2f86d6a1-5cf7cefb</span><br><span class="line">gpg-pubkey-6d745a60-60287f36</span><br></pre></td></tr></table></figure><p>软件在安装时，会将包里的每个文件的元数据，如：大小，权限，所有者，时间等记录至rpm相关的数据库中，可以用来检查包中的文件是否和当初安装时有所变化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">rpm &#123;-V|--verify&#125; [select-options] [verify-options]</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm -V rocky-release </span></span><br><span class="line">.......T.  c /etc/issue</span><br><span class="line"></span><br><span class="line">S file Size differs</span><br><span class="line">M Mode differs (includes permissions and file <span class="built_in">type</span>)</span><br><span class="line">5 digest (formerly MD5 <span class="built_in">sum</span>) differs</span><br><span class="line">D Device major/minor number mismatch</span><br><span class="line">L readLink(2) path mismatch</span><br><span class="line">U User ownership differs</span><br><span class="line">G Group ownership differs</span><br><span class="line">T mTime differs</span><br><span class="line">P capabilities differ</span><br><span class="line">. (点) 表示当前位置代表的字符含义一致</span><br><span class="line">c 所在的位置表示文件类型</span><br><span class="line">c 配置文件</span><br><span class="line">d 文件数据文件</span><br><span class="line">g 该文件不属于某个文件(少数情况)</span><br><span class="line">l 许可证文件(license file)</span><br><span class="line">r 自述文件(READ ME)</span><br></pre></td></tr></table></figure><h2 id="六、数据库维护"><a href="#六、数据库维护" class="headerlink" title="六、数据库维护"></a>六、数据库维护</h2><p>rpm包安装时生成的信息，都放在rpm数据库中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/var/lib/rpm</span><br><span class="line"></span><br><span class="line">rpm &#123;--initdb|--rebuilddb&#125;</span><br><span class="line">initdb: 初始化，如果事先不存在数据库，则新建之，否则，不执行任何操作</span><br><span class="line">rebuilddb: 重建已安装的包头的数据库索引目录</span><br></pre></td></tr></table></figure><h1 id="yum-和-dnf"><a href="#yum-和-dnf" class="headerlink" title="yum 和 dnf"></a>yum 和 dnf</h1><p>RockyLinux 使用 yum, dnf 解决rpm包依赖关系</p><p>YUM，rpm的前端程序，解决软件包相关依赖性，Rocky8使用dnf代替了yum，不过保留了和yum的兼容性，配置通用</p><h2 id="一、yum-x2F-dnf-工作原理"><a href="#一、yum-x2F-dnf-工作原理" class="headerlink" title="一、yum&#x2F;dnf 工作原理"></a>一、yum&#x2F;dnf 工作原理</h2><p>yum&#x2F;dnf 是基于C&#x2F;S模式</p><ul><li>yum 服务器存放rpm包和包相关的元数据库</li><li>yum 客户端访问yum服务器进行安装或查询等</li></ul><h2 id="二、yum客户端配置"><a href="#二、yum客户端配置" class="headerlink" title="二、yum客户端配置"></a>二、yum客户端配置</h2><p>yum 客户端配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.conf            <span class="comment">#为所有仓库提供公共配置</span></span><br><span class="line">/etc/yum.repos.d/*.repo  <span class="comment">#为每个仓库的提供配置文件</span></span><br></pre></td></tr></table></figure><p>repo 仓库主要配置文件解析</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[repositoryID]</span><br><span class="line">name=                  <span class="comment"># 仓库名</span></span><br><span class="line">baseurl=URL            <span class="comment"># 仓库服务器地址</span></span><br><span class="line">enabled=&#123;1|0&#125;          <span class="comment"># 是否启用</span></span><br><span class="line">gpgcheck=&#123;1|0&#125;         <span class="comment"># 是否进行包校验</span></span><br><span class="line">gpgkey=URL             <span class="comment"># 进行包校验的地址</span></span><br></pre></td></tr></table></figure><p>yum 服务器的baseurl形式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">file://          本地路径</span><br><span class="line">http://</span><br><span class="line">https://</span><br><span class="line">ftp://</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum 仓库指向的路径一定必须是repodata目录所在的目录 </span></span><br></pre></td></tr></table></figure><p>相关变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum的repo配置文件中可用的变量</span></span><br><span class="line"><span class="variable">$releasever</span>: 当前OS的发行版的主版本号，如：8，7，6</span><br><span class="line"><span class="variable">$arch</span>: CPU架构，如：aarch64, i586, i686，x86_64等</span><br><span class="line"><span class="variable">$basearch</span>：系统基础平台；i386, x86_64</span><br></pre></td></tr></table></figure><p>示例：RockyLinux8 配置国内源文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat /etc/yum.repos.d/yum.repo </span></span><br><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=https://mirrors.cloud.tencent.com/centos-vault/centos/<span class="variable">$releasever</span>/BaseOS/<span class="variable">$basearch</span>/os/</span><br><span class="line">        https://mirrors.tuna.tsinghua.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/BaseOS/<span class="variable">$basearch</span>/os/</span><br><span class="line">        https://mirrors.aliyun.com/centos-vault/centos/<span class="variable">$releasever</span>/BaseOS/<span class="variable">$basearch</span>/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=https://mirrors.cloud.tencent.com/centos-vault/centos/<span class="variable">$releasever</span>/AppStream/<span class="variable">$basearch</span>/os/</span><br><span class="line">        https://mirrors.tuna.tsinghua.edu.cn/centos-vault/centos/<span class="variable">$releasever</span>/AppStream/<span class="variable">$basearch</span>/os/</span><br><span class="line">        https://mirrors.aliyun.com/centos-vault/centos/<span class="variable">$releasever</span>/AppStream/<span class="variable">$basearch</span>/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[epel]              </span><br><span class="line">name=epel</span><br><span class="line">baseurl=https://mirrors.aliyun.com/epel/<span class="variable">$releasever</span>/Everything/<span class="variable">$basearch</span>/</span><br><span class="line">        https://mirrors.tuna.tsinghua.edu.cn/epel/<span class="variable">$releasever</span>/Everything/<span class="variable">$basearch</span>/</span><br><span class="line">        https://mirrors.cloud.tencent.com/epel/<span class="variable">$releasever</span>/Everything/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-8</span><br><span class="line">       https://mirrors.tuna.tsinghua.edu.cn/epel/RPM-GPG-KEY-EPEL-8</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>示例：CentOS7 配置国内源文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#cat /etc/yum.repos.d/yum.repo</span></span><br><span class="line">[Base]</span><br><span class="line">name=Base</span><br><span class="line">baseurl=https://mirrors.cloud.tencent.com/centos/7/os/x86_64/</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/centos/7/os/x86_64/</span><br><span class="line">https://mirrors.aliyun.com/centos/7/os/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[epel]</span><br><span class="line">name=epel</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/epel/7/x86_64/</span><br><span class="line">https://mirrors.cloud.tencent.com/epel/7/x86_64/</span><br><span class="line">https://mirrors.aliyun.com/epel/7/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>示例：使用本地光盘源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 光盘已自动挂载</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat /etc/yum.repos.d/Rocky8.repo</span></span><br><span class="line">[Rocky8_Baseos]</span><br><span class="line">name=Baseos</span><br><span class="line">baseurl=file:///misc/cd/BaseOS</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[Rocky8_Appstream]</span><br><span class="line">name=Appstream</span><br><span class="line">baseurl=file:///misc/cd/AppStream</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>关于仓库的管理命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager    可以生成yum仓库的配置文件及启用或禁用仓库，来自于yum-utils包</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式</span></span><br><span class="line"><span class="comment">## 增加仓库</span></span><br><span class="line">yum-config-manager -add-repo URL或file</span><br><span class="line"></span><br><span class="line"><span class="comment">## 禁用仓库</span></span><br><span class="line">yum-config-manager --<span class="built_in">disable</span> <span class="string">&quot;仓库名&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##启用仓库</span></span><br><span class="line">yum-config-manager --<span class="built_in">enable</span> <span class="string">&quot;仓库名&quot;</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建仓库配置</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#rpm -qf `which yum-config-manager`</span></span><br><span class="line">yum-utils-4.0.21-3.el8.noarch</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum-config-manager --add-repo  https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Adding repo from: https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#ls /etc/yum.repos.d/ | grep docker</span></span><br><span class="line">docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="三、yum-命令"><a href="#三、yum-命令" class="headerlink" title="三、yum 命令"></a>三、yum 命令</h2><p>yum命令的用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [options] [<span class="built_in">command</span>] [package ...]</span><br></pre></td></tr></table></figure><p>yum的命令行选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-y                            <span class="comment"># 自动回答‘yes’</span></span><br><span class="line">-q                            <span class="comment"># 静默模式</span></span><br><span class="line">--nogpgcheck                  <span class="comment"># 不进行gpgcheck检查</span></span><br><span class="line">--enablerepo=repoid_glob      <span class="comment"># 临时启用此处指定的repo，支持使用通配符，如：&quot;*&quot;</span></span><br><span class="line">--disablerepo=repoid_glob     <span class="comment"># 临时禁用此处指定的repo</span></span><br></pre></td></tr></table></figure><h3 id="3-1-显示仓库列表"><a href="#3-1-显示仓库列表" class="headerlink" title="3.1 显示仓库列表"></a>3.1 显示仓库列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist [all|enabled|disabled]</span><br></pre></td></tr></table></figure><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum repolist -v             # 显示仓库更完整的信息</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum repolist all</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum repolist enabled</span></span><br></pre></td></tr></table></figure><h3 id="3-2-显示程序包"><a href="#3-2-显示程序包" class="headerlink" title="3.2 显示程序包"></a>3.2 显示程序包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br><span class="line">yum list [all | glob_exp1] [glob_exp2] [...]</span><br><span class="line">yum list &#123;available|installed|updates&#125; [glob_exp1] [...]</span><br></pre></td></tr></table></figure><p>Example1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认情况下，使用yum list或yum install时，yum会默认选择最新的版本</span></span><br><span class="line"><span class="comment"># 当需要安装某个软件包的指定版本时，可以使用--showduplicates参数列出所有版本</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list docker-ce</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Last metadata expiration check: 0:38:33 ago on Sat 29 Oct 2022 09:32:14 PM EDT.</span><br><span class="line">Available Packages</span><br><span class="line">docker-ce.x86_64            3:20.10.21-3.el8                        docker-ce-stable</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list docker-ce --showduplicates</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Last metadata expiration check: 0:39:32 ago on Sat 29 Oct 2022 09:32:14 PM EDT.</span><br><span class="line">Available Packages</span><br><span class="line">docker-ce.x86_64             3:19.03.13-3.el8                       docker-ce-stable</span><br><span class="line">docker-ce.x86_64             3:19.03.14-3.el8                       docker-ce-stable</span><br><span class="line">docker-ce.x86_64             3:19.03.15-3.el8                       docker-ce-stable</span><br><span class="line">docker-ce.x86_64             3:20.10.0-3.el8                        docker-ce-stable</span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list docker-ce --disablerepo=&quot;docker*&quot;</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Last metadata expiration check: 0:47:10 ago on Sat 29 Oct 2022 09:28:13 PM EDT.</span><br><span class="line">Error: No matching Packages to list</span><br></pre></td></tr></table></figure><p>Example2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只查看已经安装的包</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list installed | wc -l</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">499</span><br></pre></td></tr></table></figure><p>Example3：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可安装的包</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list available | wc -l</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">15908</span><br></pre></td></tr></table></figure><p>Example4：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可以升级的包</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum list updates | wc -l</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">26</span><br></pre></td></tr></table></figure><h3 id="3-3-安装程序包"><a href="#3-3-安装程序包" class="headerlink" title="3.3 安装程序包"></a>3.3 安装程序包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install package1 ...</span><br><span class="line">yum reinstall package1 ...</span><br><span class="line"></span><br><span class="line">--downloadonly  <span class="comment"># 只下载相关包默认至/var/cache/yum/x86_64/7/目录下（7版本） /var/cache/dnf（8版本）</span></span><br><span class="line">--downloadaddir=&lt;path&gt;,--destdir=&lt;path&gt;  <span class="comment"># 用来指定下载的目录，如果不存在自动创建</span></span><br></pre></td></tr></table></figure><h4 id="3-3-1-安装epel源包"><a href="#3-3-1-安装epel源包" class="headerlink" title="3.3.1 安装epel源包"></a>3.3.1 安装epel源包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装软件之前需配置好epel源</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum -y install sl</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#sl -a</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221030103900751.png" alt="image-20221030103900751"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#dnf -y install cowsay</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#animalsay nihao</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221030104109290.png" alt="image-20221030104109290"></p><h4 id="3-3-2-升级内核"><a href="#3-3-2-升级内核" class="headerlink" title="3.3.2 升级内核"></a>3.3.2 升级内核</h4><p>实例：利用elrepo源在Centos7安装新版本内核</p><p>注：选择内核版本时，选择”kernel-lt”,长期技术支持版，安全稳定；“kernal-ml”为主线版，即测试版，不推荐使用。</p><p><strong>1、进入elrepo源官网，找到对应版本的安装提示</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221030105852223.png" alt="image-20221030105852223"></p><p><strong>2、按照提示安装该rpm包，之后会生成仓库配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#yum install https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#ls /etc/yum.repos.d/</span></span><br><span class="line">backup  elrepo.repo  yum.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认内核仓库并没有开启</span></span><br><span class="line">[root@centos7 yum.repos.d]<span class="comment">#cat elrepo.repo </span></span><br><span class="line"><span class="comment">### Name: ELRepo.org Community Enterprise Linux Repository for el7</span></span><br><span class="line"><span class="comment">### URL: https://elrepo.org/</span></span><br><span class="line"></span><br><span class="line">[elrepo]</span><br><span class="line">name=ELRepo.org Community Enterprise Linux Repository - el7</span><br><span class="line">baseurl=http://elrepo.org/linux/elrepo/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirrors.coreix.net/elrepo/elrepo/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirror.rackspace.com/elrepo/elrepo/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://linux-mirrors.fnal.gov/linux/elrepo/elrepo/el7/<span class="variable">$basearch</span>/</span><br><span class="line">mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo.el7</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-elrepo.org</span><br><span class="line">protect=0</span><br><span class="line"></span><br><span class="line">[elrepo-testing]</span><br><span class="line">name=ELRepo.org Community Enterprise Linux Testing Repository - el7</span><br><span class="line">baseurl=http://elrepo.org/linux/testing/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirrors.coreix.net/elrepo/testing/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirror.rackspace.com/elrepo/testing/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://linux-mirrors.fnal.gov/linux/elrepo/testing/el7/<span class="variable">$basearch</span>/</span><br><span class="line">mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-testing.el7</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-elrepo.org</span><br><span class="line">protect=0</span><br><span class="line"></span><br><span class="line">[elrepo-kernel]</span><br><span class="line">name=ELRepo.org Community Enterprise Linux Kernel Repository - el7</span><br><span class="line">baseurl=http://elrepo.org/linux/kernel/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirrors.coreix.net/elrepo/kernel/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirror.rackspace.com/elrepo/kernel/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://linux-mirrors.fnal.gov/linux/elrepo/kernel/el7/<span class="variable">$basearch</span>/</span><br><span class="line">mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-kernel.el7</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-elrepo.org</span><br><span class="line">protect=0</span><br><span class="line"></span><br><span class="line">[elrepo-extras]</span><br><span class="line">name=ELRepo.org Community Enterprise Linux Extras Repository - el7</span><br><span class="line">baseurl=http://elrepo.org/linux/extras/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirrors.coreix.net/elrepo/extras/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://mirror.rackspace.com/elrepo/extras/el7/<span class="variable">$basearch</span>/</span><br><span class="line">http://linux-mirrors.fnal.gov/linux/elrepo/extras/el7/<span class="variable">$basearch</span>/</span><br><span class="line">mirrorlist=http://mirrors.elrepo.org/mirrors-elrepo-extras.el7</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-elrepo.org</span><br><span class="line">protect=0</span><br><span class="line"></span><br><span class="line">[root@centos7 yum.repos.d]<span class="comment">#yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * elrepo-kernel: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                                                             5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-devel.x86_64                                                       5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-doc.noarch                                                         5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-headers.x86_64                                                     5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-tools.x86_64                                                       5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-tools-libs.x86_64                                                  5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-lt-tools-libs-devel.x86_64                                            5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                                                             6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                                                       6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                                                         6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                                                     6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                                                       6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                                                  6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64                                            6.0.6-1.el7.elrepo                                               elrepo-kernel</span><br><span class="line">perf.x86_64                                                                  5.4.221-1.el7.elrepo                                             elrepo-kernel</span><br><span class="line">python-perf.x86_64</span><br></pre></td></tr></table></figure><p><strong>3、安装新版本内核</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 yum.repos.d]<span class="comment">#yum -y install kernel-lt.x86_64 --enablerepo=&quot;elrepo-kernel&quot;</span></span><br><span class="line"><span class="comment"># 当前版本内核</span></span><br><span class="line">[root@centos7 yum.repos.d]<span class="comment">#uname -r</span></span><br><span class="line">3.10.0-1160.el7.x86_64</span><br><span class="line"><span class="comment"># 当前已安装的内核版本</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#ls /lib/modules</span></span><br><span class="line">3.10.0-1160.el7.x86_64  5.4.221-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><p><strong>4、重启系统，选择新版本内核启动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择新版本内核后启动机器，验证</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#uname -r</span></span><br><span class="line">5.4.221-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221030112530383.png" alt="image-20221030112530383"></p><h4 id="3-3-3-只下载相关的依赖包，而不安装"><a href="#3-3-3-只下载相关的依赖包，而不安装" class="headerlink" title="3.3.3 只下载相关的依赖包，而不安装"></a>3.3.3 只下载相关的依赖包，而不安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当一台机器不能上网需要依赖网络安装某个包，可让另一台可以上网的机器将改包及其依赖关系下载下来，但不安装，之后传到需要的机器上去即可</span></span><br><span class="line"><span class="comment"># --downloaddir 下载到指定目录，没有会自动创建</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum -y install --downloadonly --downloaddir=/data/httpd httpd</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#ls /data/httpd/</span></span><br><span class="line">centos-logos-httpd-85.8-2.el8.noarch.rpm                            httpd-tools-2.4.37-43.module_el8.5.0+1022+b541f3b1.x86_64.rpm</span><br><span class="line">httpd-2.4.37-43.module_el8.5.0+1022+b541f3b1.x86_64.rpm             mailcap-2.1.48-3.el8.noarch.rpm</span><br><span class="line">httpd-filesystem-2.4.37-43.module_el8.5.0+1022+b541f3b1.noarch.rpm  mod_http2-1.15.7-3.module_el8.4.0+778+c970deab.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="3-4-卸载程序包"><a href="#3-4-卸载程序包" class="headerlink" title="3.4 卸载程序包"></a>3.4 卸载程序包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove package1 ...</span><br></pre></td></tr></table></figure><h3 id="3-5-升级和降级"><a href="#3-5-升级和降级" class="headerlink" title="3.5 升级和降级"></a>3.5 升级和降级</h3><p>检查可用升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum check-update</span><br></pre></td></tr></table></figure><p>升级和降级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum upgrade|update [package1] [...]</span><br><span class="line">yum upgrade-minimal    <span class="comment"># 最小化升级</span></span><br><span class="line">yum downgrade package1 [package2] [...]</span><br></pre></td></tr></table></figure><h3 id="3-6-查询"><a href="#3-6-查询" class="headerlink" title="3.6 查询"></a>3.6 查询</h3><p>查询程序包information</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info [...]</span><br></pre></td></tr></table></figure><p>查看指定的特性（可以是某文件）是由那个程序包提供的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum provides | whatprovides feature1 [feature2] [...]</span><br><span class="line"></span><br><span class="line">注：文件要写全路径，不能只是文件名，否则有可能查询不到</span><br></pre></td></tr></table></figure><p>Example</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#ll /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"><span class="built_in">ls</span>: cannot access <span class="string">&#x27;/etc/vsftpd/vsftpd.conf&#x27;</span>: No such file or directory</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum provides /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Last metadata expiration check: 1:02:37 ago on Sun 30 Oct 2022 01:02:07 AM EDT.</span><br><span class="line">vsftpd-3.0.3-34.el8.x86_64 : Very Secure Ftp Daemon</span><br><span class="line">Repo        : AppStream</span><br><span class="line">Matched from:</span><br><span class="line">Filename    : /etc/vsftpd/vsftpd.conf</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum provides vsftpd.conf</span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">Last metadata expiration check: 1:02:43 ago on Sun 30 Oct 2022 01:02:07 AM EDT.</span><br><span class="line">Error: No Matches found</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用通配符</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#yum provides */vsftpd.conf</span></span><br></pre></td></tr></table></figure><p>以指定的关键字搜索程序包名及summary信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum search string1 [string2] [...]</span><br></pre></td></tr></table></figure><p>查看指定包所依赖的CAPABILITIES</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum deplist package1 [package2] [...]</span><br></pre></td></tr></table></figure><h3 id="3-7-仓库缓存"><a href="#3-7-仓库缓存" class="headerlink" title="3.7 仓库缓存"></a>3.7 仓库缓存</h3><p>清除目录&#x2F;var&#x2F;cache&#x2F;dnf | yum&#x2F;   中的缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean [packages | metadata | expire-cache | rpmdb | plugins | all]</span><br></pre></td></tr></table></figure><p>构建缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h3 id="3-8-查看yum事务历史"><a href="#3-8-查看yum事务历史" class="headerlink" title="3.8 查看yum事务历史"></a>3.8 查看yum事务历史</h3><p>yum 执行安装卸载命令会记录到相关日志中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">7版本</span><br><span class="line">/var/log/yum.log</span><br><span class="line"></span><br><span class="line">8版本</span><br><span class="line">/var/log/dnf.rpm.log</span><br><span class="line">/var/log/dnf.log</span><br></pre></td></tr></table></figure><p>日志命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="built_in">history</span> [info|list|packages-list|packages-info|summary|addon-info|redo|undo|rollback|new|<span class="built_in">sync</span>|stats]</span><br></pre></td></tr></table></figure><p>Example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini dnf]<span class="comment">#dnf history </span></span><br><span class="line">Repository epel is listed more than once <span class="keyword">in</span> the configuration</span><br><span class="line">ID     | Command line                    | Date and time    | Action(s)      | Altered</span><br><span class="line">-----------------------------------------------------------------------------------------------</span><br><span class="line">    33 | -y install yum-utils            | 2022-10-29 21:28 | Install        |    1   </span><br><span class="line">    32 | -y install cowsay               | 2022-10-29 07:00 | Install        |   42   </span><br><span class="line">    31 | -y install autofs               | 2022-10-29 03:36 | Install        |    1   </span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini dnf]<span class="comment">#dnf history info 33           # 查看第33次安装的详细信息</span></span><br><span class="line">[root@Rocky8-mini dnf]<span class="comment">#dnf history undo 33 -y        # 撤销第33次操作</span></span><br><span class="line">[root@Rocky8-mini dnf]<span class="comment">#dnf history redo 3 -y        # 重新执行第33次操作</span></span><br></pre></td></tr></table></figure><h3 id="3-9-安装及升级本地程序包"><a href="#3-9-安装及升级本地程序包" class="headerlink" title="3.9 安装及升级本地程序包"></a>3.9 安装及升级本地程序包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum localinstall|install rpmfile1 [rpmfile2] [...]</span><br><span class="line">yum localupdate|update rpmfile1 [rpmfile2] [...]</span><br></pre></td></tr></table></figure><h3 id="3-10-查看包的安全警报"><a href="#3-10-查看包的安全警报" class="headerlink" title="3.10 查看包的安全警报"></a>3.10 查看包的安全警报</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum updateinfo --summary|--list|--info</span><br></pre></td></tr></table></figure><h3 id="3-11-包组管理的相关命令"><a href="#3-11-包组管理的相关命令" class="headerlink" title="3.11 包组管理的相关命令"></a>3.11 包组管理的相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum grouplist [hidden] [groupwildcard] [...]</span><br><span class="line">yum groupinstall group1 [group2] [...]</span><br><span class="line">yum groupupdate group1 [group2] [...]</span><br><span class="line">yum groupremove group1 [group2] [...]</span><br><span class="line">yum groupinfo group1 [...]</span><br></pre></td></tr></table></figure><h3 id="3-12-DNF-介绍"><a href="#3-12-DNF-介绍" class="headerlink" title="3.12 DNF 介绍"></a>3.12 DNF 介绍</h3><p>DNF 是新一代的rpm软件包管理器。他首先出现在 Fedora 18 这个发行版中。DNF包管理器克服了YUM包管理器的一些瓶颈，提升了包括用户体验，内存占用，依赖分析，运行速度等多方面的内容。</p><p>配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/dnf/dnf.conf</span><br></pre></td></tr></table></figure><p>仓库文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.repos.d/*.repo</span><br></pre></td></tr></table></figure><p>日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/var/log/dnf.rpm.log</span><br><span class="line">/var/log/dnf.log</span><br></pre></td></tr></table></figure><p>dnf 用法和yum一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">dnf [options] &lt;<span class="built_in">command</span>&gt; [&lt;arguments&gt;...]</span><br><span class="line">dnf --version</span><br><span class="line">dnf repolist</span><br><span class="line">dnf reposync</span><br><span class="line">dnf install httpd</span><br><span class="line">dnf remove httpd</span><br><span class="line">dnf clean all</span><br><span class="line">dnf makecache</span><br><span class="line">dnf list installed</span><br><span class="line">dnf list available</span><br><span class="line">dnf search nano</span><br><span class="line">dnf <span class="built_in">history</span> undo 1</span><br></pre></td></tr></table></figure><h3 id="3-13-实现私有yum仓库"><a href="#3-13-实现私有yum仓库" class="headerlink" title="3.13 实现私有yum仓库"></a>3.13 实现私有yum仓库</h3><p>实验目的：</p><p>​配置Server端使用光盘中的镜像挂载到指定位置，网络epel源使用中科大镜像源下载到本地。使Server端成为本地YUM服务器，配置Client端的仓库地址为Server端。</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221030153044890.png" alt="image-20221030153044890"></p><p><strong>1、配置epel源，之后下载到本地；BaseOS和AppStream源使用本地光盘进行挂载</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-server ~]<span class="comment"># cat /etc/yum.repos.d/yum.repo </span></span><br><span class="line">[epel]              </span><br><span class="line">name=epel</span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/epel/8/Everything/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.ustc.edu.cn/epel/RPM-GPG-KEY-EPEL-8</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p><strong>2、server 端安装httpd服务，使其作为一台服务器，为客户端提供服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-server ~]<span class="comment"># dnf -y install httpd</span></span><br><span class="line">[root@Rocky8-server ~]<span class="comment"># systemctl enable --now httpd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建8版本的包存放位置</span></span><br><span class="line">[root@Rocky8-server ~]<span class="comment"># mkdir /var/www/html/Rocky/8/cdrom -p</span></span><br></pre></td></tr></table></figure><p><strong>3、配置本地光盘挂载到指定的位置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-server 8]<span class="comment"># mount /dev/sr0 /var/www/html/Rocky/8/</span></span><br><span class="line"><span class="comment"># 配置永久挂载</span></span><br><span class="line">[root@Rocky8-server 8]<span class="comment"># cat /etc/fstab </span></span><br><span class="line">/dev/sr0/var/www/html/Rocky/8/cdromiso9660defaults0 0</span><br></pre></td></tr></table></figure><p><strong>4、下载配置完成的epel源到本地</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## --download-metadata 下载元数据</span></span><br><span class="line"><span class="comment">## -p 指定保存的位置</span></span><br><span class="line">[root@Rocky8-server 8]<span class="comment"># dnf reposync --repoid=epel --download-metadata -p /var/www/html/Rocky/8/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载epel源包的校验文件</span></span><br><span class="line">[root@Rocky8-server epel]<span class="comment"># wget -P /var/www/html/Rocky/8/epel/ https://mirrors.ustc.edu.cn/epel/RPM-GPG-KEY-EPEL-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当下载仓库包没有下载对应的元数据时，可以手动生成，需要使用createrepo命令，没有需要安装</span></span><br><span class="line">[root@Rocky8-server ~]<span class="comment"># createrepo /var/www/html/Rocky/8/epel/</span></span><br></pre></td></tr></table></figure><p><strong>5、配置客户端的仓库源，指向本地服务器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-client ~]<span class="comment">#cat /etc/yum.repos.d/yum.repo </span></span><br><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=http://192.168.119.138/Rocky/8/cdrom/BaseOS/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=http://192.168.119.138/Rocky/8/cdrom/AppStream/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[epel]              </span><br><span class="line">name=epel</span><br><span class="line">baseurl=http://192.168.119.138/Rocky/8/epel/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://192.168.119.138/Rocky/8/epel/RPM-GPG-KEY-EPEL-8</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p><strong>6、验证</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-client yum.repos.d]<span class="comment">#yum repolist all</span></span><br><span class="line">repo <span class="built_in">id</span>                          repo name                          status</span><br><span class="line">AppStream                        AppStream                          enabled</span><br><span class="line">BaseOS                           BaseOS                             enabled</span><br><span class="line">epel                             epel                               enabled</span><br><span class="line">[root@Rocky8-client yum.repos.d]<span class="comment">#dnf -y install sl</span></span><br></pre></td></tr></table></figure><h1 id="程序包编译"><a href="#程序包编译" class="headerlink" title="程序包编译"></a>程序包编译</h1><h2 id="一、C语言源代码编译安装过程"><a href="#一、C语言源代码编译安装过程" class="headerlink" title="一、C语言源代码编译安装过程"></a>一、C语言源代码编译安装过程</h2><p>编译过程一般需要三步骤：</p><ul><li>.&#x2F;configure<ul><li>通过选项传递参数，可以指定安装路径、启用特性等；执行时会参考用户指定的某些特性，以及Makefile.in文件生成Makefile</li><li>检查依赖到的外部环境，如依赖到的软件包</li></ul></li><li>make 根据Makefile文件，会检测到依赖的环境，进行构建应用程序</li><li>make install 复制文件到相应路径</li></ul><p>注：安装前可通过查看README，INSTALL获取帮助</p><h3 id="1-1-编译安装准备"><a href="#1-1-编译安装准备" class="headerlink" title="1.1 编译安装准备"></a>1.1 编译安装准备</h3><p>安装相关依赖包</p><ul><li>开发工具：make，gcc</li><li>开发环境：开发库（glibc 标准库），头文件，可安装开发包组 Development Tools</li><li>软件相关依赖包</li></ul><p>基于最小化安装的系统建议安装下面相关包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 源码编译安装程序包时，但某些包必须要在安装之前就安装好，遇到不明显的错误提示时，可重新解压缩源码包进行安装（上次安装生成的文件应删除）</span></span><br><span class="line">yum -y install gcc make autoconf gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel zlib-devel vim lrzsz tree tmux lsof tcpdump wget net-tools iotop bc bzip2 zip unzip nfs-utils man-pages </span><br></pre></td></tr></table></figure><h3 id="1-2-编译安装"><a href="#1-2-编译安装" class="headerlink" title="1.2 编译安装"></a>1.2 编译安装</h3><p>第一步：运行configure脚本，生成Makefile文件</p><p>其选项主要功能：</p><ul><li>指定安装位置</li><li>指定启用的特性</li></ul><p>获取支持使用的选项<code>./configure --help</code></p><p>选项分类：</p><ul><li>安装路径设定<ul><li>–prefix&#x3D;&#x2F;PATH    指定默认安装位置，默认为&#x2F;usr&#x2F;local&#x2F;</li><li>sysconfdir&#x3D;&#x2F;PATH    配置文件安装位置</li></ul></li><li>软件特性和相关指定<ul><li>Optional Features：可选特性<ul><li>–disable-FEATURE</li><li>–enable-FEATURE</li></ul></li><li>Optional Packages：可选包<ul><li>–with-PACKAGE    依赖包</li><li>–without-PACKAGE    禁用依赖关系</li></ul></li></ul></li></ul><p>注：通常被编译操作依赖的程序包，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION</p><p>第二步：make</p><p>第三步：make install</p><h3 id="1-3-安装后配置"><a href="#1-3-安装后配置" class="headerlink" title="1.3 安装后配置"></a>1.3 安装后配置</h3><p>1、二进制程序导入至PATH环境变量中，长久保存写入到 &#x2F;etc&#x2F;profile.d&#x2F;NAME.sh 文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/PATH/TO/BIN:<span class="variable">$PATH</span> </span><br></pre></td></tr></table></figure><p>2、创建相关用户及文件</p><p>​    一些开源软件编译完成后，需要创建相关的用户及文件</p><p>3、导入帮助守则</p><p>​    编辑 &#x2F;etc&#x2F;man.conf | man_db.conf 文件，添加一个 MANPATH</p><h3 id="1-4-编译安装实例"><a href="#1-4-编译安装实例" class="headerlink" title="1.4 编译安装实例"></a>1.4 编译安装实例</h3><h4 id="1-4-1-编译安装最新版的-tree"><a href="#1-4-1-编译安装最新版的-tree" class="headerlink" title="1.4.1 编译安装最新版的 tree"></a>1.4.1 编译安装最新版的 tree</h4><p>实例：Rocky8 编译安装tree2.0.4</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装相关依赖包</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># yum -y install gcc make</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载源码包并解压</span></span><br><span class="line"><span class="comment">## 网址 http://mama.indstate.edu/users/ice/tree/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls tree-2.0.4.tgz </span></span><br><span class="line">tree-2.0.4.tgz</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar -xvf tree-2.0.4.tgz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入解压缩目录，查看README和INSTALL</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cd tree-2.0.4/</span></span><br><span class="line">[root@Rocky8-mini tree-2.0.4]<span class="comment"># cat INSTALL</span></span><br><span class="line">[root@Rocky8-mini tree-2.0.4]<span class="comment"># cat README</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此软件包过小，不需要执行configure命令，有默认的Makefile文件。修改Makefile文件，指定安装的位置</span></span><br><span class="line">[root@Rocky8-mini tree-2.0.4]<span class="comment"># vim Makefile</span></span><br><span class="line">PREFIX=/apps/tree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line"><span class="comment">## -j 指定CPU核数，根据自己机器实际配置</span></span><br><span class="line">[root@Rocky8-mini tree-2.0.4]<span class="comment"># make -j 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">[root@Rocky8-mini tree-2.0.4]<span class="comment"># make install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装完成后无法直接运行，可通过修改环境变量或软链接的方式实现</span></span><br><span class="line"><span class="comment">## 修改环境变量</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#x27;PATH=/apps/tree/bin:$PATH&#x27; &gt; /etc/profile.d/tree.sh</span></span><br><span class="line"><span class="comment">## 软链接</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ln -s /apps/tree/bin/tree /usr/bin/tree</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证结果</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tree --version</span></span><br><span class="line">tree v2.0.4 (c) 1996 - 2022 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加man帮助</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/man_db.conf</span></span><br><span class="line">MANDATORY_MANPATH     /apps/tree/man</span><br></pre></td></tr></table></figure><h1 id="Ubuntu-软件管理"><a href="#Ubuntu-软件管理" class="headerlink" title="Ubuntu 软件管理"></a>Ubuntu 软件管理</h1><p>Debian 软件包通常为预编译的二进制格式的扩展名为“.deb”，类似rpm文件，不需要编译。包文件包括特定功能或软件所需的文件、元数据和指令</p><ul><li>dpkg：类似于rpm，是基于Debian系统的包管理器</li><li>apt：类似于yum，软件管理工具</li></ul><h2 id="一、APT-工作原理"><a href="#一、APT-工作原理" class="headerlink" title="一、APT 工作原理"></a>一、APT 工作原理</h2><p>在服务器上先复制所有DEB包，然后用APT的分析工具 genbasedir 根据每个DEB 包的包头（Header）信息对所有的DEB包进行分析，并将该分析结果记录在文件夹base内的一个DEB 索引清单文件中，一旦APT 服务器内的DEB有所变动，要使用 genbasedir 产生新的DEB索引清单。客户端在进行安装或升级时先要查询DEB索引清单，从而获知所有具有依赖关系的软件包，并一同下载到客户端以便安装。当客户端需要安装、升级或删除某个软件包时，客户端计算机取得DEB索引清单压缩文件后，会将其解压置放于 &#x2F;var&#x2F;cache&#x2F;apt&#x2F;，而客户端使用 apt-get install 或 apt-get upgrade 命令的时候，就会将这个文件夹内的数据和客户端计算机内的DEB数据库比对，知道哪些DEB已安装、未安装或是可以升级的。</p><h2 id="二、dpkg-包管理器"><a href="#二、dpkg-包管理器" class="headerlink" title="二、dpkg 包管理器"></a>二、dpkg 包管理器</h2><p>dpkg 常见用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i package.deb          安装包</span><br><span class="line">     -r package              删除包，不会自动卸载依赖于它的包，不建议</span><br><span class="line">     -P package              删除包，包括配置文件</span><br><span class="line">     -l                      列出当前已经安装的包</span><br><span class="line">     -l package              显示该包的简要说明</span><br><span class="line">     -s package              列出该包的状态，包括详细信息</span><br><span class="line">     -L package              列出包中所包含的文件</span><br><span class="line">     -S &lt;pattern&gt;            搜索包含pattern的包</span><br><span class="line">     -c package.deb          列出deb包的内容</span><br><span class="line">     --unpack package.deb    解开deb包的内容   </span><br></pre></td></tr></table></figure><h2 id="三、apt"><a href="#三、apt" class="headerlink" title="三、apt"></a>三、apt</h2><table><thead><tr><th align="left">apt命令</th><th>被取代的命令</th><th>功能</th></tr></thead><tbody><tr><td align="left">apt install</td><td>apt-get install</td><td>安装软件包</td></tr><tr><td align="left">apt remove</td><td>apt-get remove</td><td>移除软件包</td></tr><tr><td align="left">apt purge</td><td>apt-get purge</td><td>移除软件包及配置文件</td></tr><tr><td align="left">apt update</td><td>apt-get update</td><td>刷新存储库索引</td></tr><tr><td align="left">apt upgrade</td><td>apt-get upgrade</td><td>升级所有可升级的软件包</td></tr><tr><td align="left">apt autoremove</td><td>apt-get autoremove</td><td>自动删除不需要的包</td></tr><tr><td align="left">apt full-upgrade</td><td>apt-get dist-upgrade</td><td>在升级软件包时自动处理依赖关系</td></tr><tr><td align="left">apt search</td><td>apt-cache search</td><td>搜索应用程序</td></tr><tr><td align="left">apt show</td><td>apt-cache show</td><td>显示安装包的详细信息</td></tr><tr><td align="left">apt list</td><td>空</td><td>列出包含条件的包（已安装的，可升级的等）</td></tr><tr><td align="left">apt edit-sources</td><td>空</td><td>编辑镜像源列表</td></tr></tbody></table><p>APT包索引配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/apt/sources.list</span><br><span class="line">/etc/apt/sources.list.d/</span><br></pre></td></tr></table></figure><p>apt 命令操作的日志文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/log/dpkg.log</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装软件包时指定具体安装的版本</span></span><br><span class="line">apt install nginx=1.14.0-0ubuntu1.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看文件属于哪个包，apt-file 命令需要安装</span></span><br><span class="line">apt-file search <span class="string">&#x27;string&#x27;</span></span><br><span class="line">apt-file search -x <span class="string">&#x27;正则表达式&#x27;</span></span><br><span class="line">apt-file search -F /path/file</span><br></pre></td></tr></table></figure><h2 id="四、软件管理案例"><a href="#四、软件管理案例" class="headerlink" title="四、软件管理案例"></a>四、软件管理案例</h2><h3 id="4-1-查看文件来自于哪个包"><a href="#4-1-查看文件来自于哪个包" class="headerlink" title="4.1 查看文件来自于哪个包"></a>4.1 查看文件来自于哪个包</h3><p>示例：查找存在的文件来自于哪个包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dpkg -S filename 支持使用通配符</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># dpkg -S */ls</span></span><br><span class="line">coreutils: /bin/ls</span><br><span class="line">klibc-utils: /usr/lib/klibc/bin/ls</span><br></pre></td></tr></table></figure><p>示例：查找不存在的文件属于哪个包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu18-server:~<span class="comment"># apt install apt-file</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt update</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt-file search -x &#x27;/sl$&#x27;</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt-file search -F /usr/games/sl</span></span><br></pre></td></tr></table></figure><h3 id="4-2-查看包相关信息"><a href="#4-2-查看包相关信息" class="headerlink" title="4.2 查看包相关信息"></a>4.2 查看包相关信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示系统安装包的统计信息，包括安装包的数量，大小，占用空间等</span></span><br><span class="line"><span class="comment"># apt-cache stats</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt-cache stats</span></span><br><span class="line">Total package names: 96367 (1,927 k)</span><br><span class="line">Total package structures: 96607 (4,251 k)</span><br><span class="line">  Normal packages: 78791</span><br><span class="line">  Pure virtual packages: 1556</span><br><span class="line">  Single virtual packages: 5306</span><br><span class="line">  Mixed virtual packages: 458</span><br><span class="line">  Missing: 10496</span><br><span class="line">Total distinct versions: 91272 (7,302 k)</span><br><span class="line">Total distinct descriptions: 171178 (4,108 k)</span><br><span class="line">Total dependencies: 562504/129460 (13.3 M)</span><br><span class="line">Total ver/file relations: 50846 (1,220 k)</span><br><span class="line">Total Desc/File relations: 40106 (963 k)</span><br><span class="line">Total Provides mappings: 42265 (1,014 k)</span><br><span class="line">Total globbed strings: 213289 (5,204 k)</span><br><span class="line">Total slack space: 31.1 k</span><br><span class="line">Total space accounted <span class="keyword">for</span>: 39.7 M</span><br><span class="line">Total buckets <span class="keyword">in</span> PkgHashTable: 50503</span><br><span class="line">  Unused: 7546</span><br><span class="line">  Used: 42957</span><br><span class="line">  Utilization: 85.0583%</span><br><span class="line">  Average entries: 2.24892</span><br><span class="line">  Longest: 59</span><br><span class="line">  Shortest: 1</span><br><span class="line">Total buckets <span class="keyword">in</span> GrpHashTable: 50503</span><br><span class="line">  Unused: 7546</span><br><span class="line">  Used: 42957</span><br><span class="line">  Utilization: 85.0583%</span><br><span class="line">  Average entries: 2.24334</span><br><span class="line">  Longest: 12</span><br><span class="line">  Shortest: 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定包的信息，包括包的源、版本等信息</span></span><br><span class="line"><span class="comment">## apt-cache show package     更详细</span></span><br><span class="line"><span class="comment">## apt show package</span></span><br><span class="line"></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt show sl</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt-cache show sl</span></span><br></pre></td></tr></table></figure><h3 id="4-3-查看仓库中的指定软件的所有版本"><a href="#4-3-查看仓库中的指定软件的所有版本" class="headerlink" title="4.3 查看仓库中的指定软件的所有版本"></a>4.3 查看仓库中的指定软件的所有版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt-cache madison PACKAGE</span></span><br><span class="line">root@ubuntu18-server:~<span class="comment"># apt-cache madison nginx</span></span><br><span class="line">     nginx | 1.14.0-0ubuntu1.10 | https://mirrors.aliyun.com/ubuntu bionic-updates/main amd64 Packages</span><br><span class="line">     nginx | 1.14.0-0ubuntu1.10 | https://mirrors.aliyun.com/ubuntu bionic-security/main amd64 Packages</span><br><span class="line">     nginx | 1.14.0-0ubuntu1 | https://mirrors.aliyun.com/ubuntu bionic/main amd64 Packages</span><br></pre></td></tr></table></figure><h3 id="4-4-查看文件的依赖"><a href="#4-4-查看文件的依赖" class="headerlink" title="4.4 查看文件的依赖"></a>4.4 查看文件的依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询软件依赖那些包</span></span><br><span class="line">apt depends PACKAGE</span><br><span class="line">apt-cache depends PACKAGE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询软件被哪些包依赖</span></span><br><span class="line">apt rdepends PACKAGE</span><br><span class="line">apt-cache rdepends PACKAGE</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 脚本编程</title>
      <link href="/archives/c5a7de75.html"/>
      <url>/archives/c5a7de75.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Shell-脚本的基本用法"><a href="#一、Shell-脚本的基本用法" class="headerlink" title="一、Shell 脚本的基本用法"></a>一、Shell 脚本的基本用法</h2><h3 id="1-1-Shell-脚本的用途"><a href="#1-1-Shell-脚本的用途" class="headerlink" title="1.1 Shell 脚本的用途"></a>1.1 Shell 脚本的用途</h3><ul><li>将简单的命令进行组合完成复杂的工作，能够自动化执行，从而提高工作效率</li><li>减少命令的重复输入</li><li>将软件或应用的安装及配置实现标准化</li><li>方便日常性、重复性的运维工作实现，如：文件的打包压缩备份、监控系统的运行状态等</li></ul><h3 id="1-2-Shell-脚本的基本结构"><a href="#1-2-Shell-脚本的基本结构" class="headerlink" title="1.2 Shell 脚本的基本结构"></a>1.2 Shell 脚本的基本结构</h3><p>Shell 脚本编程：是基于过程式、解释执行的语言</p><p>Shell 脚本：包含一些命令或声明，符合一定格式的文本文件，首行需shebang机制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shebang机制如下类型</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br></pre></td></tr></table></figure><h3 id="1-3-Shell-脚本注释规范"><a href="#1-3-Shell-脚本注释规范" class="headerlink" title="1.3 Shell 脚本注释规范"></a>1.3 Shell 脚本注释规范</h3><p>（1）首行为调用使用的语言，即shebang机制</p><p>（2）程序名，避免因更改文件名而无法找到正确的文件 </p><p>（3）该脚本的版本号</p><p>（4）更改后的时间</p><p>（5）作者的相关信息</p><p>（6）该程序的作用及注意事项</p><p>（7）各版本的更新简要说明</p><h3 id="1-4-第一个简单Shell脚本示例"><a href="#1-4-第一个简单Shell脚本示例" class="headerlink" title="1.4 第一个简单Shell脚本示例"></a>1.4 第一个简单Shell脚本示例</h3><p><strong>示例：第一个脚本示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># vim /shell/hello.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#----------------------------------------------</span></span><br><span class="line"><span class="comment"># Filename:       hello.sh</span></span><br><span class="line"><span class="comment"># Version:        1.0</span></span><br><span class="line"><span class="comment"># Date:           2022/10/01</span></span><br><span class="line"><span class="comment"># Author:         Herbert</span></span><br><span class="line"><span class="comment"># Email:          wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># Website:        wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># Description:    This is the first script</span></span><br><span class="line"><span class="comment">#----------------------------------------------</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式1</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># bash /shell/hello.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式2</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/hello.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式3</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># bash &lt; /shell/hello.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式4</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod +x /shell/hello.sh</span></span><br><span class="line"><span class="comment">## 绝对路径</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># /shell/hello.sh</span></span><br><span class="line"><span class="comment">## 相对路径</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cd /shell</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ./hello.sh</span></span><br></pre></td></tr></table></figure><h3 id="1-5-脚本调试"><a href="#1-5-脚本调试" class="headerlink" title="1.5 脚本调试"></a>1.5 脚本调试</h3><p>只检测脚本中的语法错误，不检查命令错误，并不执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -n /path/script</span><br></pre></td></tr></table></figure><p>调试并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash -x /path/script</span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash -x hello.sh </span></span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;Hello, world!&#x27;</span></span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure><p>注：常见的三种脚本错误方式</p><ul><li>语法错误，后续命令将无法执行，使用 bash -n 检查错误，提示的出错行数不一定准确</li><li>命令错误，默认后续的命令还会执行，使用 bash -x 进行观察</li><li>逻辑错误，只能使用 bash -x 进行观察</li></ul><h3 id="1-6-变量"><a href="#1-6-变量" class="headerlink" title="1.6 变量"></a>1.6 变量</h3><h4 id="1-6-1-变量"><a href="#1-6-1-变量" class="headerlink" title="1.6.1 变量"></a>1.6.1 变量</h4><p>变量表示命名的内存空间，将数据放在内存空间中，通过变量名的引用来获取数据</p><h4 id="1-6-2-Shell-中变量的命名法则"><a href="#1-6-2-Shell-中变量的命名法则" class="headerlink" title="1.6.2 Shell 中变量的命名法则"></a>1.6.2 Shell 中变量的命名法则</h4><p><strong>1、命名要求</strong></p><ul><li>区分大小写</li><li>不能使用程序中的保留字和内置变量</li><li>只能使用字母、数字、下划线，不能以数字开头，不支持短横线 “-”</li></ul><p><strong>2、命名习惯</strong></p><ul><li>见名知义，用英文命名，体现出实际作用，不可用简写，如：ATM</li><li>变量名要大写</li><li>局部变量小写</li><li>函数名小写</li><li>大驼峰形式：StudentFirstName</li><li>小驼峰形式：studentFirstName</li><li>下划线：student_name</li></ul><h4 id="1-6-3-变量的定义和引用"><a href="#1-6-3-变量的定义和引用" class="headerlink" title="1.6.3 变量的定义和引用"></a>1.6.3 变量的定义和引用</h4><p>变量的类型</p><ul><li>普通变量：生效范围为当前shell进程；对当前 shell 之外的其它 shell 进程，或当前 shell 的子 shell 进程均无效</li><li>环境变量：生效范围为当前shell及其子进程</li><li>本地变量：生效范围为当前shell进程中某代码片段，通常指某段函数中</li></ul><p>变量赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;value&#x27;</span></span><br><span class="line"></span><br><span class="line">value 形式如下：</span><br><span class="line">直接字符串: name=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">变量引用: name=<span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line">命令引用: name=`COMMAND` 或 name=$(COMMAND)</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：变量赋值是临时生效，当退出终端后，变量会自动删除，无法持久保存，脚本中的变量会随着脚本结束自动删除</span></span><br></pre></td></tr></table></figure><p>变量引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span></span><br><span class="line"><span class="variable">$&#123;name&#125;</span></span><br></pre></td></tr></table></figure><p>弱引用和强引用</p><ul><li>“$name”      弱引用，其中定义的变量会被替换为变量值</li><li>‘$name’       强引用，定义的变量不会被替换为变量值，引号中是什么就会输出什么</li></ul><p>显示定义的变量和删除变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span></span><br><span class="line"><span class="built_in">unset</span> &lt;name&gt;</span><br></pre></td></tr></table></figure><p><strong>示例：变量的各种赋值和引用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;I am $NAME&quot;</span></span><br><span class="line">I am Herbert</span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &#x27;I am $NAME&#x27;</span></span><br><span class="line">I am <span class="variable">$NAME</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NAME=$USER</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">root</span><br><span class="line">[root@centos7 ~]<span class="comment"># NAME=`whoami`</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">root</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=`ls /run`</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $FILE</span></span><br><span class="line">auditd.pid console crond.pid cron.reboot cryptsetup dbus dhclient-eth0.pid dmeventd-client dmeventd-server faillock httpd initramfs lock <span class="built_in">log</span> lvm lvmetad.pid mount netreport NetworkManager plymouth sepermit setrans sshd.pid sudo syslogd.pid systemd tmpfiles.d tuned udev user utmp vmware</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=/etc/*;echo $FILE</span></span><br><span class="line">/etc/adjtime /etc/aliases /etc/aliases.db /etc/alternatives /etc/anacrontab</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NUM=`seq 3`;echo $NUM</span></span><br><span class="line">1 2 3</span><br><span class="line">[root@centos7 ~]<span class="comment"># NUM=`seq 3`;echo &quot;$NUM&quot;</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NAMES=&quot;zhao</span></span><br><span class="line">&gt; qian</span><br><span class="line">&gt; sun</span><br><span class="line">&gt; li<span class="string">&quot;</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo <span class="variable">$NAMES</span></span></span><br><span class="line"><span class="string">zhao qian sun li</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo &quot;</span><span class="variable">$NAMES</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">zhao</span></span><br><span class="line"><span class="string">qian</span></span><br><span class="line"><span class="string">sun</span></span><br><span class="line"><span class="string">li</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@centos7 ~]# NAME=Herbert</span></span><br><span class="line"><span class="string">[root@centos7 ~]# AGE=20</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo $NAME_<span class="variable">$AGE</span></span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo <span class="variable">$&#123;NAME&#125;</span>_<span class="variable">$AGE</span></span></span><br><span class="line"><span class="string">Herbert_20</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 利用变量实现动态命令</span></span><br><span class="line"><span class="string">[root@centos7 ~]# CMD=hostname</span></span><br><span class="line"><span class="string">[root@centos7 ~]# <span class="variable">$CMD</span></span></span><br><span class="line"><span class="string">centos7</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 删除定义的变量</span></span><br><span class="line"><span class="string">[root@centos7 ~]# NAME=Herbert;echo <span class="variable">$NAME</span></span></span><br><span class="line"><span class="string">Herbert</span></span><br><span class="line"><span class="string">[root@centos7 ~]# unset NAME;echo <span class="variable">$NAME</span></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h5 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h5><p>1、编写脚本 systeminfo.sh，显示当前主机系统信息，包括:主机名，IPv4地址，操作系统版本，内核<br>版本，CPU型号，内存大小，硬盘大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># cat systeminfo.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : systeminfo.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 2.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-03</span></span><br><span class="line"><span class="comment"># * Description   : display information about the system</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">RED=<span class="string">&quot;\E[1;31m&quot;</span></span><br><span class="line">GREEN=<span class="string">&quot;\E[1;32m&quot;</span></span><br><span class="line">END=<span class="string">&quot;\E[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$GREEN</span>---------------------Host Systeminfo-------------------------<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;HOSTNAME:           <span class="variable">$RED</span>`hostname`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;IPADDR:             <span class="variable">$RED</span>`ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print <span class="variable">$2</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;OSVersion:          <span class="variable">$RED</span>`cat /etc/redhat-release`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;KERNAL:             <span class="variable">$RED</span>`uname -r`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;CPU:                <span class="variable">$RED</span>`lscpu | grep &#x27;Model name&#x27; | tr -s &#x27; &#x27;|cut -d : -f2`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;MEMORY:             <span class="variable">$RED</span>`free -h | awk &#x27;/^Mem/&#123;print <span class="variable">$2</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;DISK:               <span class="variable">$RED</span>`lsblk | awk -v ORS=&#x27;,&#x27; &#x27;/^sd/&#123;print <span class="variable">$1</span>,<span class="variable">$4</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$GREEN</span>---------------------      END      -------------------------<span class="variable">$END</span>&quot;</span></span><br></pre></td></tr></table></figure><p>2、编写脚本 backup.sh，可实现每日将 &#x2F;etc&#x2F; 目录备份到 &#x2F;backup&#x2F;etcYYYY-mm-dd中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># cat backup.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mStart Backup\E[0m&quot;</span></span><br><span class="line">[ -d /backup ] || <span class="built_in">mkdir</span> /backup</span><br><span class="line"><span class="built_in">cp</span> -a /etc /backup/etc_`<span class="built_in">date</span> +%F`</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mBackup finished\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天的凌晨2点运行脚本</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># crontab -e</span></span><br><span class="line"> * 2 * * * <span class="string">&quot;bash /shell/backup.sh&quot;</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 disk.sh，显示当前硬盘分区中空间利用率最大的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># vim disk_utilization_rate.sh</span></span><br><span class="line">Most_Disk_Rate=`<span class="built_in">df</span> -Th | awk <span class="string">&#x27;/^\/dev\/sd/&#123;print $6&#125;&#x27;</span> | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> -n1`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;磁盘空间利用率最大值为：<span class="variable">$Most_Disk_Rate</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="1-6-4-环境变量"><a href="#1-6-4-环境变量" class="headerlink" title="1.6.4 环境变量"></a>1.6.4 环境变量</h4><p>环境变量的特点</p><ul><li>子进程可以继承父进程的变量，但父进程无法使用子进程的变量</li><li>一旦子进程修改从父进程继承的变量，新的值将会传递给孙子进程</li><li>一般在系统配置文件中使用，脚本中使用较少</li></ul><p>变量的声明和赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明并赋值</span></span><br><span class="line"><span class="built_in">export</span> name=value</span><br><span class="line"><span class="built_in">declare</span> -x name=value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分步实现</span></span><br><span class="line">name=value</span><br><span class="line"><span class="built_in">export</span> name</span><br></pre></td></tr></table></figure><p>变量的引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span></span><br><span class="line"><span class="variable">$&#123;name&#125;</span></span><br></pre></td></tr></table></figure><p>显示所有环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span></span><br><span class="line"><span class="built_in">printenv</span></span><br><span class="line"><span class="built_in">export</span></span><br><span class="line"><span class="built_in">declare</span> -x</span><br></pre></td></tr></table></figure><p>查看指定进程的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/<span class="variable">$PID</span>/environ</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /proc/1495/environ | tr &#x27;\0&#x27; &#x27;\n&#x27;</span></span><br><span class="line">USER=root</span><br><span class="line">LOGNAME=root</span><br><span class="line">HOME=/root</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAIL=/var/mail/root</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">SSH_CLIENT=192.168.119.1 12198 22</span><br><span class="line">SSH_CONNECTION=192.168.119.1 12198 192.168.119.165 22</span><br><span class="line">SSH_TTY=/dev/pts/0</span><br><span class="line">TERM=xterm</span><br><span class="line">XDG_SESSION_ID=1</span><br><span class="line">XDG_RUNTIME_DIR=/run/user/0</span><br></pre></td></tr></table></figure><p>删除变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> name</span><br></pre></td></tr></table></figure><h4 id="1-6-5-只读变量"><a href="#1-6-5-只读变量" class="headerlink" title="1.6.5 只读变量"></a>1.6.5 只读变量</h4><p>​只能声明定义，后续不能修改和删除，即常量</p><p>声明只读变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name</span><br></pre></td></tr></table></figure><p>查看只读变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">readonly</span></span><br><span class="line"><span class="built_in">declare</span> -r</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># readonly PI=3.14159;echo $PI</span></span><br><span class="line">3.14159</span><br><span class="line">[root@centos7 ~]<span class="comment"># PI=3.14</span></span><br><span class="line">-bash: PI: <span class="built_in">readonly</span> variable</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># exit</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $PI</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure><h4 id="1-6-6-位置变量"><a href="#1-6-6-位置变量" class="headerlink" title="1.6.6 位置变量"></a>1.6.6 位置变量</h4><p>​在bash shell中内置的变量，在脚本代码中通过调用命令行传递给脚本的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,··· 对应第1、第2、第3个等参数，<span class="built_in">shift</span> [n]换位置</span><br><span class="line"><span class="variable">$0</span>命令本身，包括路径</span><br><span class="line">$*传递给脚本的所有参数，全部参数合并成一个字符串</span><br><span class="line"><span class="variable">$@</span>传递给脚本的所有参数，每个参数为独立字符串</span><br><span class="line"><span class="variable">$#</span>传递给脚本的参数个数</span><br><span class="line"></span><br><span class="line">$*和<span class="variable">$@</span> 只在被双引号包起来的时候才会有差异</span><br><span class="line"></span><br><span class="line">清空所有位置变量</span><br><span class="line"><span class="built_in">set</span> --</span><br></pre></td></tr></table></figure><p><strong>示例1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 位置变量的简单使用</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/arg.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : arg.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-03</span></span><br><span class="line"><span class="comment"># * Description   : 位置变量的简单使用</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1st arg is <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2st arg is <span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3st arg is <span class="variable">$3</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10st arg is <span class="variable">$&#123;10&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;11st arg is <span class="variable">$&#123;11&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The number of arg is <span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All args are: $*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All args are: <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The script path is <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The scriptname is `basename <span class="variable">$0</span>`&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash /shell/arg.sh &#123;a..z&#125;</span></span><br><span class="line">1st arg is a</span><br><span class="line">2st arg is b</span><br><span class="line">3st arg is c</span><br><span class="line">10st arg is j</span><br><span class="line">11st arg is k</span><br><span class="line">The number of arg is 26</span><br><span class="line">All args are: a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">All args are: a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">The script path is /shell/arg.sh</span><br><span class="line">The scriptname is arg.sh</span><br></pre></td></tr></table></figure><p><strong>示例2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $* 和 $@ 的区别</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat f1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f1.sh: all args are <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f1.sh: all args are $*&quot;</span></span><br><span class="line"></span><br><span class="line">./file.sh <span class="string">&quot;$*&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat f2.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f2.sh: all args are <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f2.sh: all args are $*&quot;</span></span><br><span class="line"></span><br><span class="line">./file.sh <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat file.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;file.sh: 1st arg is <span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## $*将所有的参数作为一个整体进行传递，而$@将所有参数当作独立的参数全部传递过去</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash f1.sh a b c</span></span><br><span class="line">f1.sh: all args are a b c</span><br><span class="line">f1.sh: all args are a b c</span><br><span class="line">file.sh: 1st arg is a b c</span><br><span class="line">[root@centos7 shell]<span class="comment"># bash f2.sh a b c</span></span><br><span class="line">f2.sh: all args are a b c</span><br><span class="line">f2.sh: all args are a b c</span><br><span class="line">file.sh: 1st arg is a</span><br></pre></td></tr></table></figure><p><strong>示例3</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用软链接实现同一个脚本的不同功能</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$0</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ln -s test.sh a.sh</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ln -s test.sh b.sh</span></span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash a.sh </span></span><br><span class="line">a.sh</span><br><span class="line">[root@centos7 shell]<span class="comment"># bash b.sh </span></span><br><span class="line">b.sh</span><br></pre></td></tr></table></figure><p><strong>示例4</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删库跑路命令安全实现</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat rm.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DIR=/tmp/`<span class="built_in">date</span> +%F_%T`</span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">mv</span> $* <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Move  $* to <span class="variable">$DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># chmod +x rm.sh </span></span><br><span class="line">[root@centos7 shell]<span class="comment"># alias rm=&#x27;/shell/rm.sh&#x27;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># touch &#123;1..5&#125;.txt</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># rm *.txt</span></span><br><span class="line">Move  1.txt 2.txt 3.txt 4.txt 5.txt to /tmp/2022-10-03_21:57:42</span><br></pre></td></tr></table></figure><h4 id="1-6-7-退出状态码变量"><a href="#1-6-7-退出状态码变量" class="headerlink" title="1.6.7 退出状态码变量"></a>1.6.7 退出状态码变量</h4><p>​进程执行后，将使用变量$?保存状态码的相关数字，不同的值反映出成功或失败，$?取值范围0~255</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$? 为0，进程返回状态为成功 </span><br><span class="line">$? 为1~255，失败</span><br></pre></td></tr></table></figure><p>用户可以在脚本中自定义退出的状态码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> [n]</span><br></pre></td></tr></table></figure><p>注意</p><ul><li>脚本中一旦遇到 exit 命令，脚本会立即终止；终止退出的状态取决于 exit 命令后面的数字</li><li>如果 exit 后面无数字，终止退出状态取决于 exit 命令前面命令执行结果</li><li>如果没有给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码</li></ul><h4 id="1-6-8-展开命令行"><a href="#1-6-8-展开命令行" class="headerlink" title="1.6.8 展开命令行"></a>1.6.8 展开命令行</h4><p>展开命令执行顺序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">把命令行分成单个命令词</span><br><span class="line">展开别名</span><br><span class="line">展开大括号的声明&#123;&#125;</span><br><span class="line">展开波浪符声明 ~</span><br><span class="line">命令替换$() 和 ``</span><br><span class="line">再次把命令行分成命令词</span><br><span class="line">展开文件通配*、?、[abc]等等</span><br><span class="line">准备I/0重导向 &lt;、&gt;</span><br><span class="line">运行命令</span><br></pre></td></tr></table></figure><h4 id="1-6-9-脚本安全和set"><a href="#1-6-9-脚本安全和set" class="headerlink" title="1.6.9 脚本安全和set"></a>1.6.9 脚本安全和set</h4><p>set 命令：可以用来定制 shell 环境</p><p><strong>$- 变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">h: hashall，打开选项后，Shell 会将命令所在的路径<span class="built_in">hash</span>下来，避免每次都要查询。通过<span class="built_in">set</span> +h将h选项关闭</span><br><span class="line">i: interactive-comments，包含这个选项说明当前的 shell 是一个交互式的 shell。所谓的交互式shell,在脚本中，i选项是关闭的</span><br><span class="line">m: monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等</span><br><span class="line">B: braceexpand，大括号扩展</span><br><span class="line">H: <span class="built_in">history</span>，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的一个历史命令，“!n”返回第 n 个历史命令</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $-</span></span><br><span class="line">himBHs</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># set +h</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $-</span></span><br><span class="line">imBHs</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line">-bash: <span class="built_in">hash</span>: hashing disabled</span><br></pre></td></tr></table></figure><p><strong>set 命令实现脚本安全</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-u在扩展一个没有设置的变量时，显示错误信息，等同 <span class="built_in">set</span> -o nounset</span><br><span class="line">-e如果一个命令返回一个非0退出状态值就退出，等同 <span class="built_in">set</span> -o errexit</span><br><span class="line">-ooption显示，打开或关闭选项</span><br><span class="line">    <span class="built_in">set</span> -o显示选项</span><br><span class="line">    <span class="built_in">set</span> -o 选项打开选项</span><br><span class="line">    <span class="built_in">set</span> +o 选项关闭选项</span><br><span class="line">-x当执行命令时，打印命令及其参数，类似 bash -x</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># set -o</span></span><br><span class="line">allexport       off</span><br><span class="line">braceexpand     on</span><br><span class="line">emacs           on</span><br><span class="line">errexit         off</span><br><span class="line">errtrace        off</span><br><span class="line">functrace       off</span><br><span class="line">hashall         off</span><br><span class="line">histexpand      on</span><br><span class="line"><span class="built_in">history</span>         on</span><br><span class="line">ignoreeof       off</span><br><span class="line">interactive-comments    on</span><br><span class="line">keyword         off</span><br><span class="line">monitor         on</span><br><span class="line">noclobber       off</span><br><span class="line">noexec          off</span><br><span class="line"><span class="built_in">noglob</span>          off</span><br><span class="line">nolog           off</span><br><span class="line">notify          off</span><br><span class="line">nounset         off</span><br><span class="line">onecmd          off</span><br><span class="line">physical        off</span><br><span class="line">pipefail        off</span><br><span class="line">posix           off</span><br><span class="line">privileged      off</span><br><span class="line">verbose         off</span><br><span class="line">vi              off</span><br><span class="line">xtrace          off</span><br></pre></td></tr></table></figure><h3 id="1-7-格式化输出-printf"><a href="#1-7-格式化输出-printf" class="headerlink" title="1.7 格式化输出 printf"></a>1.7 格式化输出 printf</h3><p><strong>常用格式替换符</strong></p><table><thead><tr><th>替换符</th><th align="left">功能</th></tr></thead><tbody><tr><td>%s</td><td align="left">字符串</td></tr><tr><td>%d,%i</td><td align="left">十进制整数</td></tr><tr><td>%f</td><td align="left">浮点格式</td></tr><tr><td>%c</td><td align="left">ASCII字符</td></tr><tr><td>%b</td><td align="left">相对应的参数中包含转义字符，可对转义字符进行转义</td></tr><tr><td>%o</td><td align="left">八进制值</td></tr><tr><td>%u</td><td align="left">无符号十进制值</td></tr><tr><td>%x</td><td align="left">小写的十六进制 a~f</td></tr><tr><td>%X</td><td align="left">大写的十六进制 A~F</td></tr><tr><td>%%</td><td align="left">%本身</td></tr></tbody></table><p>说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%<span class="comment">#s中的数字代表此替换符中的输出字符宽度，不足补空格，默认右对齐。%-10s表示10个字符宽，- 表示左对齐</span></span><br><span class="line">%03d表示<span class="number">3</span>为宽度，不足前面用<span class="number">0</span>补全，超出位数原样输出</span><br><span class="line">%<span class="number">.2</span>f表示保留<span class="number">2</span>位小数</span><br></pre></td></tr></table></figure><p><strong>常用转义字符</strong></p><table><thead><tr><th align="left">转义符</th><th>功能</th></tr></thead><tbody><tr><td align="left">\a</td><td>警告字符，通常为ASCII中的BEL字符</td></tr><tr><td align="left">\b</td><td>后退</td></tr><tr><td align="left">\f</td><td>换页</td></tr><tr><td align="left">\n</td><td>换行</td></tr><tr><td align="left">\r</td><td>回车</td></tr><tr><td align="left">\t</td><td>水平制表符</td></tr><tr><td align="left">\v</td><td>垂直制表符</td></tr><tr><td align="left">\\</td><td>表示\本身</td></tr></tbody></table><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%s&quot; 1 2 3 4</span></span><br><span class="line">1234[root@centos7 ~]<span class="comment">#</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%s %s %s %s \n&quot;  1 2 3 4</span></span><br><span class="line">1 2 3 4 </span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%.2f\n&quot; 2.458 </span></span><br><span class="line">2.46</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># strvar=&quot;I love you&quot;;printf &quot;\033[1;32m%s\033[0m\n&quot; &quot;$strvar&quot;</span></span><br><span class="line">I love you</span><br></pre></td></tr></table></figure><h3 id="1-8-算数运算"><a href="#1-8-算数运算" class="headerlink" title="1.8 算数运算"></a>1.8 算数运算</h3><p>注：bash 只支持整数，不支持小数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ARITHMETIC EVALUATION</span><br><span class="line">       The shell allows arithmetic expressions to be evaluated, under certain circumstances (see the <span class="built_in">let</span> and <span class="built_in">declare</span> <span class="built_in">builtin</span>  commands  and  Arithmetic Expansion).   Evaluation  is  <span class="keyword">done</span>  <span class="keyword">in</span> fixed-width integers with no check <span class="keyword">for</span> overflow, though division by 0 is trapped and flagged as an error.</span><br><span class="line">       The operators and their precedence, associativity, and values are the same as <span class="keyword">in</span> the C language.  The following list  of  operators  is  grouped into levels of equal-precedence operators.  The levels are listed <span class="keyword">in</span> order of decreasing precedence.</span><br><span class="line"></span><br><span class="line">* / %multiplication, division, remainder, %表示取模，即取余数，示例：9%4=1，5%3=2</span><br><span class="line">+ - addition, subtraction</span><br><span class="line">i++ i--variable post-increment and post-decrement</span><br><span class="line">++i --i variable pre-increment and pre-decrement</span><br><span class="line">= *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |=assignment</span><br><span class="line">- + unary minus and plus</span><br><span class="line">! ~ logical and bitwise negation</span><br><span class="line">** exponentiation 乘方,即指数运算</span><br><span class="line">&lt;&lt; &gt;&gt; left and right bitwise shifts</span><br><span class="line">&lt;= &gt;= &lt; &gt; comparison</span><br><span class="line">== != equality and inequality</span><br><span class="line">&amp; bitwise AND</span><br><span class="line">| bitwise OR</span><br><span class="line">^ bitwise exclusive OR</span><br><span class="line">&amp;&amp; logical AND</span><br><span class="line">|| logical OR</span><br><span class="line"><span class="built_in">expr</span>?<span class="built_in">expr</span>:<span class="built_in">expr</span> conditional operator</span><br><span class="line">expr1 , expr2 comma</span><br></pre></td></tr></table></figure><p>算数运算实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(1)<span class="built_in">let</span> var=算术表达式</span><br><span class="line">(2)((var=算术表达式))</span><br><span class="line">(3)var=$[算术表达式]</span><br><span class="line">(4)var=$((算术表达式))</span><br><span class="line">(5)var=$(<span class="built_in">expr</span> arg1 arg2 arg3 ...)</span><br><span class="line">(6)<span class="built_in">declare</span> -i var = 数值</span><br><span class="line">(7)<span class="built_in">echo</span> <span class="string">&#x27;算术表达式&#x27;</span> | bc</span><br><span class="line"></span><br><span class="line">随机数生成器<span class="variable">$RANDOM</span></span><br><span class="line">ooa random <span class="built_in">integer</span> between 0 and 32767 is generated.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注：乘法符号在有些场景需要转义</span></span><br><span class="line"><span class="comment"># mul=$(expr $num1 \* $num2)</span></span><br></pre></td></tr></table></figure><p>示例：随机字体颜色生成</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221004172137142.png" alt="image-20221004172137142"></p><p>增强型赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+=i+=10 等同于 i=i+10</span><br><span class="line">-=</span><br><span class="line">*=</span><br><span class="line">/=</span><br><span class="line">%=</span><br><span class="line">++i++ ++i</span><br><span class="line">--i-- --i</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># num1=3</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># num2=5</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># let sum=$num1+$num2</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $sum</span></span><br><span class="line">8</span><br><span class="line">(2)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;The sum is $[$num1+$num2]&quot;</span></span><br><span class="line">The <span class="built_in">sum</span> is 8</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;The sum is $(($num1+$num2))&quot;</span></span><br><span class="line">The <span class="built_in">sum</span> is 8</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># echo &quot;$((num1+num2))&quot;</span></span><br><span class="line">8</span><br><span class="line">(3)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mul=$(expr $num1 \* $num2);echo $mul</span></span><br><span class="line">15</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mul=$[$num1 * $num2];echo $mul</span></span><br><span class="line">15</span><br><span class="line">(4)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $RANDOM</span></span><br><span class="line">14098</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $RANDOM</span></span><br><span class="line">3320</span><br></pre></td></tr></table></figure><h3 id="1-9-逻辑运算"><a href="#1-9-逻辑运算" class="headerlink" title="1.9 逻辑运算"></a>1.9 逻辑运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">与&amp;0&amp;0=0；0&amp;1=0；1&amp;1=1</span><br><span class="line">或|           0&amp;0=0；0&amp;1=1；1&amp;1=1</span><br><span class="line">非!取反；!0=1</span><br><span class="line">异或^         相同为假，不同为真</span><br><span class="line">短路与&amp;&amp;</span><br><span class="line">短路或||</span><br></pre></td></tr></table></figure><p>示例：关于异或运算达成数值的交换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个数字x，y异或得z；z和任意一个数字x或y做异或运算，得到另一个数字y或x</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># x=10;y=20;x=$[x^y];y=$[x^y];x=$[x^y];echo &quot;x=$x,y=$y&quot;</span></span><br><span class="line">x=20,y=10</span><br></pre></td></tr></table></figure><p>示例：关于短路运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 短路与 &amp;&amp;</span></span><br><span class="line">CMD1 &amp;&amp; CMD2</span><br><span class="line">CMD1结果为真 (1)，第二个CMD2必须要参与运算，才能得到最终的结果</span><br><span class="line">CMD1结果为假 (0)，总的结果必定为0，因此不需要执行CMD2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 短路或 ||</span></span><br><span class="line">CMD1 || CMD2</span><br><span class="line">CMD1结果为真 (1)，总的结果必定为1，因此不需要执行CMD2</span><br><span class="line">CMD1结果为假 (0)，第二个CMD2 必须要参与运算,才能得到最终的结果</span><br></pre></td></tr></table></figure><h3 id="1-10-条件测试命令"><a href="#1-10-条件测试命令" class="headerlink" title="1.10 条件测试命令"></a>1.10 条件测试命令</h3><p>条件测试：判断某需求是否满足；若条件测试为真，则返回的状态码$?为0；反之则不为0</p><p>条件测试命令</p><ul><li>test EXPRESSION</li><li>[ EXPRESSION ]</li><li>[[ EXPRESSION ]]    支持扩展的正则表达式和通配符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># type [</span></span><br><span class="line">[ is a shell <span class="built_in">builtin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：括号中的 EXPRESSION 两边一定要有空白字符</span></span><br></pre></td></tr></table></figure><p>bash 中的测试类型查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># help test</span></span><br><span class="line"><span class="built_in">test</span>: <span class="built_in">test</span> [<span class="built_in">expr</span>]</span><br><span class="line">    Evaluate conditional expression.</span><br><span class="line">    </span><br><span class="line">    Exits with a status of 0 (<span class="literal">true</span>) or 1 (<span class="literal">false</span>) depending on</span><br><span class="line">    the evaluation of EXPR.  Expressions may be unary or binary.  Unary</span><br><span class="line">    expressions are often used to examine the status of a file.  There</span><br><span class="line">    are string operators and numeric comparison operators as well.</span><br><span class="line">    </span><br><span class="line">    The behavior of <span class="built_in">test</span> depends on the number of arguments.  Read the</span><br><span class="line">    bash manual page <span class="keyword">for</span> the complete specification.</span><br><span class="line">    </span><br><span class="line">    File operators:</span><br><span class="line">    </span><br><span class="line">      -a FILE        True <span class="keyword">if</span> file exists.</span><br><span class="line">      -b FILE        True <span class="keyword">if</span> file is block special.</span><br><span class="line">      -c FILE        True <span class="keyword">if</span> file is character special.</span><br><span class="line">      -d FILE        True <span class="keyword">if</span> file is a directory.</span><br><span class="line">      -e FILE        True <span class="keyword">if</span> file exists.</span><br><span class="line">      -f FILE        True <span class="keyword">if</span> file exists and is a regular file.</span><br><span class="line">      -g FILE        True <span class="keyword">if</span> file is set-group-id.</span><br><span class="line">      -h FILE        True <span class="keyword">if</span> file is a symbolic <span class="built_in">link</span>.</span><br><span class="line">      -L FILE        True <span class="keyword">if</span> file is a symbolic <span class="built_in">link</span>.</span><br><span class="line">      -k FILE        True <span class="keyword">if</span> file has its `sticky<span class="string">&#x27; bit set.</span></span><br><span class="line"><span class="string">      -p FILE        True if file is a named pipe.</span></span><br><span class="line"><span class="string">      -r FILE        True if file is readable by you.</span></span><br><span class="line"><span class="string">      -s FILE        True if file exists and is not empty.</span></span><br><span class="line"><span class="string">      -S FILE        True if file is a socket.</span></span><br><span class="line"><span class="string">      -t FD          True if FD is opened on a terminal.</span></span><br><span class="line"><span class="string">      -u FILE        True if the file is set-user-id.</span></span><br><span class="line"><span class="string">      -w FILE        True if the file is writable by you.</span></span><br><span class="line"><span class="string">      -x FILE        True if the file is executable by you.</span></span><br><span class="line"><span class="string">      -O FILE        True if the file is effectively owned by you.</span></span><br><span class="line"><span class="string">      -G FILE        True if the file is effectively owned by your group.</span></span><br><span class="line"><span class="string">      -N FILE        True if the file has been modified since it was last read.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -nt FILE2  True if file1 is newer than file2 (according to</span></span><br><span class="line"><span class="string">                       modification date).</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -ot FILE2  True if file1 is older than file2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -ef FILE2  True if file1 is a hard link to file2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    String operators:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -z STRING      True if string is empty.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -n STRING</span></span><br><span class="line"><span class="string">         STRING      True if string is not empty.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      STRING1 = STRING2</span></span><br><span class="line"><span class="string">                     True if the strings are equal.</span></span><br><span class="line"><span class="string">      STRING1 != STRING2</span></span><br><span class="line"><span class="string">                     True if the strings are not equal.</span></span><br><span class="line"><span class="string">      STRING1 &lt; STRING2</span></span><br><span class="line"><span class="string">                     True if STRING1 sorts before STRING2 lexicographically.</span></span><br><span class="line"><span class="string">      STRING1 &gt; STRING2</span></span><br><span class="line"><span class="string">                     True if STRING1 sorts after STRING2 lexicographically.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Other operators:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -o OPTION      True if the shell option OPTION is enabled.</span></span><br><span class="line"><span class="string">      -v VAR True if the shell variable VAR is set</span></span><br><span class="line"><span class="string">      ! EXPR         True if expr is false.</span></span><br><span class="line"><span class="string">      EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.</span></span><br><span class="line"><span class="string">      EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,</span></span><br><span class="line"><span class="string">                     -lt, -le, -gt, or -ge.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Arithmetic binary operators return true if ARG1 is equal, not-equal,</span></span><br><span class="line"><span class="string">    less-than, less-than-or-equal, greater-than, or greater-than-or-equal</span></span><br><span class="line"><span class="string">    than ARG2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Exit Status:</span></span><br><span class="line"><span class="string">    Returns success if EXPR evaluates to true; fails if EXPR evaluates to</span></span><br><span class="line"><span class="string">    false or an invalid argument is given.</span></span><br></pre></td></tr></table></figure><h4 id="1-10-1-变量测试"><a href="#1-10-1-变量测试" class="headerlink" title="1.10.1 变量测试"></a>1.10.1 变量测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断变量是否定义 </span></span><br><span class="line">[ -v NAME ]</span><br><span class="line"><span class="comment"># 判断变量是否定义并且是名称引用,bash 4.4新特性</span></span><br><span class="line">[ -R NAME ]</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;$BASH_VERSION&quot;</span></span><br><span class="line">4.2.46(2)-release</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;$BASH_VERSION&quot;</span></span><br><span class="line">4.4.20(1)-release</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># unset x</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># [ -v x ]</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="1-10-2-数值测试"><a href="#1-10-2-数值测试" class="headerlink" title="1.10.2 数值测试"></a>1.10.2 数值测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-eq 是否等于</span><br><span class="line">-ne是否不等于</span><br><span class="line">-gt 是否大于</span><br><span class="line">-ge 是否大于等于</span><br><span class="line">-lt 是否小于</span><br><span class="line">-le是否小于等于</span><br><span class="line"></span><br><span class="line">算数表达式比较</span><br><span class="line">==!=&lt;=&gt;=&lt;&gt;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># i=10</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># j=8</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ $i -lt $j ];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ i -gt j ];echo $?</span></span><br><span class="line">-bash: [: i: <span class="built_in">integer</span> expression expected</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># (( i &gt;= j ));echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-10-3-字符串测试"><a href="#1-10-3-字符串测试" class="headerlink" title="1.10.3 字符串测试"></a>1.10.3 字符串测试</h4><p><strong>test 和 [] 用法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-z STRING        字符串是否为空，空为真</span><br><span class="line">-n STRING        字符串是否不空，不空为真</span><br><span class="line">   STRING</span><br><span class="line"></span><br><span class="line">STRING1 = STRING2是否等于</span><br><span class="line">STRING1 != STRING2是否不等于</span><br><span class="line">&gt;、&lt;比较的是ASCII码的大小值</span><br></pre></td></tr></table></figure><p><strong>[[]] 用法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[[ expression ]]</span><br><span class="line">==左侧字符串是否和右侧的PATTERN相同</span><br><span class="line">note: 此表达式使用于[[]]，PATTERN支持通配符</span><br><span class="line">=~左侧字符串是否能被右侧的正则表达式的PATTERN匹配</span><br><span class="line">note: 此表达式使用于[[]]时，使用扩展的正则表达式</span><br></pre></td></tr></table></figure><p>[  ] 示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在比较字符串时，建议变量放在&quot;&quot;中</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># str1=Tom</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># str2=Jerry</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;$str1&quot; = &quot;$str2&quot; ];echo $?</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># str3=&quot;I love you&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ $str3 ]</span></span><br><span class="line">-bash: [: love: binary operator expected</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;$str3&quot; ];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>[[  ]] 和通配符示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># strvar1=&quot;Rocky_linux&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == Rocky* ]];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == &quot;Rocky*&quot; ]];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># strvar1=&quot;Rocky*&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == &quot;Rocky*&quot; ]];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 右侧的模式作为通配符时不需要加&quot;&quot;,只是表达字符本身,加&quot;&quot;或转义</span></span><br></pre></td></tr></table></figure><p>[[  ]]和扩展正则表达式示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断合理的考试成绩</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># SCORE=101</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ $SCORE =~ ^(100|[0-9]&#123;1,2&#125;)$ ]];echo $?</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件后缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=abc.log</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$FILE&quot; =~ \.log$ ]];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-10-4-文件测试"><a href="#1-10-4-文件测试" class="headerlink" title="1.10.4 文件测试"></a>1.10.4 文件测试</h4><p>存在性测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-a FILE: 同 -e</span><br><span class="line">-e FILE: 判断文件是否存在，存在则为真</span><br><span class="line">-b FILE: 是否是块设备文件</span><br><span class="line">-c FILE: 是否存在且为字符设备文件</span><br><span class="line">-d FILE: 是否存在且为目录文件</span><br><span class="line">-f FILE: 是否存在且为普通文件</span><br><span class="line">-h FILE 或 -L FILE: 存在且为符号链接文件</span><br><span class="line">-p FILE: 是否存在且为命名管道文件</span><br><span class="line">-S FILE: 是否存在且为套接字文件</span><br><span class="line"></span><br><span class="line">! 非   例: [ ! -a FILE ] 判断该文件是否不存在</span><br></pre></td></tr></table></figure><p>文件权限测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-r FILE: 是否存在且可读</span><br><span class="line">-w FILE: 是否存在且可写</span><br><span class="line">-x FILE: 是否存在且可执行</span><br><span class="line">-u FILE: 是否存在且拥有suid权限</span><br><span class="line">-g FILE: 是否存在且拥有sgid权限</span><br><span class="line">-k FILE: 是否存在且拥有sticky权限</span><br><span class="line"></span><br><span class="line">note: 最终结果由用户对文件的实际权限决定，而非文件属性决定</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/shadow 属性和root用户实际权限</span></span><br><span class="line"><span class="comment"># 判断文件是否具有某一权限，应根据该用户对文件的实际执行操作结果为准</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll /etc/shadow</span></span><br><span class="line">---------- 1 root root 759 Mar 27 02:44 /etc/shadow     </span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># [ -w /etc/shadow ]; echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># [ -x /etc/shadow ]; echo $? </span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>文件属性测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-s FILE  是否存在且非空</span><br><span class="line">-t fd fd 文件描述符是否在某终端已经打开</span><br><span class="line">-N FILE 文件自从上一次被读取之后是否被修改过</span><br><span class="line">-O FILE 当前有效用户是否为文件属主</span><br><span class="line">-G FILE当前有效用户是否为文件属组</span><br><span class="line">FILE1 -ef FILE2 FILE1是否是FILE2的硬链接</span><br><span class="line">FILE1 -nt FILE2    FILE1是否新于FILE2（mtime）</span><br><span class="line">FILE1 -ot FILE2 FILE1是否旧于FILE2</span><br></pre></td></tr></table></figure><h3 id="1-11-关于-与"><a href="#1-11-关于-与" class="headerlink" title="1.11 关于 () 与 {}"></a>1.11 关于 () 与 {}</h3><p>(CMD1;CMD2;···) 和 { CMD1;CMD2;···; } 都可以将多个命令组合在一起，批量执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(list) 会开启子shell，并且list中变量赋值及内部命令执行后,将不再影响后续的环境</span><br><span class="line"></span><br><span class="line">&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索(list)</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># man bash</span></span><br><span class="line">(list) list  is  executed  <span class="keyword">in</span>  a subshell environment (see COMMAND EXECUTION ENVIRONMENT below).  Variable assignments and <span class="built_in">builtin</span> commands that affect the shell<span class="string">&#x27;s environment do not remain in effect after the command completes.  The return status is the exit status of list.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123; list; &#125; list is simply executed in the current shell environment.  list must be terminated with a newline or semicolon.  This is known as a group command.  The return status is the exit status of list.  Note that unlike the metacharacters ( and ), &#123; and &#125; are reserved words and must occur where a reserved word is permitted to be recognized.  Since they do not cause a word break, they must be  separated  from  list  by whitespace or another shell metacharacter.</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># name=Tom;(echo $name;name=Jerry;echo $name);echo $name</span></span><br><span class="line">Tom</span><br><span class="line">Jerry</span><br><span class="line">Tom</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># name=Tom;&#123; echo $name;name=Jerry;echo $name; &#125;;echo $name</span></span><br><span class="line">Tom</span><br><span class="line">Jerry</span><br><span class="line">Jerry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当我们需要临时切换到某个目录执行某些操作，之后在返回原先的目录，可使用小括号</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># (cd /data/test/; rm -f f1.txt)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="1-12-组合测试条件"><a href="#1-12-组合测试条件" class="headerlink" title="1.12 组合测试条件"></a>1.12 组合测试条件</h3><h4 id="1-12-1-第一种方式"><a href="#1-12-1-第一种方式" class="headerlink" title="1.12.1 第一种方式"></a>1.12.1 第一种方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ EXPRESSION1 -a EXPRESSION2 ] 并且，EXPRESSION1和EXPRESSION2都是真，结果才为真</span><br><span class="line">[ EXPRESSION1 -o EXPRESSION2 ] 或者，EXPRESSION1和EXPRESSION2只要有一个真，结果就为</span><br><span class="line">真</span><br><span class="line">[ ! EXPRESSION ] 取反</span><br><span class="line"></span><br><span class="line">note:-a 和 -o 需要使用测试命令进行，[[]]不支持</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ll /shell/test.sh </span></span><br><span class="line">-rw-r--r-- 1 root root 350 Oct  3 21:46 /shell/test.sh</span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=/shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -a -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod +x /shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -a -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod -x /shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -o -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ ! -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@centos7 ~]<span class="comment"># ! [ -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-12-2-第二种方式"><a href="#1-12-2-第二种方式" class="headerlink" title="1.12.2 第二种方式"></a>1.12.2 第二种方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">COMMAND1 &amp;&amp; COMMAND2 <span class="comment">#并且，短路与，代表条件性的AND THEN</span></span><br><span class="line">如果COMMAND1 成功,将执行COMMAND2,否则,将不执行COMMAND2</span><br><span class="line"></span><br><span class="line">COMMAND1 || COMMAND2 <span class="comment">#或者，短路或，代表条件性的OR ELSE</span></span><br><span class="line">如果COMMAND1 成功,将不执行COMMAND2,否则,将执行COMMAND2</span><br><span class="line"></span><br><span class="line">! COMMAND <span class="comment">#非,取反</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;a&quot; = &quot;B&quot; ] &amp;&amp; echo &quot;String is same.&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;a&quot; = &quot;a&quot; ] &amp;&amp; echo &quot;String is same.&quot;</span></span><br><span class="line">String is same.</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f /etc/fstab -a -x /bin/cat ] &amp;&amp; cat /etc/fstab</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># id wh &amp;&gt; /dev/null || useradd wh</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># getent passwd wh</span></span><br><span class="line">wh:x:1000:1000::/home/wh:/bin/bash</span><br></pre></td></tr></table></figure><p>示例：&amp;&amp; 和 || 组合使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># NAME=Herbert;id $NAME &amp;&gt; /dev/null &amp;&amp; echo &quot;$NAME is exist&quot; || echo &quot;$NAME is not exist&quot;</span></span><br><span class="line">Herbert is not exist</span><br></pre></td></tr></table></figure><h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><p>1、编写脚本 argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat argsnum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Please input a path!&quot;</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> has space characters:  `grep -E &#x27;^[[:space:]]+$&#x27; <span class="variable">$1</span> | wc -l`&quot;</span></span><br></pre></td></tr></table></figure><p>2、编写脚本 hostping.sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可ping通，则提示用户“该IP地址不可访问”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat hostping.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IP=<span class="variable">$1</span></span><br><span class="line">fping <span class="variable">$IP</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is reachable!&quot;</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is unreachable!&quot;</span>;<span class="built_in">exit</span>; &#125;</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&quot;Script is finished&quot;</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat checkdisk.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">Error=80</span><br><span class="line">MAIL=wuhaolam@163.com</span><br><span class="line"></span><br><span class="line">Disk=`<span class="built_in">df</span> -Th | sed -n <span class="string">&#x27;/^\/dev\/sd*/p&#x27;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span> % | <span class="built_in">cut</span> -d% -f6 | <span class="built_in">sort</span> -r | <span class="built_in">head</span> -1`</span><br><span class="line">[ <span class="variable">$Disk</span> -ge <span class="variable">$Error</span> ] &amp;&amp; (<span class="built_in">echo</span> <span class="string">&quot;`hostname -I ` insufficient disk space &quot;</span>| mail -s <span class="string">&quot;Linux Disk Warning&quot;</span> wuhaolam@163.com )</span><br><span class="line"></span><br><span class="line">Inode=`<span class="built_in">df</span> -ih | sed -n <span class="string">&#x27;/^\/dev\/sd*/p&#x27;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span> % | <span class="built_in">cut</span> -d% -f5 | <span class="built_in">sort</span> -r | <span class="built_in">head</span> -1`</span><br><span class="line">[ <span class="variable">$Inode</span> -ge <span class="variable">$Error</span> ] &amp;&amp; ( <span class="built_in">echo</span> <span class="string">&quot;`hostname -I ` insufficient inode space &quot;</span>| mail -s <span class="string">&quot;Linux Inode Warning&quot;</span> <span class="variable">$MAIL</span>)</span><br></pre></td></tr></table></figure><p>4、编写脚本 per.sh，判断当前用户的指定参数文件，是否不可读并且不可写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wh@Rocky8-mini ~]$ [ ! -r /etc/gshadow -a ! -w /etc/gshadow ]   </span><br><span class="line">[wh@Rocky8-mini ~]$ <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>5、编写脚本 excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat excute.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">Path=/root/*</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$Path</span>; <span class="keyword">do</span></span><br><span class="line">        [[ <span class="string">&quot;<span class="variable">$i</span>&quot;</span> == *<span class="string">&quot;.&quot;</span>sh ]] &amp;&amp; <span class="built_in">chmod</span> +x <span class="string">&quot;<span class="variable">$i</span>&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> is not script file!&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>6、编写脚本 nologin.sh和 login.sh，实现禁止和允许普通用户登录系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat nologin.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ `<span class="built_in">id</span> -u <span class="variable">$1</span>` -ge 1000 ] &amp;&amp; usermod <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -s /sbin/nologin </span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat login.sh   </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ `<span class="built_in">id</span> -u <span class="variable">$1</span>` -ge 1000 ] &amp;&amp; usermod <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -s /bin/bash</span><br></pre></td></tr></table></figure><h3 id="1-13-接收键盘的输入—read命令"><a href="#1-13-接收键盘的输入—read命令" class="headerlink" title="1.13 接收键盘的输入—read命令"></a>1.13 接收键盘的输入—read命令</h3><p>​使用read命令将输入值分配给一个或多个shell变量。read 命令从标准输入读取值，给每个单词分配一个变量，当所有单词分配完成还剩余变量没有分配，则默认的值为系统内置变量REPLY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> [options] [name ...]</span><br><span class="line"></span><br><span class="line">常见选项：</span><br><span class="line">-p 指定要显示的提示</span><br><span class="line">-s 静默输入，一般用于密码</span><br><span class="line">-n N 指定输入的字符长度N</span><br><span class="line">-d <span class="string">&#x27;字符&#x27;</span> 输入结束符</span><br><span class="line">-t NTIMEOUT为N秒</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo $REPLY</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># read</span></span><br><span class="line">TEST</span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $REPLY</span></span><br><span class="line">TEST</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># read -p &quot;Please input your name: &quot; NAME</span></span><br><span class="line">Please input your name: Tom   </span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">Tom</span><br></pre></td></tr></table></figure><p>示例：read命令使用管道符时的注意点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Pipelines</span><br><span class="line">       A pipeline is a sequence of one or more commands separated by one of the control operators | or |&amp;.</span><br><span class="line">       </span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | read NAME</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $NAME</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | &#123; read NAME; echo $NAME; &#125;</span></span><br><span class="line">Jerry</span><br></pre></td></tr></table></figure><p>实例：read和输入重定向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.txt </span></span><br><span class="line">1 2</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># read i j &lt; test.txt;echo &quot;i=$i,j=$j&quot;</span></span><br><span class="line">i=1,j=2</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | read i j;echo &quot;i=$i,j=$j&quot;</span></span><br><span class="line">i=,j=</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | (read i j;echo &quot;i=$i,j=$j&quot;)</span></span><br><span class="line">i=1,j=2</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | &#123; read i j;echo &quot;i=$i,j=$j&quot;; &#125;</span></span><br><span class="line">i=1,j=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Each command in a pipeline is executed as a separate process (i.e., in a subshell).</span></span><br></pre></td></tr></table></figure><p>实例：实现运维工作菜单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/work_menu.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\E[1;$[RANDOM%7+31]m&quot;</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">1) 备份数据库</span></span><br><span class="line"><span class="string">2) 清理日志</span></span><br><span class="line"><span class="string">3) 软件升级</span></span><br><span class="line"><span class="string">4) 软件回滚</span></span><br><span class="line"><span class="string">5) 删库跑路</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&#x27;\E[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your choice(1-5): &quot;</span> MENU</span><br><span class="line">[ <span class="variable">$MENU</span> -eq 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;备份数据库&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 2 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;清理日志&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 3 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;软件升级&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 4 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;软件回滚&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 5 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;删库跑路&quot;</span></span><br></pre></td></tr></table></figure><h2 id="二、bash-shell-配置文件"><a href="#二、bash-shell-配置文件" class="headerlink" title="二、bash shell 配置文件"></a>二、bash shell 配置文件</h2><h3 id="2-1-按照生效范围划分"><a href="#2-1-按照生效范围划分" class="headerlink" title="2.1 按照生效范围划分"></a>2.1 按照生效范围划分</h3><p>全局配置：针对所有用户生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/*.sh</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><p>个人配置：仅对指定用户生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="2-2-shell-登录两种方式分类"><a href="#2-2-shell-登录两种方式分类" class="headerlink" title="2.2 shell 登录两种方式分类"></a>2.2 shell 登录两种方式分类</h3><h4 id="2-2-1-交互式登录"><a href="#2-2-1-交互式登录" class="headerlink" title="2.2.1 交互式登录"></a>2.2.1 交互式登录</h4><ul><li>直接通过终端输入账号密码登录</li><li>使用 su - USERNAME 切换登录</li></ul><h4 id="2-2-2-非交互式登录"><a href="#2-2-2-非交互式登录" class="headerlink" title="2.2.2 非交互式登录"></a>2.2.2 非交互式登录</h4><ul><li>su USERNAME</li><li>图形界面下打开的终端</li><li>执行脚本</li><li>任何其它的bash实例</li></ul><h3 id="2-3-按照功能划分"><a href="#2-3-按照功能划分" class="headerlink" title="2.3 按照功能划分"></a>2.3 按照功能划分</h3><h4 id="2-3-1-profile-类"><a href="#2-3-1-profile-类" class="headerlink" title="2.3.1 profile 类"></a>2.3.1 profile 类</h4><p>profile 类为交互式登录的shell提供配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">全局: /etc/profile, /etc/profile.d/*.sh</span><br><span class="line">个人: ~/.bash_profile</span><br></pre></td></tr></table></figure><p>功用：</p><p>（1）一般用于定义环境变量</p><p>（2）运行命令或脚本</p><h4 id="2-3-2-bashrc-类"><a href="#2-3-2-bashrc-类" class="headerlink" title="2.3.2 bashrc 类"></a>2.3.2 bashrc 类</h4><p>bashrc 类为交互式和交互式登录的shell提供配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">全局: /etc/bashrc</span><br><span class="line">个人: ~/.bashrc</span><br></pre></td></tr></table></figure><p>功用：</p><p>（1）定义命令别名和函数</p><p>（2）定义本地变量</p><h3 id="2-4-编辑配置文件生效"><a href="#2-4-编辑配置文件生效" class="headerlink" title="2.4 编辑配置文件生效"></a>2.4 编辑配置文件生效</h3><p>修改profile和bashrc文件后使其生效的两种方法</p><p>（1）重新启动shell进程</p><p>（2）source | .</p><h3 id="2-5-退出任务"><a href="#2-5-退出任务" class="headerlink" title="2.5 退出任务"></a>2.5 退出任务</h3><p>保存在~&#x2F;.bash_logout文件中，在退出登录shell时运行</p><p>功能：</p><p>（1）创建自动备份</p><p>（2）清除临时文件</p><h3 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h3><p>1、让所有用户的PATH环境变量的值多出一个路径，例如：&#x2F;usr&#x2F;local&#x2F;apache&#x2F;bin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;PATH=/usr/local/apache/bin:$PATH&quot; &gt;&gt; /etc/profile</span></span><br></pre></td></tr></table></figure><p>2、用户 root 登录时，将命令指示符变成红色，并自动启用如下别名： </p><p>rm&#x3D;‘rm -i’<br>cdnet&#x3D;‘cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;’<br>editnet&#x3D;‘vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0’<br>editnet&#x3D;‘vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eno16777736 或 ifcfg-ens33 ’ (如果系统是CentOS7)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改命令指示符颜色</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#echo &#x27;PS1=&quot;\[\e[1;31m\][\u@\h \W]\\$\[\e[0m\]&quot;&#x27; &gt;&gt; ~/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义别名</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#vim ~/.bashrc</span></span><br><span class="line"><span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line">cdnet=<span class="string">&#x27;cd /etc/sysconfig/network-scripts/&#x27;</span></span><br><span class="line">editnet=<span class="string">&#x27;vim /etc/sysconfig/network-scripts/ifcfg-eth0&#x27;</span></span><br></pre></td></tr></table></figure><p>3、任意用户登录系统时，显示红色字体的警示提醒信息“Hi,dangerous！”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/issue 登录前脚本提示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/issue</span></span><br><span class="line">^[[1;31mHi, dangerous(login before)^[[0m</span><br><span class="line"><span class="comment"># /etc/motd 登录后脚本提示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/motd</span></span><br><span class="line">^[[1;31mHi, dangerous!(login after)^[[0m</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221008224950634.png" alt="image-20221008224950634"></p><p>4、编写生成脚本基本格式的脚本，包括作者，联系方式，版本，时间，描述等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下信息包括文件名、作者、版本、邮箱、站点、时间、描述</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat .vimrc</span></span><br><span class="line">autocmd BufNewFile *.sh <span class="built_in">exec</span> <span class="string">&quot;:call AddTitleForShell()&quot;</span></span><br><span class="line"><span class="keyword">function</span>  AddTitleForShell()</span><br><span class="line">   call append(0,<span class="string">&quot;#!/bin/bash&quot;</span>)</span><br><span class="line">   call append(1,<span class="string">&quot;# **********************************************************&quot;</span>)</span><br><span class="line">   call append(2,<span class="string">&quot;# * Filename      : &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:t&quot;</span>))</span><br><span class="line">   call append(3,<span class="string">&quot;# * Author        : Herbert&quot;</span>)</span><br><span class="line">   call append(4,<span class="string">&quot;# * Version       : 1.0&quot;</span>)</span><br><span class="line">   call append(5,<span class="string">&quot;# * Email         : wuhaolam@163.com&quot;</span>)</span><br><span class="line">   call append(6,<span class="string">&quot;# * Website       : wuhaolam.github.io&quot;</span>)</span><br><span class="line">   call append(7,<span class="string">&quot;# * Date          : &quot;</span>.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>))</span><br><span class="line">   call append(8,<span class="string">&quot;# * Description   : &quot;</span>)</span><br><span class="line">   call append(9,<span class="string">&quot;# **********************************************************&quot;</span>)</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure><h2 id="三、流程控制"><a href="#三、流程控制" class="headerlink" title="三、流程控制"></a>三、流程控制</h2><h3 id="3-1-条件选择"><a href="#3-1-条件选择" class="headerlink" title="3.1 条件选择"></a>3.1 条件选择</h3><h4 id="3-1-1-选择执行-if-语句"><a href="#3-1-1-选择执行-if-语句" class="headerlink" title="3.1.1 选择执行 if 语句"></a>3.1.1 选择执行 if 语句</h4><p>单分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件;<span class="keyword">then</span></span><br><span class="line">条件成立时的代码</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件;<span class="keyword">then</span></span><br><span class="line">条件为真的代码</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">条件不成立时执行代码</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件1;<span class="keyword">then</span></span><br><span class="line">条件1成立时执行代码</span><br><span class="line"><span class="keyword">elif</span> 判断条件2;<span class="keyword">then</span></span><br><span class="line">条件2成立时执行代码</span><br><span class="line"><span class="keyword">elif</span> 判断条件3;<span class="keyword">then</span></span><br><span class="line">条件3成立时执行代码</span><br><span class="line">···</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">以上条件都不成立时执行该语句</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-条件判断-case-语句"><a href="#3-1-2-条件判断-case-语句" class="headerlink" title="3.1.2 条件判断 case 语句"></a>3.1.2 条件判断 case 语句</h4><p>语法格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 变量引用 <span class="keyword">in</span></span><br><span class="line">PAT1)</span><br><span class="line">分支1</span><br><span class="line">;;</span><br><span class="line">PAT2)</span><br><span class="line">分支2</span><br><span class="line">;;</span><br><span class="line">···</span><br><span class="line">*)</span><br><span class="line">默认分支</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>case 支持glob风格的通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 任意长度任意字符</span><br><span class="line">? 任意单个字符</span><br><span class="line">[] 指定范围内的任意单个字符</span><br><span class="line">| 或者，如: a|b</span><br></pre></td></tr></table></figure><h4 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h4><p>1、编写脚本 createuser.sh，实现如下功能：使用一个用户名做为参数，如果指定参数的用户存在，就显示其存在，否则添加之。并设置初始密码为123456，显示添加的用户的id号等信息，在此新用户第一次登录时，会提示用户立即改密码，如果没有参数，就提示：请输入用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat createuser.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">USERNAME=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入用户名！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> <span class="variable">$USERNAME</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该用户已经存在!&quot;</span> || &#123; useradd <span class="variable">$USERNAME</span>;<span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span> | passwd --stdin <span class="variable">$USERNAME</span>&gt;/dev/null;<span class="built_in">echo</span> <span class="string">&quot;该用户信息为：`id <span class="variable">$USERNAME</span>`&quot;</span>;<span class="built_in">echo</span> <span class="string">&quot;请修改您的密码对于第一次登录，若非第一次登录请忽略！&quot;</span> &gt;&gt; /home/<span class="variable">$USERNAME</span>/.bashrc; &#125;</span><br></pre></td></tr></table></figure><p>2、编写脚本 yesorno.sh，提示用户输入yes或no,并判断用户输入的是yes还是no,或是其它信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat yesorno.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please input &#x27;yes&#x27; or &#x27;no&#x27;: &quot;</span> INPUT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INPUT=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INPUT</span>&quot;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27;[A-Z]&#x27;</span> <span class="string">&#x27;[a-z]&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$INPUT</span> <span class="keyword">in</span></span><br><span class="line">y|<span class="built_in">yes</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Your input is YES!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">n|no)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Your input is NO!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Input false! Please input yes or no!&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 filetype.sh，判断用户输入文件路径，显示其文件类型（普通，目录，管道，其它文件类型）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat filetype.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input a file path: &quot;</span> ROUTE</span><br><span class="line">TYPE=`<span class="built_in">ls</span> -l -d <span class="string">&quot;<span class="variable">$ROUTE</span>&quot;</span> | <span class="built_in">head</span> -c1`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$TYPE</span>&quot;</span> = <span class="string">&quot;-&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ROUTE</span> is a common file!&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$TYPE</span>&quot;</span> = <span class="string">&quot;d&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ROUTE</span> is a directory file!&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$TYPE</span>&quot;</span> = <span class="string">&quot;p&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ROUTE</span> is a Pipe file!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ROUTE</span> is a other file!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>4、编写脚本 checkint.sh，判断用户输入的参数是否为正整数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat checkint.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> INTNUM</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$INTNUM</span> =~ ^[0-9]+$ ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INTNUM</span> 是一个正整数!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INTNUM</span> 不是一个正整数!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="3-2-循环"><a href="#3-2-循环" class="headerlink" title="3.2 循环"></a>3.2 循环</h3><h4 id="3-2-1-循环-for"><a href="#3-2-1-循环-for" class="headerlink" title="3.2.1 循环 for"></a>3.2.1 循环 for</h4><h5 id="格式1"><a href="#格式1" class="headerlink" title="格式1"></a>格式1</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式1</span></span><br><span class="line"><span class="keyword">for</span> 变量名 <span class="keyword">in</span> 列表;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方式2</span></span><br><span class="line"><span class="keyword">for</span> 变量名 <span class="keyword">in</span> 列表</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>for 循环列表生成方式</p><ul><li>直接给出列表</li><li>整数列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;star..end&#125;</span><br><span class="line">$(<span class="built_in">seq</span> [start [step]] end)</span><br></pre></td></tr></table></figure><ul><li>返回列表的命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(COMMAND)</span><br></pre></td></tr></table></figure><ul><li>使用glob，如：*.sh</li><li>变量引用，如：$@, $*, $#</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当不指定列表时，默认使用位置变量 $@</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> NAME; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$NAME</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash -x test.sh Tom Jerry</span></span><br><span class="line">+ <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">+ <span class="built_in">echo</span> Tom</span><br><span class="line">Tom</span><br><span class="line">+ <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">+ <span class="built_in">echo</span> Jerry</span><br><span class="line">Jerry</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算 1+2+3+...+100 的结果</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sum=0;for i in &#123;1..100&#125;;do sum=$[$sum+$i];done;echo &quot;sum=$sum&quot;</span></span><br><span class="line"><span class="built_in">sum</span>=5050</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq -s+ 100 | bc</span></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 100以内的奇数之和</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sum=0;for i in &#123;1..100..2&#125;;do let sum=sum+i;done;echo &quot;sum=$sum&quot;</span></span><br><span class="line"><span class="built_in">sum</span>=2500</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq -s+ 1 2 100 | bc</span></span><br><span class="line">2500</span><br></pre></td></tr></table></figure><p>实例：自定义输入数字计算之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat for_sum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : for_sum.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : 接收命令行传来的参数计算之和</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $*; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+i]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sum=<span class="variable">$sum</span>&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash for_sum.sh 1 2 3 4 5</span></span><br><span class="line"><span class="built_in">sum</span>=15</span><br></pre></td></tr></table></figure><p>实例：传递用户名参数自动创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat CreateUser.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : CreateUser.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : Create Users in Batchers</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;USAGE: CreateUser.sh USERNAME ...&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> USERS;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">id</span> <span class="variable">$USERS</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$USERS</span> already exists&quot;</span> || &#123; useradd <span class="variable">$USERS</span>;<span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$USERS</span>&#x27; user created successfully!&quot;</span>; &#125;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash CreateUser.sh Tom Jerry</span></span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span> user created successfully!</span><br><span class="line"><span class="string">&#x27;Jerry&#x27;</span> user created successfully!</span><br></pre></td></tr></table></figure><p>实例：批量创建用户并设置随机密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat UsersAndPasswords.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : UsersAndPasswords.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : Create Users in Branchers and Set Passwords</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;USAGE: CreateUser.sh USERNAME ...&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> User;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">id</span> <span class="variable">$User</span> &amp;&gt; /dev/null &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$User</span> already exists&quot;</span>;<span class="built_in">continue</span>; &#125;</span><br><span class="line">  useradd <span class="variable">$User</span></span><br><span class="line">  PASS=`<span class="built_in">cat</span> /dev/urandom | <span class="built_in">tr</span> -dc <span class="string">&#x27;[:alnum:]&#x27;</span> | <span class="built_in">head</span> -c12`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PASS</span>&quot;</span> | passwd --stdin <span class="variable">$User</span> &amp;&gt; /dev/null</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$User</span>:<span class="variable">$PASS</span>&quot;</span> &gt;&gt; /backup/UsersAndPasswords.<span class="built_in">log</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$User</span>&#x27; user created successfully!&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash UsersAndPasswords.sh Tom Jerry</span></span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span> user created successfully!</span><br><span class="line"><span class="string">&#x27;Jerry&#x27;</span> user created successfully!</span><br><span class="line">[root@centos7 shell]<span class="comment">#cat  /backup/UsersAndPasswords.log </span></span><br><span class="line">Tom:5OO4dZXKZSXl</span><br><span class="line">Jerry:DFshykfzYUBL</span><br></pre></td></tr></table></figure><p>实例：九九乘法表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二,printf 打印九九乘法表</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%s*%s=%d\t&quot;</span> <span class="variable">$j</span> <span class="variable">$i</span> $[i*j]</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式三，打印多彩九九乘法表</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c\E[0m&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>生产案例：将指定目录下文件所有文件后缀名改为bak后缀</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat suffix.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DIR=/data/test</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;Can not access to!&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> *;<span class="keyword">do</span></span><br><span class="line">  PRE=`<span class="built_in">echo</span> <span class="variable">$FILE</span> | grep -Eo <span class="string">&quot;.*\.&quot;</span>`</span><br><span class="line">  <span class="built_in">mv</span> <span class="variable">$FILE</span> <span class="variable">$&#123;PRE&#125;</span>bak</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>面试题：将目录YYYY-MM-DD&#x2F;中所有文件，移动到YYYY-MM&#x2F;DD&#x2F;下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat MoveFile.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : MoveFile.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-10</span></span><br><span class="line"><span class="comment"># * Description   : Directory file movement</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">PDIR=/data</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..365&#125;;<span class="keyword">do</span></span><br><span class="line">  DIR=`<span class="built_in">date</span> -d <span class="string">&quot;-<span class="variable">$i</span> day&quot;</span> +%F`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$PDIR</span>/<span class="variable">$DIR</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$PDIR</span>/<span class="variable">$DIR</span>/</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..10&#125;;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">touch</span> <span class="variable">$&#123;RANDOM&#125;</span>.<span class="built_in">log</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;31mRelated directroy files have been created\nStart to move related directories and files\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line">DIR=/data</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;Can not access to!&quot;</span>;exit1; &#125;</span><br><span class="line"><span class="keyword">for</span> SUBDIR <span class="keyword">in</span> *;<span class="keyword">do</span></span><br><span class="line">  YYYY_MM=`<span class="built_in">echo</span> <span class="variable">$SUBDIR</span> | <span class="built_in">cut</span> -d<span class="string">&#x27;-&#x27;</span> -f1,2`</span><br><span class="line">  DD=`<span class="built_in">echo</span> <span class="variable">$SUBDIR</span> | <span class="built_in">cut</span> -d<span class="string">&#x27;-&#x27;</span> -f3`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$DIR</span>/<span class="variable">$YYYY_MM</span>/<span class="variable">$DD</span></span><br><span class="line">  <span class="built_in">mv</span> <span class="variable">$SUBDIR</span> ./<span class="variable">$YYYY_MM</span>/<span class="variable">$DD</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mSuccessfully!\E[0m&quot;</span></span><br></pre></td></tr></table></figure><p>面试题：扫描一个网段：192.168.0.0&#x2F;24，判断此网段中所有主机在线状态，将在线的主机的IP打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat ScanHost.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">NET=192.168.0</span><br><span class="line"><span class="keyword">for</span> ID <span class="keyword">in</span> &#123;1..254&#125;;<span class="keyword">do</span></span><br><span class="line">        fping <span class="variable">$NET</span>.<span class="variable">$ID</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NET</span>.<span class="variable">$ID</span> is alived&quot;</span> | <span class="built_in">tee</span> -a /tmp/ip_alived.log || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NET</span>.<span class="variable">$ID</span> is down&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="格式2"><a href="#格式2" class="headerlink" title="格式2"></a>格式2</h5><p>​双小括号法，即 ((…)) 格式，也可以用于算数运算，双小括号号方法可以使bash shell实现C语言风格的变量操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((控制变量初始化;条件判断表达式;控制变量的修正表达式))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1~100的和</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#cat sum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((sum=<span class="number">0</span>,i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+i]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1~100的和为：<span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 九九乘法表 </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#cat /shell/MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : MultiplicationTable.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.2</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-10</span></span><br><span class="line"><span class="comment"># * Description   : 9*9 multiplication table</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> ((j=<span class="number">1</span>;j&lt;=i;j++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c\E[0m&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印等腰三角形</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat EquicruralTriangle.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : EquicruralTriangle.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-11</span></span><br><span class="line"><span class="comment"># * Description   : print equicrural triangle</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter the number of rows of triangle: &quot;</span> LINE</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=LINE;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> ((j=<span class="number">1</span>;j&lt;=LINE-i;j++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&#x27; \c&#x27;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">for</span> ((k=<span class="number">1</span>;k&lt;=<span class="number">2</span>*i-<span class="number">1</span>;k++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m*\E[0m\c&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221011204213932.png" alt="image-20221011204213932"></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成进度条</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#for ((i=0;i&lt;=100;i++));do printf &quot;\e[4D%3d%%&quot; $i;sleep 0.1s;done</span></span><br></pre></td></tr></table></figure><h4 id="练习（for实现）"><a href="#练习（for实现）" class="headerlink" title="练习（for实现）"></a>练习（for实现）</h4><p>1、判断&#x2F;var&#x2F;目录下所有文件的类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> /var</span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> /var/*;<span class="keyword">do</span></span><br><span class="line">  TYPE=`<span class="built_in">ls</span> -l -d <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span> | <span class="built_in">head</span> -c1`</span><br><span class="line">  <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$TYPE</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">  <span class="string">&quot;-&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a test file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;b&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Block file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;c&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Character file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;l&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Link file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;p&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Pipe file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;d&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Directory file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="string">&quot;s&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a Socket file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> is a other file!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>2、添加10个用户user1-user10，密码为8位随机字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;;<span class="keyword">do</span></span><br><span class="line">NewUser=<span class="string">&quot;user<span class="variable">$i</span>&quot;</span></span><br><span class="line"><span class="built_in">id</span> <span class="string">&quot;<span class="variable">$NewUser</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NewUser</span> is exist!&quot;</span>;<span class="built_in">continue</span>; &#125;</span><br><span class="line">useradd <span class="string">&quot;<span class="variable">$NewUser</span>&quot;</span></span><br><span class="line">Password=`<span class="built_in">cat</span> /dev/urandom | <span class="built_in">tr</span> -dc [[:alnum:]] | <span class="built_in">head</span> -c8`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$Password</span>&quot;</span> | passwd --stdin <span class="string">&quot;<span class="variable">$NewUser</span>&quot;</span> &gt; /dev/null</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mUsers create Successfully!\E[0m&quot;</span></span><br></pre></td></tr></table></figure><p>3、&#x2F;etc&#x2F;rc.d&#x2F;rc3.d目录下分别有多个以K开头和以S开头的文件；分别读取每个文件，以K开头的输出为文件加stop，以S开头的输出为文件名加start，如K34filename stop S66filename start</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos6-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">set</span> -u</span><br><span class="line"><span class="built_in">cd</span> /etc/rc.d/rc3.d/</span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> `<span class="built_in">ls</span>`;<span class="keyword">do</span></span><br><span class="line">  Character=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span>&quot;</span> | <span class="built_in">head</span> -c1`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$Character</span>&quot;</span> = <span class="string">&#x27;K&#x27;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> stop&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$FILE</span> start&quot;</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>4、编写脚本，提示输入正整数n的值，计算1+2+…+n的总和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input a positive integer: &quot;</span> N</span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$N</span>`;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">let</span> <span class="built_in">sum</span>=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1+..+<span class="variable">$N</span> equal is <span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><p>5、计算100以内所有能被3整除的整数之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">echo</span> &#123;3..100&#125;;<span class="keyword">do</span></span><br><span class="line">RESULT=$[<span class="variable">$i</span>%3]</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$RESULT</span>&quot;</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">let</span> <span class="built_in">sum</span>=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32m100以内所有能被3整除的整数之和为: <span class="variable">$sum</span>\E[0m&quot;</span></span><br></pre></td></tr></table></figure><p>6、在&#x2F;testdir目录下创建10个html文件,文件名格式为数字N（从1到10）加随机8个字母，如：1AbCdeFgH.html</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 10`;<span class="keyword">do</span></span><br><span class="line">[ ! -d /testdir ] &amp;&amp; <span class="built_in">mkdir</span> /testdir</span><br><span class="line"><span class="built_in">cd</span> /testdir</span><br><span class="line">RandomLetters=`<span class="built_in">cat</span> /dev/urandom | <span class="built_in">tr</span> -dc [[:alpha:]] | <span class="built_in">head</span> -c8`</span><br><span class="line"><span class="built_in">touch</span> <span class="string">&quot;$i<span class="variable">$RandomLetters</span>.html&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>7、猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半多一个。到第10天早上想再吃时，只剩下一个桃子了。求第一天共摘了多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">sum</span>=1</span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">2</span>; i&lt;=<span class="number">10</span>; i++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">sum</span>=$[(<span class="variable">$sum</span>+1)*2]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The monkey picked <span class="variable">$sum</span> peaches on the first day&quot;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#bash test.sh</span></span><br><span class="line">The monkey picked 1534 peaches on the first day</span><br></pre></td></tr></table></figure><h4 id="3-2-2-循环-while"><a href="#3-2-2-循环-while" class="headerlink" title="3.2.2 循环 while"></a>3.2.2 循环 while</h4><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> CONDITION; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 无限循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实例：磁盘检查并发出邮件警告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现报警功能需提前设置好报警功能</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#cat while_check_disk.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">WARNING=80</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  CAPACITY=`<span class="built_in">df</span> -Th | awk <span class="string">&#x27;/\/dev\/sd/&#123;print $6&#125;&#x27;</span> | <span class="built_in">cut</span> -d<span class="string">&quot;%&quot;</span> -f1 | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> -n1`</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$CAPACITY</span> -ge <span class="variable">$WARNING</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Disk will be full from `hostname -I`&quot;</span> | mail -s <span class="string">&quot;Linux disk check&quot;</span> wuhaolam@163.com</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  <span class="built_in">sleep</span> 10</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h4><p>1、编写脚本，求100以内所有正奇数之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=1</span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 100 ];<span class="keyword">do</span></span><br><span class="line"><span class="built_in">sum</span>=$[<span class="built_in">sum</span>+i]</span><br><span class="line">i=$[i+2]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The sum of odd numbers(1~100) is <span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><p>2、编写脚本，提示请输入网络地址，如:192.168.0.0，判断输入的网段中主机在线状态，并统计在线和离线主机各多少</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat host.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">NET=192.168.0</span><br><span class="line">SUB=1</span><br><span class="line">UP=0</span><br><span class="line">DOWN=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$SUB</span> -lt 255 ];<span class="keyword">do</span></span><br><span class="line">IP=<span class="variable">$NET</span>.<span class="variable">$SUB</span></span><br><span class="line"><span class="keyword">if</span> `fping <span class="variable">$IP</span> &amp;&gt; /dev/null`;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is alived&quot;</span></span><br><span class="line">UP=$[<span class="variable">$UP</span>+1]</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is down&quot;</span></span><br><span class="line">DOWN=$[<span class="variable">$DOWN</span>+1]</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">SUB=$[<span class="variable">$SUB</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The online host has <span class="variable">$UP</span>;offline host has <span class="variable">$DOWN</span>&quot;</span></span><br></pre></td></tr></table></figure><p>3、编写脚本，打印九九乘法表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 9 ];<span class="keyword">do</span></span><br><span class="line">j=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$j</span> -le <span class="variable">$i</span> ];<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -e -n <span class="string">&quot;\E[1;$[<span class="variable">$RANDOM</span>%7+31]m<span class="variable">$j</span>*<span class="variable">$i</span>=$[<span class="variable">$j</span>*<span class="variable">$i</span>]\t\E[0m&quot;</span></span><br><span class="line">j=$[<span class="variable">$j</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">i=$[<span class="variable">$i</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>4、编写脚本，利用变量RANDOM生成10个随机数字，输出这个10数字，并显示其中的最大值和最小值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=1</span><br><span class="line">MAX=0</span><br><span class="line">MIN=0</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -lt 11 ];<span class="keyword">do</span></span><br><span class="line">NUM=<span class="variable">$RANDOM</span></span><br><span class="line">[ <span class="variable">$i</span> -eq 1 ] &amp;&amp; MIN=<span class="variable">$NUM</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$NUM</span> &quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$NUM</span> -gt <span class="variable">$MAX</span> ];<span class="keyword">then</span></span><br><span class="line">MAX=<span class="variable">$NUM</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$NUM</span> -lt <span class="variable">$MIN</span> ];<span class="keyword">then</span></span><br><span class="line">MIN=<span class="variable">$NUM</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">i=$[<span class="variable">$i</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The largest number is <span class="variable">$MAX</span>,smallest number is <span class="variable">$MIN</span>&quot;</span></span><br></pre></td></tr></table></figure><p>5、编写脚本，实现打印国际象棋棋盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -le 8 ];<span class="keyword">do</span></span><br><span class="line">j=1</span><br><span class="line">value1=$[<span class="variable">$i</span>%2]</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$value1</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$j</span> -le 8 ];<span class="keyword">do</span></span><br><span class="line">value2=$[<span class="variable">$j</span>%2]</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$value2</span> -ne 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e -n <span class="string">&quot;\E[1;47m  \E[0m&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e -n <span class="string">&quot;\E[1;41m  \E[0m&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">j=$[<span class="variable">$j</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="variable">$j</span> -le 8 ];<span class="keyword">do</span></span><br><span class="line">  value2=$[<span class="variable">$j</span>%2]</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$value2</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> -e -n <span class="string">&quot;\E[1;47m  \E[0m&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> -e -n <span class="string">&quot;\E[1;41m  \E[0m&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  j=$[<span class="variable">$j</span>+1]</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">i=$[<span class="variable">$i</span>+1]</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>6、后续六个字符串：efbaf275cd、4be9c40b8b、44b2395c46、f8c8873ce0、b902c16c8b、ad865d2f63是通过对随机数变量RANDOM随机执行命令： echo $RANDOM|md5sum|cut -c1-10后的结果，请破解这些字符串对应的RANDOM值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> words <span class="keyword">in</span> efbaf275cd 4be9c40b8b 44b2395c46 f8c8873ce0 b902c16c8b ad865d2f63;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">INIT_VALUE=<span class="variable">$RANDOM</span></span><br><span class="line">PW=`<span class="built_in">echo</span> <span class="variable">$INIT_VALUE</span> | <span class="built_in">md5sum</span> | <span class="built_in">cut</span> -c1-10`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$words</span>&quot;</span> = <span class="string">&quot;<span class="variable">$PW</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$words</span> initial value is <span class="variable">$INIT_VALUE</span>&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash test.sh</span></span><br><span class="line">efbaf275cd initial value is 15000</span><br><span class="line">4be9c40b8b initial value is 12000</span><br><span class="line">44b2395c46 initial value is 9000</span><br><span class="line">f8c8873ce0 initial value is 6000</span><br><span class="line">b902c16c8b initial value is 3000</span><br><span class="line">ad865d2f63 initial value is 1000</span><br></pre></td></tr></table></figure><h4 id="3-2-3-循环-until"><a href="#3-2-3-循环-until" class="headerlink" title="3.2.3 循环 until"></a>3.2.3 循环 until</h4><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">until CONDITION; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 无限循环</span></span><br><span class="line">until <span class="literal">false</span>; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">进入条件 CONDITION 为 <span class="literal">false</span></span><br><span class="line">推出条件 CONDITION 为 <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># sum=0;i=1;until [ $i -gt 100 ];do let sum=sum+i; let i++;done;echo $sum</span></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><h4 id="3-2-4-continue-语句"><a href="#3-2-4-continue-语句" class="headerlink" title="3.2.4 continue 语句"></a>3.2.4 continue 语句</h4><p>continue [N]：提前结束第N层的本轮循环，直接进入下一轮判断；最内层为第1层</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$i</span> -eq 3 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">continue</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash test.sh</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="3-2-5-break-语句"><a href="#3-2-5-break-语句" class="headerlink" title="3.2.5 break 语句"></a>3.2.5 break 语句</h4><p>break[N]：提前结束第N层整个循环，最内层为第1层</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$i</span> -eq 3 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span> </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash test.sh</span></span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat menu.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : menu.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-18</span></span><br><span class="line"><span class="comment"># * Description   : order dishes</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line">COLOR1=<span class="string">&#x27;echo -e \E[1;31m&#x27;</span></span><br><span class="line">COLOR2=<span class="string">&#x27;echo -e \E[1;32m&#x27;</span></span><br><span class="line">END=<span class="string">&#x27;\E[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;33m\c&quot;</span></span><br><span class="line">  <span class="built_in">cat</span> &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">1) 小龙虾</span></span><br><span class="line"><span class="string">2) 葱油鸡</span></span><br><span class="line"><span class="string">3) 老母鸡汤</span></span><br><span class="line"><span class="string">4) 蒸蛋</span></span><br><span class="line"><span class="string">5) 烤肠</span></span><br><span class="line"><span class="string">6) 结账</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">  <span class="built_in">echo</span> -e <span class="string">&quot;\E[0m&quot;</span></span><br><span class="line">  </span><br><span class="line">  <span class="built_in">read</span> -p <span class="string">&quot;Please select your dishes: &quot;</span> MENU</span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$MENU</span> <span class="keyword">in</span></span><br><span class="line">  1|4)</span><br><span class="line">    <span class="variable">$COLOR1</span><span class="string">&#x27;prices: $10&#x27;</span><span class="variable">$END</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+10</span><br><span class="line">    ;;</span><br><span class="line">  3|5)</span><br><span class="line">    <span class="variable">$COLOR1</span><span class="string">&#x27;prices: $20&#x27;</span><span class="variable">$END</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+20</span><br><span class="line">    ;;</span><br><span class="line">  2)</span><br><span class="line">    <span class="variable">$COLOR1</span><span class="string">&#x27;prices: $30&#x27;</span><span class="variable">$END</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+30</span><br><span class="line">    ;;</span><br><span class="line">  6)</span><br><span class="line">    <span class="variable">$COLOR2</span><span class="string">&quot;All the prices are: \$<span class="variable">$sum</span>&quot;</span><span class="variable">$END</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Please input correct sequence!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实例：猜大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">NUM=$[RANDOM%10]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -p <span class="string">&quot;Please input your number[0~9]: &quot;</span> INPUT ;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$INPUT</span> -eq <span class="variable">$NUM</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Congratulations on your correct guess!&quot;</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$INPUT</span> -gt <span class="variable">$NUM</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Too big, again please!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Too small, again please!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="3-2-6-shift命令"><a href="#3-2-6-shift命令" class="headerlink" title="3.2.6 shift命令"></a>3.2.6 shift命令</h4><p>​shift [n] 用于将参数列表 list 左移指定次数，缺省为左移一次。</p><p>​当参数列表 list 被移动，最左端的那个参数就从列表中删除。while循环遍历位置参数列表时，常用到 shift</p><p>示例1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">until [ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ];<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash test.sh a b c d e</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shift 批量创建用户</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat batch_create_user.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ];<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">id</span> <span class="variable">$1</span> &amp;&gt; /dev/null;<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> user is exist</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">useradd <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> user create successfully!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash batch_create_user.sh Tom Jerry</span></span><br><span class="line">Tom user create successfully!</span><br><span class="line">Jerry user create successfully!</span><br></pre></td></tr></table></figure><h4 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h4><p>1、每隔3秒钟到系统上获取已经登录的用户的信息；如果发现用户hacker登录，则将登录时间和主机记录于日志&#x2F;var&#x2F;log&#x2F;login.log中,并退出脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">who</span> | grep <span class="string">&quot;hacker&quot;</span> &gt;&gt; /var/log/login.log &amp;&amp; <span class="built_in">break</span></span><br><span class="line"><span class="built_in">sleep</span> 3</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>2、用文件名做为参数，统计所有参数文件的总行数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Please input at lease one parameter: &#x27;/etc/fstab ...&#x27;&quot;</span></span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line">Lines=`<span class="built_in">cat</span> <span class="variable">$FILE</span> | <span class="built_in">wc</span> -l`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The number of lines for &#x27;<span class="variable">$FILE</span>&#x27; is <span class="variable">$Lines</span>.&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>3、用二个以上的数字为参数，显示其中的最大值和最小值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ <span class="variable">$#</span> -le 2 ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;Please input at least two parameters!&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"></span><br><span class="line">MAX=<span class="variable">$1</span></span><br><span class="line">MIN=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">for</span> NUM <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$MAX</span> -lt <span class="variable">$NUM</span> ];<span class="keyword">then</span></span><br><span class="line">MAX=<span class="variable">$NUM</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$MIN</span> -gt <span class="variable">$NUM</span> ];<span class="keyword">then</span></span><br><span class="line">    MIN=<span class="variable">$NUM</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&#x27;$*&#x27;,the MAX number is <span class="variable">$MAX</span>; the MIN number is <span class="variable">$MIN</span>.&quot;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-7-while-特殊用法-while-read"><a href="#3-2-7-while-特殊用法-while-read" class="headerlink" title="3.2.7 while 特殊用法 while read"></a>3.2.7 while 特殊用法 while read</h4><p>while 循环的特殊用法，遍历文件或文本的每一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> LINE;<span class="keyword">do</span></span><br><span class="line">loop body</span><br><span class="line"><span class="keyword">done</span> &lt; /PATH/SOMEFILE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 依次读取/PATH/SOMEFILE文件中的每一行，且将行赋值给变量LINE</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | read x;echo $x</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | &#123; read x;echo $x; &#125;</span></span><br><span class="line">Jerry</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | while read X;do echo $X;done</span></span><br><span class="line">Jerry</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Tom Jerry Snoopy | while read X Y Z; do echo $X $Y $Z;done</span></span><br><span class="line">Tom Jerry Snoopy</span><br></pre></td></tr></table></figure><p>实例：磁盘检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat Check_Disk_Capacity.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : Check_Disk_Capacity.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-18</span></span><br><span class="line"><span class="comment"># * Description   : check disk capacity and send email warnings</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">WARNING=80</span><br><span class="line">MAIL=wuhaolam@163.com</span><br><span class="line"></span><br><span class="line"><span class="built_in">df</span> | awk -F<span class="string">&quot; +|%&quot;</span>  <span class="string">&#x27;/^\/dev\/sd/&#123;print $1,$5&#125;&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> DEVICE UTILIZATION;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$UTILIZATION</span> -ge <span class="variable">$WARNING</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEVICE</span> will be full, Utilization: <span class="variable">$UTILIZATION</span>%&quot;</span> | mail -s <span class="string">&quot;Linux Disk Warning&quot;</span> <span class="variable">$MAIL</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实例：检查DOS攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat CheckLink.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : CheckLink.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-23</span></span><br><span class="line"><span class="comment"># * Description   : Check the number of attack connections</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">WARNING=10</span><br><span class="line">[ ! -e /tmp/deny_hosts.txt ] &amp;&amp;  <span class="built_in">touch</span> /tmp/deny_hosts.txt</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  ss -nt | sed -nr <span class="string">&#x27;s#.* ([0-9.]+):[0-9]+ *#\1#p&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c |</span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">read</span> COUNT IP;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$COUNT</span> -ge <span class="variable">$WARNING</span> ];<span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> will be denied&quot;</span></span><br><span class="line">      grep -q <span class="string">&quot;<span class="variable">$IP</span>&quot;</span> /tmp/deny_hosts.txt || &#123; <span class="built_in">echo</span> <span class="variable">$IP</span> &gt;&gt; /tmp/deny_hosts.txt;iptables -A INPUT -s <span class="variable">$IP</span> -j REJECT; &#125;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">break</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实例：查看&#x2F;sbin&#x2F;nologin的shell类型的用户名和UID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> LINE;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$LINE</span>&quot;</span> =~ /sbin/nologin$  ]];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$LINE</span>&quot;</span> | <span class="built_in">cut</span> -d: -f1,3 --output-delimiter=:</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="3-2-8-循环与菜单-select"><a href="#3-2-8-循环与菜单-select" class="headerlink" title="3.2.8 循环与菜单 select"></a>3.2.8 循环与菜单 select</h4><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select NAME [<span class="keyword">in</span> WORDS ...;]<span class="keyword">do</span> COMMANDS;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">select VARIABLE <span class="keyword">in</span> list; <span class="keyword">do</span></span><br><span class="line">循环体命令</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>select 循环主要用于创建菜单，按数字顺序排列的菜单项显示在标准错误上，并显示 PS3 提示符，等待用户输入</li><li>用户输入菜单列表中的某个数字，执行相应的命令</li><li>用户的输入被保存在内置变量 REPLY 中</li><li>select 是个无限循环，因此要用break命令退出循环，或者用exit命令终止脚本</li><li>select 经常和case联合使用</li><li>与 for 循环类似，可以省略 in list，此时使用位置参数</li></ul><p>实例：餐馆点菜</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat select_menu.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : select_menu.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-25</span></span><br><span class="line"><span class="comment"># * Description   : Use &#x27;select&#x27; command accomplish order function</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line">PS3=<span class="string">&quot;Here is the menu.Please take you order(1-6): &quot;</span></span><br><span class="line">select MENU <span class="keyword">in</span> 老母鸡汤 紫薯饭 毛豆烧鸡 竹笋鸡翅 蒸蛋 点菜结束;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">  1)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MENU</span> prince is ￥16&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+16</span><br><span class="line">    ;;</span><br><span class="line">  2)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MENU</span> prince is ￥3&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+3</span><br><span class="line">    ;;</span><br><span class="line">  3)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MENU</span> prince is ￥15&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+15</span><br><span class="line">    ;;</span><br><span class="line">  4)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MENU</span> prince is ￥12&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+12</span><br><span class="line">    ;;</span><br><span class="line">  5)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$MENU</span> prince is ￥6&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">sum</span>=<span class="built_in">sum</span>+6</span><br><span class="line">    ;;</span><br><span class="line">  6)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;点菜结束&quot;</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Input error,please reselect!&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;A total of consumption: ￥<span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="四、函数-function"><a href="#四、函数-function" class="headerlink" title="四、函数 function"></a>四、函数 function</h2><p>函数function是由若干条shell命令组成的语句块，实现代码重用和模块化编程</p><p>函数与shell程序形式上相似，不同的是它不是一个单独的进程，不能独立运行，而是shell程序的一部分</p><p>函数与shell程序的区别</p><ul><li>shell程序在子shell中运行</li><li>函数在当前shell中运行。故函数可以对shell中的变量进行修改</li></ul><h3 id="4-1-管理函数"><a href="#4-1-管理函数" class="headerlink" title="4.1 管理函数"></a>4.1 管理函数</h3><p>函数由两部分组成：函数名和函数体</p><p>帮助查看：help function</p><h4 id="4-1-1-定义函数"><a href="#4-1-1-定义函数" class="headerlink" title="4.1.1 定义函数"></a>4.1.1 定义函数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 形式一</span></span><br><span class="line"><span class="function"><span class="title">func_name</span></span> ()&#123;</span><br><span class="line">... body ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 形式二</span></span><br><span class="line"><span class="keyword">function</span> func_name&#123;</span><br><span class="line">... body ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 形式三</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">func_name</span></span> ()&#123;</span><br><span class="line">... body ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-2-查看函数"><a href="#4-1-2-查看函数" class="headerlink" title="4.1.2 查看函数"></a>4.1.2 查看函数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前已定义的函数名</span></span><br><span class="line"><span class="built_in">declare</span> -F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前已定义的函数定义</span></span><br><span class="line"><span class="built_in">declare</span> -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定当前已定义的函数名</span></span><br><span class="line"><span class="built_in">declare</span> -f func_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前已定义的函数名定义</span></span><br><span class="line"><span class="built_in">declare</span> -F func_name</span><br></pre></td></tr></table></figure><h4 id="4-1-3-删除函数"><a href="#4-1-3-删除函数" class="headerlink" title="4.1.3 删除函数"></a>4.1.3 删除函数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> func_name</span><br></pre></td></tr></table></figure><h3 id="4-2-函数调用"><a href="#4-2-函数调用" class="headerlink" title="4.2 函数调用"></a>4.2 函数调用</h3><p>函数的调用方式</p><ul><li>可在交互式环境下定义函数</li><li>可将函数放在脚本文件中作为它的一部分</li><li>可放在只包含函数的单独文件中</li></ul><p>调用：函数只有被调用才会执行，通过给定函数名调用函数，执行函数中的代码</p><p>生命周期：被调用时创建，返回时终止</p><h4 id="4-2-1-交互式环境下定义和使用函数"><a href="#4-2-1-交互式环境下定义和使用函数" class="headerlink" title="4.2.1 交互式环境下定义和使用函数"></a>4.2.1 交互式环境下定义和使用函数</h4><p>在交互式环境下定义和使用函数</p><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-client yum.repos.d]<span class="comment">#dir()&#123;</span></span><br><span class="line">&gt; <span class="built_in">ls</span> -l</span><br><span class="line">&gt; &#125;</span><br><span class="line">[root@Rocky8-client yum.repos.d]<span class="comment">#dir</span></span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 30 05:05 backup</span><br><span class="line">-rw-r--r-- 1 root root 2081 Oct 29 21:29 docker-ce.repo.bak</span><br><span class="line">-rw-r--r-- 1 root root 1079 Oct 29 07:59 yum.repo</span><br></pre></td></tr></table></figure><p>Example：判断当前系统的主版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-client ~]<span class="comment">#Rocky_version() &#123;</span></span><br><span class="line">&gt; sed -nr <span class="string">&#x27;s#.* ([0-9]+)\..*#\1#p&#x27;</span> /etc/redhat-release</span><br><span class="line">&gt; &#125;</span><br><span class="line">[root@Rocky8-client ~]<span class="comment">#Rocky_version </span></span><br><span class="line">8</span><br></pre></td></tr></table></figure><h4 id="4-2-2-在脚本中定义及使用函数"><a href="#4-2-2-在脚本中定义及使用函数" class="headerlink" title="4.2.2 在脚本中定义及使用函数"></a>4.2.2 在脚本中定义及使用函数</h4><p>函数在使用前必须定义，因此将函数定义放在脚本开始部分。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">hello</span></span> ()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;program execution functions&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">hello</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;finished&quot;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#bash test.sh </span></span><br><span class="line">program execution <span class="built_in">functions</span></span><br><span class="line">finished</span><br></pre></td></tr></table></figure><p>Example：简单的初始化脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">disable_selinux</span></span> ()&#123;</span><br><span class="line">sed -i.bak <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;SElinux has disabled!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">disable_firewalld</span></span> ()&#123;</span><br><span class="line">systemctl <span class="built_in">disable</span> --now firewalld &amp;&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Firewalld has disabled!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">set_PS1</span></span> ()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;PS1=\[\e[1;32m\][\u@\h \W]\\$\[\e[0m\]&quot;</span> &gt; /etc/profile.d/ps1.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Prompt has been modified!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PS3=<span class="string">&quot;Select the operation you want to perform(1-5): &quot;</span></span><br><span class="line">MENU=<span class="string">&#x27;禁用SELinux 关闭防火墙 修改提示符 以上都实现 退出&#x27;</span></span><br><span class="line"></span><br><span class="line">select M <span class="keyword">in</span> <span class="variable">$MENU</span>;<span class="keyword">do</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$REPLY</span> <span class="keyword">in</span></span><br><span class="line">1)</span><br><span class="line">disable_selinux</span><br><span class="line">;;</span><br><span class="line">2)</span><br><span class="line">disable_firewalld</span><br><span class="line">;;</span><br><span class="line">3)</span><br><span class="line">set_PS1</span><br><span class="line">;;</span><br><span class="line">4)</span><br><span class="line">disable_selinux</span><br><span class="line">disable_firewalld</span><br><span class="line">set_PS1</span><br><span class="line">;;</span><br><span class="line">5)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Please enter correct number!&quot;</span></span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="4-2-3-使用函数文件"><a href="#4-2-3-使用函数文件" class="headerlink" title="4.2.3 使用函数文件"></a>4.2.3 使用函数文件</h4><p>可以将经常使用的函数存入一个单独的函数文件，然后将函数文件载入shell，再进行调用函数</p><p>函数文件名可以任意选取，但最好与相关任务有某种联系</p><p>当函数文件载入shell，就可以再命令行或脚本中调用函数</p><p>若要改动函数，首先要unset命令从shell中删除函数，改动完毕后，再重新载入此文件</p><p>函数文件实现的过程：</p><p> （1）创建函数文件，只存放函数的定义</p><p> （2）在shell脚本或交互式shell中调用函数文件</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat functions </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">hello</span></span> ()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#. functions</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#hello</span></span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h3 id="4-3-函数返回值"><a href="#4-3-函数返回值" class="headerlink" title="4.3 函数返回值"></a>4.3 函数返回值</h3><p>函数的执行结果返回值：</p><ul><li>使用echo等命令进行输出</li><li>函数体中调用命令的输出结果</li></ul><p>函数的退出状态码：</p><ul><li>默认取决于函数中执行的最后一条命令的退出状态码</li><li>自定义退出状态码<ul><li>return                从函数中返回，用最后状态命令决定返回值</li><li>return 0             无错误返回</li><li>return 1-255      有错误返回</li></ul></li></ul><h3 id="4-4-环境函数"><a href="#4-4-环境函数" class="headerlink" title="4.4 环境函数"></a>4.4 环境函数</h3><p>类似于环境变量，也可以定义环境函数（子进程也可使用父进程定义的函数）</p><p>定义环境函数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> -f function_name</span><br><span class="line"><span class="built_in">declare</span> -xf function_name</span><br></pre></td></tr></table></figure><p>查看环境函数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> -f</span><br><span class="line"><span class="built_in">declare</span> -xf</span><br></pre></td></tr></table></figure><h3 id="4-5-函数参数"><a href="#4-5-函数参数" class="headerlink" title="4.5 函数参数"></a>4.5 函数参数</h3><p>函数可以接受参数</p><ul><li>传递参数给函数：在函数名后面以空白分隔给定参数列表即可，如：function_name arg1 arg2 …</li><li>在函数体中，可以使用$1, $2, … 调用这些参数；也可使用$@, $*, $#等特殊变量</li></ul><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印一个进度条</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">progress_bar</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> char=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> number=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">local</span> c</span><br><span class="line"><span class="keyword">for</span> ((c=<span class="number">0</span>; c&lt;number; c++)); <span class="keyword">do</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;<span class="variable">$char</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">COLOR=32</span><br><span class="line"><span class="comment"># 声明整数型变量end，赋值为50</span></span><br><span class="line"><span class="built_in">declare</span> -i end=50</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>; i&lt;=end; i++)); <span class="keyword">do</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\e[1;<span class="variable">$&#123;COLOR&#125;</span>m\e[80D[&quot;</span></span><br><span class="line">progress_bar <span class="string">&quot;#&quot;</span> <span class="variable">$i</span></span><br><span class="line">progress_bar <span class="string">&quot; &quot;</span> $[end-i]</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;] %3d%%\e[0m&quot;</span> $((i*<span class="number">2</span>))</span><br><span class="line"><span class="built_in">sleep</span> 0.1s</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="D:/Documents/TyporaPicture/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/image-20221031191515701.png" alt="image-20221031191515701"></p><h3 id="4-6-函数变量"><a href="#4-6-函数变量" class="headerlink" title="4.6 函数变量"></a>4.6 函数变量</h3><p>变量的作用域：</p><ul><li>普通变量：只在当前shell进程中有效</li><li>环境变量：当前shell和子shell有效</li><li>本地变量：函数的生命周期；函数结束时变量自动销毁</li></ul><p>注意：</p><ul><li>如果函数中定义了普通变量，且名称和局部变量相同，则使用本地变量</li><li>由于普通变量和局部变量会冲突，建议在函数只使用本地变量</li></ul><p>在函数中定义本地变量的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> NAME=VALUE</span><br></pre></td></tr></table></figure><h3 id="4-7-函数递归"><a href="#4-7-函数递归" class="headerlink" title="4.7 函数递归"></a>4.7 函数递归</h3><p>函数直接或间接调用自身称为函数的递归，注意递归层数，可能会陷入死循环</p><p>递归特点：</p><ul><li>函数内部自己调用自己</li><li>必须有结束函数的出口语句，防止死循环</li></ul><p>Example：给定一个整数参数，求它的阶乘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment">#cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">fact</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -eq 0 -o <span class="variable">$1</span> -eq 1 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> $[<span class="variable">$1</span>*$(fact $[<span class="variable">$1</span>-1])]</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line">fact <span class="variable">$1</span></span><br></pre></td></tr></table></figure><h3 id="练习-6"><a href="#练习-6" class="headerlink" title="练习"></a>练习</h3><p>1、编写函数，实现OS的版本判断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">os_version</span></span>() &#123;</span><br><span class="line">sed -nr <span class="string">&#x27;/PRETTY_NAME/s#.*&quot;(.*)&quot;#\1#p&#x27;</span> /etc/os-release</span><br><span class="line">&#125;</span><br><span class="line">os_version</span><br></pre></td></tr></table></figure><p>2、编写函数，实现取出当前系统eth0的IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">IPaddress</span></span>() &#123;</span><br><span class="line">ifconfig ens33 | awk <span class="string">&#x27;/\&lt;inet\&gt;/&#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">IPaddress</span><br></pre></td></tr></table></figure><p>3、编写函数，实现打印绿色OK和红色FAILED</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">Green_ok</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mOK\E[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">Red_failed</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;31mFAILED\E[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">Green_ok</span><br><span class="line">Red_failed</span><br></pre></td></tr></table></figure><p>4、编写函数，事先判断是否无位置参数，若没有，提示错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">Determine_positional_parameters</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;31mERROR! No positional parameters.\E[0m&quot;</span>;<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line">Determine_positional_parameters <span class="variable">$#</span></span><br></pre></td></tr></table></figure><p>5、编写函数，实现两个数字做参数，返回最大值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">Determine_positional_parameters</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -lt 2 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;31mERROR! Please input two positional parameters.\E[0m&quot;</span>;<span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">MAX</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -gt <span class="variable">$2</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MAX=<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MAX=<span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Determine_positional_parameters <span class="variable">$#</span></span><br><span class="line">MAX <span class="variable">$@</span></span><br></pre></td></tr></table></figure><p>6、编写服务脚本 ‘&#x2F;root&#x2F;bin&#x2F;testsrv.sh’，完成如下要求</p><p>（1）脚本可接收参数：start，stop，restart，status</p><p>（2）如果参数非四者之一，提示使用格式后报错退出</p><p>（3）如果是 start：则创建 &#x2F;var&#x2F;lock&#x2F;subsys&#x2F;SCRIPT_NAME，并显示“启动成功”</p><p>​ 考虑：如果事先已经启动过一次，该如何处理？</p><p>（4）如果是 stop：则删除 &#x2F;var&#x2F;lock&#x2F;subsys&#x2F;SCRIPT_NAME，并显示“停止完成”</p><p>​ 考虑：如果已经停止了，该如何处理？</p><p>（5）如果是restart，则先stop，在start</p><p>​ 考虑：如果本来没有start，如何处理？</p><p>（6）如果是 status，当 &#x2F;var&#x2F;lock&#x2F;subsys&#x2F;SCRIPT_NAME 文件存在，则显示 “SCRIPT_NAME is running …”；当 &#x2F;var&#x2F;lock&#x2F;subsys&#x2F;SCRIPT_NAME 文件不存在，则显示“SCRIPT_NAME is stopped …”</p><p>（7）在所有模式下禁止启动该服务，可用 chkconfig 和 service 命令管理</p><p>说明：SCRIPT_NAME 为当前脚本名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7、编写脚本 &#x2F;root&#x2F;bin&#x2F;copycmd.sh</p><p>（1）提示用户输入一个可执行命令名称<br>（2）获取此命令所依赖到的所有库文件列表<br>（3）复制命令至某目标目录(例如&#x2F;mnt&#x2F;sysroot)下的对应路径下</p><p>​          如：&#x2F;bin&#x2F;bash &#x3D;&#x3D;&gt; &#x2F;mnt&#x2F;sysroot&#x2F;bin&#x2F;bash</p><p>​                 &#x2F;usr&#x2F;bin&#x2F;passwd &#x3D;&#x3D;&gt; &#x2F;mnt&#x2F;sysroot&#x2F;usr&#x2F;bin&#x2F;passwd<br>（4）复制此命令依赖到的所有库文件至目标目录下的对应路径下： 如：&#x2F;lib64&#x2F;ld-linux-x86-64.so.2 &#x3D;&#x3D;&gt; &#x2F;mnt&#x2F;sysroot&#x2F;lib64&#x2F;ld-linux-x86-64.so.2</p><p>（5）每次复制完成一个命令后，不要退出，而是提示用户键入新的要复制的命令，并重复完成上述功能；直到用户输入quit退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8、斐波那契数列又称黄金分割数列，因数学家列昂纳多·斐波那契以兔子繁殖为例子而引入，所以又被称为“兔子数列”，指的是这样一个数列：0、1、1、2、3、5、8、13、21、34、……，斐波纳契数列以如下被以递归的方法定义：F（0）&#x3D;0，F（1）&#x3D;1，F（n）&#x3D;F(n-1)+F(n-2)（n≥2），利用函数，求n阶斐波那契数列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9、汉诺塔（又称河内塔）问题是源于印度一个古老传说。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘，利用函数，实现N片盘的汉诺塔的移动步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、其它脚本相关工具"><a href="#五、其它脚本相关工具" class="headerlink" title="五、其它脚本相关工具"></a>五、其它脚本相关工具</h2><h3 id="5-1-信号捕捉-trap"><a href="#5-1-信号捕捉-trap" class="headerlink" title="5.1 信号捕捉 trap"></a>5.1 信号捕捉 trap</h3><p>trap 命令可以捕捉信号，修改信号原来的功能，实现自定义功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># trap -l</span></span><br><span class="line"> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1</span><br><span class="line">11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM</span><br><span class="line">16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP</span><br><span class="line">21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR</span><br><span class="line">31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-164) SIGRTMAX</span><br></pre></td></tr></table></figure><p>常用操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## &#x27;信号&#x27;可写全称；也可不写前三个字母，写简称；或写数字法描述（例：SIGINT INT 2）</span></span><br><span class="line"><span class="comment"># 进程收到系统发出的指定信号后，将执行自定义指令，而不会执行原操作</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;触发指令&#x27;</span> 信号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略信号操作</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;&#x27;</span> 信号</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出自定义信号操作</span></span><br><span class="line"><span class="built_in">trap</span> -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当脚本退出时，执行finish函数</span></span><br><span class="line"><span class="built_in">trap</span> finish EXIT</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ctrl+c 即2信号: SIGINT; ctrl+\ 即3信号: SIGQUIT</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;echo &#x27;Press ctrl+c or ctrl+\&#x27;&quot;</span> int quit</span><br><span class="line"><span class="built_in">trap</span> -p</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;=<span class="number">10</span>;i++));<span class="keyword">do</span></span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;&#x27;</span> int</span><br><span class="line"><span class="built_in">trap</span> -p</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">11</span>;i&lt;=<span class="number">20</span>;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sleep</span> 1</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">trap</span> <span class="string">&#x27;-&#x27;</span> int</span><br><span class="line"><span class="built_in">trap</span> -p</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">21</span>;i&lt;=<span class="number">30</span>;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sleep</span> 1</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例：当脚本正常或异常退出时，会执行finish函数来确保一定会执行某些关键性的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">finish</span></span>() &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;finish_`date +%F_%T`&quot;</span> | <span class="built_in">tee</span> -a /root/finish.log</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">trap</span> finish <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> running</span><br><span class="line"><span class="built_in">sleep</span> 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="5-2-创建临时文件-mktemp"><a href="#5-2-创建临时文件-mktemp" class="headerlink" title="5.2 创建临时文件 mktemp"></a>5.2 创建临时文件 mktemp</h3><p>mktemp 命令用于创建并显示临时文件，避免文件冲突导致源文件被覆盖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mktemp</span> [OPTION]... [TEMPLATE]</span><br><span class="line"></span><br><span class="line">Note: </span><br><span class="line">TEMPLATE: filenameXXX, 至少三个X</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-d                      创建临时目录</span><br><span class="line">-p DIR 或 --tmpdir=DIR  指明临时文件所存放目录位置</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># mktemp </span></span><br><span class="line">/tmp/tmp.YTJUtsVWbC</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mktemp /tmp/testXXXXX</span></span><br><span class="line">/tmp/test4FWuR</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mktemp -d /tmp/testXXX</span></span><br><span class="line">/tmp/testz2i</span><br></pre></td></tr></table></figure><p>示例：实现文件垃圾箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DIR=`<span class="built_in">mktemp</span> -d /tmp/trash-$(<span class="built_in">date</span> +%F_%H)XXXXX`</span><br><span class="line"><span class="built_in">mv</span> $* <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">echo</span> $* is move to <span class="variable">$DIR</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># alias rm=/root/test.sh</span></span><br></pre></td></tr></table></figure><h3 id="5-3-安装复制文件-install"><a href="#5-3-安装复制文件-install" class="headerlink" title="5.3 安装复制文件 install"></a>5.3 安装复制文件 install</h3><p>install 功能相当于cp, chmod, chown, chgrp, mkdir 等相关工具的集合</p><p>选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-m MODE, 默认755</span><br><span class="line">-o OWNER</span><br><span class="line">-g GROUP</span><br><span class="line">-d DIRNAME 目录</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># install -m 700 -o wh -g wh /etc/issue /tmp/issue</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ll /tmp/issue </span></span><br><span class="line">-rwx------ 1 wh wh 23 Nov  5 09:23 /tmp/issue</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># install -m 700 -o wh -g wh -d /tmp/testdir</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ll -d /tmp/testdir/</span></span><br><span class="line">drwx------ 2 wh wh 6 Nov  5 09:24 /tmp/testdir/</span><br></pre></td></tr></table></figure><h3 id="5-4-交互式转化批处理工具-expect"><a href="#5-4-交互式转化批处理工具-expect" class="headerlink" title="5.4 交互式转化批处理工具 expect"></a>5.4 交互式转化批处理工具 expect</h3><p>expect 主要应用于自动化交互式操作的场景，通过expect处理交互的命令，可以将交互过程，如 ssh 登录，ftp 登录等写在脚本上，使之自动化完成。</p><p>示例：安装 expect 及 mkpasswd 工具使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># dnf -y install expect</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># rpm -ql expect | head</span></span><br><span class="line">/usr/bin/autoexpect</span><br><span class="line">/usr/bin/dislocate</span><br><span class="line">/usr/bin/expect</span><br><span class="line">/usr/bin/ftp-rfc</span><br><span class="line">/usr/bin/kibitz</span><br><span class="line">/usr/bin/lpunlock</span><br><span class="line">/usr/bin/mkpasswd</span><br><span class="line">/usr/bin/passmass</span><br><span class="line">/usr/bin/rftp</span><br><span class="line">/usr/bin/rlogin-cwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># -l 指定密码的长度 -d 指定生成的密码中数字出现的次数 -C 指定大写字母出现的次数</span></span><br><span class="line"><span class="comment"># 其余可参看 man mkpasswd</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mkpasswd -l 15 -d 3 -C 5</span></span><br><span class="line">cT<span class="variable">$jf76y1GGCAfu</span></span><br></pre></td></tr></table></figure><p>expect 相关命令</p><ul><li>spawn                 启动新进程</li><li>expect                 从进程接收字符串</li><li>send                    用于向进程发送字符串</li><li>interact                允许用户交互</li><li>exp_continue      匹配多个字符串</li></ul><p>单一分支模式语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># expect</span></span><br><span class="line">expect1.1&gt; expect <span class="string">&quot;Tom&quot;</span> &#123;send <span class="string">&quot;I am Jerry!&quot;</span>&#125;</span><br><span class="line">hi,Tom</span><br><span class="line">I am Jerry!</span><br></pre></td></tr></table></figure><p>多分支语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># expect</span></span><br><span class="line">expect1.1&gt; expect <span class="string">&quot;hi&quot;</span> &#123;send <span class="string">&quot;hi\n&quot;</span>&#125; <span class="string">&quot;hello&quot;</span> &#123;send <span class="string">&quot;hello\n&quot;</span>&#125;</span><br><span class="line">hihellohihello</span><br><span class="line">hi</span><br><span class="line">expect1.2&gt; expect <span class="string">&quot;hi&quot;</span> &#123;send <span class="string">&quot;hi\n&quot;</span>&#125; <span class="string">&quot;hello&quot;</span> &#123;send <span class="string">&quot;hello\n&quot;</span>&#125;</span><br><span class="line">hlhello</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>示例1：非交互式复制文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line">spawn scp /etc/os-release 192.168.119.166:/data</span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\n&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password&quot;</span> &#123; send <span class="string">&quot;wuhaolam\n&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><p>示例2：自动登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/expect</span></span><br><span class="line">spawn ssh 192.168.119.166</span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\n&quot;</span>;exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password&quot;</span> &#123; send <span class="string">&quot;wuhaolam\n&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>示例3：expect 变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat expect </span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> ip 192.168.119.166</span><br><span class="line"><span class="built_in">set</span> user root</span><br><span class="line"><span class="built_in">set</span> password wuhaolam</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">timeout</span> 10</span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\n&quot;</span>; exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$password</span>\n&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>示例4：expect 位置参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat expect </span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\n&quot;</span>; exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$password</span>\n&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ./expect root 192.168.119.166 wuhaolam</span></span><br></pre></td></tr></table></figure><p>示例5：expect 执行多个命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat expect </span></span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> user [lindex <span class="variable">$argv</span> 0]</span><br><span class="line"><span class="built_in">set</span> ip [lindex <span class="variable">$argv</span> 1]</span><br><span class="line"><span class="built_in">set</span> password [lindex <span class="variable">$argv</span> 2]</span><br><span class="line"></span><br><span class="line">spawn ssh <span class="variable">$user</span>@<span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\n&quot;</span>; exp_continue &#125;</span><br><span class="line"><span class="string">&quot;password&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$password</span>\n&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;useradd Tom\n&quot;</span> &#125;</span><br><span class="line">expect <span class="string">&quot;]#&quot;</span> &#123; send <span class="string">&quot;id Tom\n&quot;</span> &#125;</span><br><span class="line">send <span class="string">&quot;exit\n&quot;</span></span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><p>示例6：shell 脚本调用 expect</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">user=<span class="variable">$1</span></span><br><span class="line">ip=<span class="variable">$2</span></span><br><span class="line">password=<span class="variable">$3</span></span><br><span class="line">expect &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">spawn ssh $user@$ip</span></span><br><span class="line"><span class="string">expect &#123;</span></span><br><span class="line"><span class="string">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;; exp_continue &#125;</span></span><br><span class="line"><span class="string">&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">expect &quot;]#&quot; &#123; send &quot;userdel -r Tom\n&quot; &#125;</span></span><br><span class="line"><span class="string">expect &quot;]#&quot; &#123; send &quot;id Tom\n&quot; &#125;</span></span><br><span class="line"><span class="string">expect &quot;]#&quot; &#123; send &quot;exit\n&quot; &#125;</span></span><br><span class="line"><span class="string">expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><h2 id="六、数组-array"><a href="#六、数组-array" class="headerlink" title="六、数组 array"></a>六、数组 array</h2><h3 id="6-1-数据介绍"><a href="#6-1-数据介绍" class="headerlink" title="6.1 数据介绍"></a>6.1 数据介绍</h3><p>变量：存储单个元素的内存空间</p><p>数组：存储多个元素的连续的内存空间，相当于多个变量的集合</p><p>数组名和索引</p><ul><li>索引的编号从0开始，属于数值索引</li><li>索引可支持使用自定义的格式，而不仅是数值的格式，即为<strong>关联索引</strong>，bash4.0之后支持</li><li>bash 的数组支持稀疏格式（索引不连续）</li></ul><h3 id="6-2-声明数组"><a href="#6-2-声明数组" class="headerlink" title="6.2 声明数组"></a>6.2 声明数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通数组可不用事先声明，直接使用</span></span><br><span class="line"><span class="built_in">declare</span> -a ARRAY_NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关联数组必须实现声明再使用</span></span><br><span class="line"><span class="built_in">declare</span> -A ARRAY_NAME</span><br><span class="line"></span><br><span class="line">注：普通数组和关联数组不可相互转换</span><br></pre></td></tr></table></figure><h3 id="6-3-数组赋值"><a href="#6-3-数组赋值" class="headerlink" title="6.3 数组赋值"></a>6.3 数组赋值</h3><p>1、一次只赋值一个元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME[INDEX]=VALUE</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># name[0]=Tom</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># name[1]=Jerry</span></span><br></pre></td></tr></table></figure><p>2、一次性赋值全部元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME=(<span class="string">&quot;VAL1&quot;</span> <span class="string">&quot;VAL2&quot;</span> <span class="string">&quot;VAL3&quot;</span> ...)</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># name=(&quot;Tom&quot; &quot;Jerry&quot; &quot;Snoopy&quot;)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># nums=(&#123;0..10&#125;)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># file=( *.sh )</span></span><br></pre></td></tr></table></figure><p>3、只赋值特定元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME=([0]=<span class="string">&quot;VAL1&quot;</span> [2]=<span class="string">&quot;VAL2&quot;</span> ...)</span><br></pre></td></tr></table></figure><p>4、交互式赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> -a ARRAY</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># read -a names</span></span><br><span class="line">wang wu zhou zheng</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;names[*]&#125;</span></span><br><span class="line">wang wu zhou zheng</span><br></pre></td></tr></table></figure><h3 id="6-4-显示所有数组"><a href="#6-4-显示所有数组" class="headerlink" title="6.4 显示所有数组"></a>6.4 显示所有数组</h3><p>显示所有数组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -a</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># declare -a</span></span><br><span class="line"><span class="built_in">declare</span> -a BASH_ARGC=()</span><br><span class="line"><span class="built_in">declare</span> -a BASH_ARGV=()</span><br><span class="line"><span class="built_in">declare</span> -a BASH_COMPLETION_VERSINFO=([0]=<span class="string">&quot;2&quot;</span> [1]=<span class="string">&quot;7&quot;</span>)</span><br><span class="line"><span class="built_in">declare</span> -a BASH_LINENO=()</span><br><span class="line"><span class="built_in">declare</span> -a BASH_SOURCE=()</span><br><span class="line"><span class="built_in">declare</span> -ar BASH_VERSINFO=([0]=<span class="string">&quot;4&quot;</span> [1]=<span class="string">&quot;4&quot;</span> [2]=<span class="string">&quot;20&quot;</span> [3]=<span class="string">&quot;1&quot;</span> [4]=<span class="string">&quot;release&quot;</span> [5]=<span class="string">&quot;x86_64-redhat-linux-gnu&quot;</span>)</span><br><span class="line"><span class="built_in">declare</span> -a DIRSTACK=()</span><br><span class="line"><span class="built_in">declare</span> -a FUNCNAME</span><br><span class="line"><span class="built_in">declare</span> -a GROUPS=()</span><br><span class="line"><span class="built_in">declare</span> -a PIPESTATUS=([0]=<span class="string">&quot;2&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="6-5-引用数组"><a href="#6-5-引用数组" class="headerlink" title="6.5 引用数组"></a>6.5 引用数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;ARRAY_NAME[INDEX]&#125;</span></span><br><span class="line"><span class="comment"># 如果省略[INDEX],表示引用下标为0的元素</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># name=(&quot;Tom&quot; &quot;Jerry&quot; &quot;Snoopy&quot;)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name&#125;</span></span><br><span class="line">Tom</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[1]&#125;</span></span><br><span class="line">Jerry</span><br></pre></td></tr></table></figure><p>引用数组中所有元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;ARRAY_NAME[*]&#125;</span></span><br><span class="line"><span class="variable">$&#123;ARRAY_NAME[@]&#125;</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[*]&#125;</span></span><br><span class="line">Tom Jerry Snoopy</span><br></pre></td></tr></table></figure><p>数组的长度，即数组中所有元素的个数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;#ARRAY_NAME[*]&#125;</span></span><br><span class="line"><span class="variable">$&#123;#ARRAY_NAME[@]&#125;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;#name[*]&#125;</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="6-6-删除数组"><a href="#6-6-删除数组" class="headerlink" title="6.6 删除数组"></a>6.6 删除数组</h3><p>删除数组中某个元素时，会导致稀疏格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> ARRAY[INDEX]</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unset name[1]</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[*]&#125;</span></span><br><span class="line">Tom Snoopy</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[1]&#125;</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[2]&#125;</span></span><br><span class="line">Snoopy</span><br></pre></td></tr></table></figure><p>删除整个数组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># unset name</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;name[*]&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-7-数组数据处理"><a href="#6-7-数组数据处理" class="headerlink" title="6.7 数组数据处理"></a>6.7 数组数据处理</h3><p>数组切片</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;ARRAY[@]:offset:number&#125;</span></span><br><span class="line">offset    <span class="comment"># 要跳过的元素个数</span></span><br><span class="line">number    <span class="comment"># 要取出的元素个数</span></span><br><span class="line"><span class="variable">$&#123;ARRAY[@]:offset&#125;</span> 取偏移量之后的所有元素</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># nums=(&#123;1..10&#125;)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;nums[*]:2:3&#125;</span></span><br><span class="line">3 4 5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;nums[*]:2&#125;</span></span><br><span class="line">3 4 5 6 7 8 9 10</span><br></pre></td></tr></table></figure><p>向数组中追加元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ARRAY[<span class="variable">$&#123;#ARRAY[*]&#125;</span>]=value</span><br><span class="line">ARRAY[<span class="variable">$&#123;#ARRAY[@]&#125;</span>]=value</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;nums[*]&#125;</span></span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># nums[$&#123;#nums[*]&#125;]=11</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;nums[*]&#125;</span></span><br><span class="line">1 2 3 4 5 6 7 8 9 10 11</span><br></pre></td></tr></table></figure><h3 id="6-8-关联数组"><a href="#6-8-关联数组" class="headerlink" title="6.8 关联数组"></a>6.8 关联数组</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -A ARRAY_NAME</span><br><span class="line">ARRAY_NAME=([idex1]=<span class="string">&#x27;val1&#x27;</span> [idex2]=<span class="string">&#x27;val2&#x27;</span>...)</span><br><span class="line"><span class="comment"># 关联数组必须先声明再调用</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unset names</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># declare -A names</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># names[one]=Tom</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># names[two]=Jerry</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;names[one]&#125;</span></span><br><span class="line">Tom</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;names[two]&#125;</span></span><br><span class="line">Jerry</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $&#123;names[*]&#125;</span></span><br><span class="line">Jerry Tom</span><br></pre></td></tr></table></figure><h3 id="6-9-示例"><a href="#6-9-示例" class="headerlink" title="6.9 示例"></a>6.9 示例</h3><p>Example1：生成10个随机数保存于数组中，并找出最大值和最小值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">declare</span> -i MIN MAX</span><br><span class="line"><span class="built_in">declare</span> -a nums</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  nums[<span class="variable">$i</span>]=<span class="variable">$RANDOM</span></span><br><span class="line">  [ <span class="variable">$i</span> -eq 0 ] &amp;&amp; MIN=<span class="variable">$&#123;nums[0]&#125;</span> &amp;&amp; MAX=<span class="variable">$&#123;nums[0]&#125;</span> &amp;&amp; <span class="built_in">continue</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;39mAll numbers: <span class="variable">$&#123;nums[*]&#125;</span>\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;nums[$i]&#125;</span> -gt <span class="variable">$MAX</span>  ];<span class="keyword">then</span></span><br><span class="line">    MAX=<span class="variable">$&#123;nums[$i]&#125;</span></span><br><span class="line">  <span class="keyword">elif</span> [ <span class="variable">$&#123;nums[$i]&#125;</span> -lt <span class="variable">$MIN</span> ];<span class="keyword">then</span></span><br><span class="line">    MIN=<span class="variable">$&#123;nums[$i]&#125;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;The MAX value: \E[1;32m<span class="variable">$MAX</span>\E[0m\nThe MIN value: \E[1;32m<span class="variable">$MIN</span>\E[0m&quot;</span></span><br></pre></td></tr></table></figure><p>Example2：编写脚本，定义一个数组，数组中的元素对应的值是&#x2F;var&#x2F;log目录下所有以.log结尾的文件；统计出其下标为偶数的文件中的行数之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="七、字符串处理"><a href="#七、字符串处理" class="headerlink" title="七、字符串处理"></a>七、字符串处理</h2><h2 id="八、高级变量"><a href="#八、高级变量" class="headerlink" title="八、高级变量"></a>八、高级变量</h2>]]></content>
      
      
      <categories>
          
          <category> Shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本处理三剑客</title>
      <link href="/archives/8b87eef8.html"/>
      <url>/archives/8b87eef8.html</url>
      
        <content type="html"><![CDATA[<h1 id="文本处理三剑客之-GREP"><a href="#文本处理三剑客之-GREP" class="headerlink" title="文本处理三剑客之 GREP"></a>文本处理三剑客之 GREP</h1><h2 id="一、grep"><a href="#一、grep" class="headerlink" title="一、grep"></a>一、grep</h2><p>grep：</p><p>​作用：文本搜索工具，根据指定的“模式”来对需要处理的文本逐行进行检查，打印匹配到的行</p><p>​模式：由正则表达式及字符构成的搜索条件</p><p>​格式：<code>grep [OPTION]PATTERN[FILE...]</code></p><p><strong>常见选项</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-color=auto    对匹配到的文本进行着色显示，默认</span><br><span class="line">-m <span class="comment">#           匹配#次后停止</span></span><br><span class="line">-v             显示没有被pattern匹配到的行，即取反</span><br><span class="line">-i             忽略字符大小写</span><br><span class="line">-n             显示匹配的行号</span><br><span class="line">-c             统计匹配的行数</span><br><span class="line">-o             仅显示匹配到的字符串</span><br><span class="line">-q             静默模式，不输出任何信息</span><br><span class="line">-A <span class="comment">#           after，后#行</span></span><br><span class="line">-B <span class="comment">#           before，前#行</span></span><br><span class="line">-C <span class="comment">#           context，前后各#行</span></span><br><span class="line">-e             实现多个选项间的逻辑or关系，如grep –e <span class="string">&#x27;cat&#x27;</span> -e <span class="string">&#x27;dog&#x27;</span> file</span><br><span class="line">-w             匹配整个单词</span><br><span class="line">-E             使用扩展的正则表达式，相当于egrep</span><br><span class="line">-F             不支持正则表达式，相当于fgrep</span><br><span class="line">-f file        根据模式文件处理,将一个文件作为模式的条件</span><br><span class="line">-r             递归目录，但不处理软链接</span><br><span class="line">-R             递归目录，处理软链接</span><br></pre></td></tr></table></figure><h3 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h3><p><strong>（1）取两个文件相同的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将a.txt文件作为条件匹配b.txt文件中的内容</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">a</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">a</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -f a.txt b.txt </span></span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">a</span><br></pre></td></tr></table></figure><p><strong>（2）分区利用率最大的值</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &#x27;^/dev/sd&#x27; | tr -s &#x27; &#x27; | cut -d&#x27; &#x27; -f5 | sort -n | tail -1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &#x27;^/dev/sd&#x27; | grep -o &#x27;\&lt;[0-9]\&#123;,3\&#125;%&#x27; | sort -nr | head -n1</span></span><br></pre></td></tr></table></figure><p><strong>（3）连接当前主机最多的前3个IP及连接数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &#x27;^ESTAB&#x27; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr | head -n3</span></span><br></pre></td></tr></table></figure><p><strong>（4）统计当前连接状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nta | grep -v &#x27;^State&#x27; | cut -d&quot; &quot; -f1 | sort | uniq -c</span></span><br></pre></td></tr></table></figure><p><strong>（5）显示 &#x2F;etc&#x2F;profile 文件中非#开头及空白行的内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &quot;^#&quot; /etc/profile | grep -v &#x27;^$&#x27;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v -e &quot;^#&quot; -e &quot;^$&quot; /etc/profile</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &#x27;^#\|^$&#x27; /etc/profile</span></span><br></pre></td></tr></table></figure><p><strong>（6）显示IP地址相关信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig | grep -E &#x27;([0-9]&#123;1,3&#125;.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（7）算出所有人的年龄总和</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat age.txt </span></span><br><span class="line">xiaoming:20</span><br><span class="line">xiaohong:18</span><br><span class="line">xiaoqiang:22</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cut -d: -f2 age.txt | tr &#x27;\n&#x27; + | grep -Eo &quot;.*[0-9]&quot; | bc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -Eo &#x27;[0-9]+&#x27; age.txt | tr &#x27;\n&#x27; + | grep -Eo &quot;.*[0-9]&quot; | bc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -Eo &#x27;[0-9]+&#x27; age.txt | paste -s -d+ | bc</span></span><br></pre></td></tr></table></figure><p><strong>（8）其它选项示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -w root /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &#x27;\&lt;root\&gt;&#x27; /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -E &quot;^(.*)\&gt;.*\&lt;\1$&quot; /etc/passwd</span></span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br></pre></td></tr></table></figure><hr><h1 id="文本处理三剑客之-SED"><a href="#文本处理三剑客之-SED" class="headerlink" title="文本处理三剑客之 SED"></a>文本处理三剑客之 SED</h1><h2 id="一、sed"><a href="#一、sed" class="headerlink" title="一、sed"></a>一、sed</h2><h3 id="1-1-sed-工作原理"><a href="#1-1-sed-工作原理" class="headerlink" title="1.1 sed 工作原理"></a>1.1 sed 工作原理</h3><p>​当sed处理某个文件时，首先读取该文件的第一行进入到模式空间中，然后使用sed命令处理该模式空间中的内容，处理完成后，将模式空间中的内容输出到屏幕，接着处理下一行，直至文件末尾。</p><p>​sed命令默认执行的是p操作，即打印操作，当没有指定特定的操作时，直接将该内容输出至屏幕；如果模式空间中执行了打印操作，那么该行内容就会被打印输出至屏幕，模式空间中的内容默认打印至屏幕，这是该行内容在屏幕上就会出现两次。</p><h3 id="1-2-sed基本用法"><a href="#1-2-sed基本用法" class="headerlink" title="1.2 sed基本用法"></a>1.2 sed基本用法</h3><p><strong>SYNOPSIS</strong><br>       <code>sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]...</code></p><p><strong>常用选项：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-n        不输出模式空间中的内容至屏幕，即不自动打印</span><br><span class="line">-e        多点编辑</span><br><span class="line">-f FILE   从指定的文件中读取编辑脚本</span><br><span class="line">-r,-E     使用扩展的正则表达式</span><br><span class="line">-i.bak    备份文件并原处编辑</span><br><span class="line">-s        将多个文件视为独立文件</span><br></pre></td></tr></table></figure><p><strong>script 格式：地址+命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 地址格式</span></span><br><span class="line">1. 没有给地址范围，默认对全文做处理</span><br><span class="line">2. 单个地址</span><br><span class="line">   <span class="comment">#：指定第#行</span></span><br><span class="line">   $：最后一行</span><br><span class="line">   /pattern/：被模式匹配到的每一行</span><br><span class="line">3. 地址范围</span><br><span class="line">   <span class="comment">#,#                从第#行到第#行</span></span><br><span class="line">   <span class="comment">#,+#               如3,+4;从第3行到第7行</span></span><br><span class="line">   /pat1/,/pat2/      从被pat1模式匹配到的行到被pat2模式匹配到的行</span><br><span class="line">   <span class="comment">#,/pat/</span></span><br><span class="line">   /pat/,<span class="comment">#</span></span><br><span class="line">4. 步进 ~</span><br><span class="line">   1~2    奇数行</span><br><span class="line">   2~2    偶数行</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 命令</span></span><br><span class="line">p                    打印当前模式空间中的内容，追加到默认输出之后</span><br><span class="line">Ip                   忽略大小写输出</span><br><span class="line">d                    删除模式空间中匹配到的行，并读取下一行内容进行处理</span><br><span class="line">a [\]text            在指定行后面追加文本，支持使用\n实现多行追加</span><br><span class="line">i [\]text            在行前面插入文本</span><br><span class="line">c [\]text            替换行为单行或多行文本</span><br><span class="line">w file               保存模式匹配到的行到指定文件</span><br><span class="line">r file               读取指定文件的文本至模式空间中匹配到的行后</span><br><span class="line">=                    为模式空间中的行打印行号</span><br><span class="line">!                    模式空间中匹配行取反处理</span><br><span class="line">q                    退出sed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找替换</span></span><br><span class="line">s/pattern/string/修饰符            分隔符可以是s@@@或s<span class="comment">###</span></span><br><span class="line">替换时可用修饰符：</span><br><span class="line">  g    行内全局替换</span><br><span class="line">  p    显示替换成功的行</span><br><span class="line">  w /PATH/FILE    将替换成功的行保存至文件中</span><br><span class="line">  I,i  忽略大小写</span><br></pre></td></tr></table></figure><h4 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;&#x27; /etc/issue</span></span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;p&#x27; /etc/issue</span></span><br><span class="line">\S</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | sed -n &#x27;2p&#x27;</span></span><br><span class="line">        inet 192.168.119.128  netmask 255.255.255.0  broadcast 192.168.119.255</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | sed -n &#x27;/netmask/p&#x27;</span></span><br><span class="line">        inet 192.168.119.128  netmask 255.255.255.0  broadcast 192.168.119.255</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -n &#x27;$p&#x27; /etc/passwd</span></span><br><span class="line">saslauth:x:994:76:Saslauthd user:/run/saslauthd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | sed -n &#x27;/^\/dev\/sd/p&#x27;</span></span><br><span class="line">/dev/sda1             1038336  216624    821712  21% /boot</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq 10 | sed -n &#x27;1,2p&#x27;</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line"><span class="comment"># seq.log 文件中有1~5行数</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -e &#x27;2d&#x27; -e &#x27;5d&#x27; seq.log </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示非注释行和空行</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;/^#/d;/^$/d&#x27; /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时编辑seq.log文件，并备份原来的文件</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat seq.log</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -i.bak &#x27;2d;3d&#x27; seq.log</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat seq.log;cat seq.log.bak </span></span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/etc/fstab文件中所有非#开头的行</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -n &#x27;/^#/!p&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><h4 id="范例-1"><a href="#范例-1" class="headerlink" title="范例"></a>范例</h4><p><strong>（1）修改网卡名为eth0，并使其生效</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># sed -Ei.bak &#x27;/^GRUB_CMDLINE_LINUX/s/(.*)(&quot;)$/\1 net.ifnames=0\2/&#x27; /etc/default/grub</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><p><strong>（2）取IP地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | sed -nr &#x27;2s/[^0-9]+([0-9.]+).*/\1/p&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（3）取基名和目录名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取基名</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;/etc/sysconfig/network-scripts/&quot; | sed -r &#x27;s@(^/.*/)([^/]+/?)@\2@&#x27;</span></span><br><span class="line"><span class="comment"># 取目录名</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;/etc/sysconfig/network-scripts/&quot; | sed -r &#x27;s@(^/.*/)([^/]+/?)@\1@&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（4）取文件的前缀和后缀</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg</span><br><span class="line"><span class="comment"># 取前缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ls | sed -En &#x27;s/(.*)\.([^.]+)/\1/p&#x27;</span></span><br><span class="line"><span class="comment"># 取后缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ls | sed -En &#x27;s/(.*)\.([^.]+)/\2/p&#x27;</span></span><br><span class="line"><span class="comment"># 同理，当想取更多的后缀时</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo a.b.c.tar.gz | sed -nr &#x27;s@.*\.([^.]+)\.([^.]+)@\1.\2@p&#x27;</span></span><br><span class="line">tar.gz</span><br></pre></td></tr></table></figure><p><strong>（5）将非#开头的行加#</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &quot;&amp;&quot;表示引用前面匹配到的所有内容</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -nr &#x27;s/^[^#]/#&amp;/p&#x27; /etc/fstab</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -nr &#x27;s/^[^#](.*)/#\1/p&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><p><strong>（6）取分区利用率</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># df | sed -nr &#x27;/^\/dev\/sd/s@ .* ([0-9]+)%.*@ \1@p&#x27;</span></span><br><span class="line">/dev/sda1 15</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sdc1 56</span><br><span class="line"><span class="comment"># 空格之前的内容默认会被打印出来</span></span><br></pre></td></tr></table></figure><p><strong>（7）查看配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># 删除空行和以#开头的行</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -r &#x27;/^(#|$)/d&#x27; /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># 将行首后添加多个空白符之后有#的行也删除</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed  -e &#x27;/^$/d&#x27; -e &#x27;/^[[:space:]]*#/d&#x27; /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><p><strong>（8）引用变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo | sed &quot;s/^/$RANDOM/&quot;</span></span><br><span class="line">29428</span><br></pre></td></tr></table></figure><hr><h1 id="文本处理三剑客之-AWK"><a href="#文本处理三剑客之-AWK" class="headerlink" title="文本处理三剑客之 AWK"></a>文本处理三剑客之 AWK</h1><h2 id="一、AWK"><a href="#一、AWK" class="headerlink" title="一、AWK"></a>一、AWK</h2><h3 id="1-1-AWK-简介及基本用法"><a href="#1-1-AWK-简介及基本用法" class="headerlink" title="1.1 AWK 简介及基本用法"></a>1.1 AWK 简介及基本用法</h3><p>gawk - pattern scanning and processing language</p><ul><li>文本处理</li><li>输出格式化的文本报表</li><li>执行算术运算</li><li>执行字符串操作</li></ul><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">awk [options] <span class="string">&#x27;program&#x27;</span> var=value file...</span><br><span class="line">awk [options] -f programfile var=value file...</span><br><span class="line"></span><br><span class="line">program 通常放在单引号中，通常由三种部分组成</span><br><span class="line"> - BEGIN 语句块</span><br><span class="line"> - 模式匹配的通用语句块</span><br><span class="line"> - END 语句块</span><br><span class="line"></span><br><span class="line">常见选项:</span><br><span class="line"> - -F<span class="string">&quot;分隔符&quot;</span> 指明输入时用到的字段分隔符，默认的分隔符是若干个连续空白符</span><br><span class="line"> - -v var=value 变量赋值</span><br><span class="line"> </span><br><span class="line">program 格式:</span><br><span class="line">pattern&#123;action statements;...&#125;</span><br><span class="line">pattern: 决定动作语句何时触发及触发事件，如：BEGIN、END、正则表达式等</span><br><span class="line">action statements：对数据进行处理，放在&#123;&#125;内指明，常见<span class="built_in">print</span>、<span class="built_in">printf</span></span><br></pre></td></tr></table></figure><p><strong>awk 工作过程</strong></p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220919232411154.png" alt="image-20220919232411154" style="zoom:80%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、通过关键字BEGIN执行BEGIN块的内容，即BEGIN后花括号&#123;&#125;的内容</span><br><span class="line"><span class="number">2</span>、完成BEGIN块的执行，开始执行body块</span><br><span class="line"><span class="number">3</span>、读入有\n换行符分割的记录</span><br><span class="line"><span class="number">4</span>、将每个记录按指定的域分隔符划分域，填充域，$<span class="number">0</span>表示所有域（即该行所有内容），$<span class="number">1</span>表示第一个域，$n表示第n个域</span><br><span class="line"><span class="number">5</span>、依次执行各body块，pattern部分表示匹配到该行内容后才会执行awk-command的内容</span><br><span class="line"><span class="number">6</span>、循环读取每一行直至结束，完成body块执行</span><br><span class="line"><span class="number">7</span>、执行END块语句，输出最终结果</span><br></pre></td></tr></table></figure><p><strong>分隔符、域和记录</strong></p><ul><li>由分隔符将字段分隔形成的各项成为域，标记$1，$2，$3…$n称为域标识，$0为所有域</li><li>文件的每一行称为记录</li><li>如果省略action，默认执行print $0 的操作</li></ul><p><strong>常用的action分类</strong></p><ul><li>output statements：print，printf</li><li>Expressions：算术，比较表达式等</li><li>Compound statements</li><li>Control statements</li><li>input statements</li></ul><p><strong>awk控制语句</strong></p><ul><li>{ statements;··· } 组合语句</li><li>if 语句</li><li>while 语句</li><li>do ··· while 语句</li><li>for 语句</li><li>break、continue、exit</li></ul><h3 id="1-2-动作-print"><a href="#1-2-动作-print" class="headerlink" title="1.2 动作 print"></a>1.2 动作 print</h3><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> item1,item2,···</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>逗号分隔符</li><li>输出item可以是字符串、数值、当前记录的字段、变量或awk的表达式</li><li>如果省略item，则默认print $0</li><li>固定字符使用“ ”引起来，变量和字符不需要</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># seq 1 | awk &#x27;&#123;print &quot;hello,awk!&quot;&#125;&#x27;</span></span><br><span class="line">hello,awk!</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print $1,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print $1&quot;\t&quot;$3&#125;&#x27; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>Example1：取出网站访问量最大的前3个IP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat nginx.access.log-20200428 | head -5</span></span><br><span class="line">58.87.87.99 - - [27/Apr/2020:03:10:51 +0800] <span class="string">&quot;POST /wp-cron.php?doing_wp_cron=1587928251.0032949447631835937500 HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">61.131.3.225 - - [27/Apr/2020:03:10:51 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:52 +0800] <span class="string">&quot;GET /wp-login.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:53 +0800] <span class="string">&quot;POST /wp-login.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:54 +0800] <span class="string">&quot;POST /xmlrpc.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print $1&#125;&#x27; nginx.access.log-20200428 | sort | uniq -c | sort -nr | head -n 3</span></span><br><span class="line">   5498 122.51.38.20</span><br><span class="line">   2161 117.157.173.214</span><br><span class="line">    953 211.159.177.120</span><br></pre></td></tr></table></figure><p><strong>Example2：取出分区利用率</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分隔符支持使用扩展的正则表达式</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># df | grep &quot;^/dev/sd&quot; | awk -F&quot;[[:space:]]+|%&quot; &#x27;&#123;print $1,$5&#125;&#x27;</span></span><br><span class="line">/dev/sdc1 56</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sda1 15</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># df |  awk -F&quot;[[:space:]]+|%&quot; &#x27;/^\/dev\/sd/&#123;print $1,$5&#125;&#x27;</span></span><br><span class="line">/dev/sdc1 56</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sda1 15</span><br></pre></td></tr></table></figure><p><strong>Example3：取Nginx的访问日志中的IP和时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -F&#x27;[[ ]&#x27; &#x27;&#123;print $1,$5&#125;&#x27; nginx.access.log-20200428 | head -3</span></span><br><span class="line">58.87.87.99 27/Apr/2020:03:10:51</span><br><span class="line">61.131.3.225 27/Apr/2020:03:10:51</span><br><span class="line">157.245.106.153 27/Apr/2020:03:10:52</span><br></pre></td></tr></table></figure><p><strong>Example4：取 ifconfig 输出结果中的地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print $2&#125;&#x27;</span></span><br><span class="line">192.168.119.165</span><br><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | sed -nr &#x27;2s/^[^0-9]+([0-9.]+) .*$/\1/p&#x27;</span></span><br><span class="line">192.168.119.165</span><br></pre></td></tr></table></figure><p><strong>Example5：参考主机文件host.log格式，提取“.wuhaolam.top”前面主机名部分并写入到该文件中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat host.log </span></span><br><span class="line">1 www.wuhaolam.top</span><br><span class="line">2 blog.wuhaolam.top</span><br><span class="line">3 study.wuhaolam.top</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&#x27;[ .]&#x27; &#x27;&#123;print $2&#125;&#x27; host.log &gt;&gt; host.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat host.log</span></span><br><span class="line">1 www.wuhaolam.top</span><br><span class="line">2 blog.wuhaolam.top</span><br><span class="line">3 study.wuhaolam.top</span><br><span class="line">www</span><br><span class="line">blog</span><br><span class="line">study</span><br></pre></td></tr></table></figure><h3 id="1-3-awk-变量"><a href="#1-3-awk-变量" class="headerlink" title="1.3 awk 变量"></a>1.3 awk 变量</h3><h4 id="1-3-1-awk常见的内置变量"><a href="#1-3-1-awk常见的内置变量" class="headerlink" title="1.3.1 awk常见的内置变量"></a>1.3.1 awk常见的内置变量</h4><ul><li>FS：输入字段分隔符，默认为空白字符，相当于 -F</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用FS指定，可以当作变量在输出时当作分隔符</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; &#x27;&#123;print $1,FS,$3&#125;&#x27; /etc/passwd | head -3</span></span><br><span class="line">root : 0</span><br><span class="line">bin : 1</span><br><span class="line">daemon : 2</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&quot;:&quot; &#x27;&#123;print $1FS$3&#125;&#x27; /etc/passwd | head -n 3</span></span><br><span class="line">root:0</span><br><span class="line">bin:1</span><br><span class="line">daemon:2</span><br></pre></td></tr></table></figure><ul><li>OFS：输出字段分隔符，默认为空白字符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; &#x27;&#123;print $1,$3,$7&#125;&#x27; /etc/passwd  | head -n1 </span></span><br><span class="line">root 0 /bin/bash</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; -v OFS=&#x27;:&#x27; &#x27;&#123;print $1,$3,$7&#125;&#x27; /etc/passwd  | head -n1 </span></span><br><span class="line">root:0:/bin/bash</span><br></pre></td></tr></table></figure><ul><li>RS：输入记录record分隔符，以指定的符号作为一个新纪录的分割符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd</span></span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd | awk -v RS=&#x27; &#x27; &#x27;&#123;print&#125;&#x27;</span></span><br><span class="line">polkitd:x:999:998:User</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line">polkitd:/:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li>ORS：输出记录分隔符，输出时用指定符号代替换行符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd | awk -v RS=&#x27; &#x27; -v ORS=&#x27; &#x27; &#x27;&#123;print&#125;&#x27;</span></span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line"> [root@centos7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li>NF：字段个数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引用内置变量不需要使用$</span></span><br><span class="line"><span class="comment"># 将显示以:作为分隔符的每一个记录将会被分割成多少个域的数量</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print NF&#125;&#x27; /etc/fstab </span></span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Example1：连接数最多的前三个IP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat ss.log </span></span><br><span class="line">State      Recv-Q Send-Q        Local Address:Port          Peer Address:Port </span><br><span class="line">ESTAB      0      0            123.57.218.140:80           210.21.36.228:17036 </span><br><span class="line">ESTAB      0      0                 127.0.0.1:55388            127.0.0.1:27017 </span><br><span class="line">ESTAB      0      0            123.57.218.140:22         101.200.188.230:42002 </span><br><span class="line">ESTAB      0      96           123.57.218.140:22          61.149.193.234:50314</span><br><span class="line">···</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&quot; +|:&quot; &#x27;&#123;print $(NF-2)&#125;&#x27; ss.log | sort | uniq -c | sort -nr | head -n3</span></span><br><span class="line">     44 127.0.0.1</span><br><span class="line">     10 113.234.28.244</span><br><span class="line">      8 124.64.18.135</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&quot; +|:&quot; &#x27;/^ESTAB/&#123;print $(NF-2)&#125;&#x27; ss.log | sort | uniq -c | sort -nr | head -n3</span></span><br></pre></td></tr></table></figure><p><strong>Example2：将连接数超过100个以上的IP放入黑名单拒绝访问</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat deny_IP.sh </span></span><br><span class="line">LINK=100</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  ss -nt | awk -F<span class="string">&#x27; +|:&#x27;</span> <span class="string">&#x27;/^ESTAB/&#123;print $(NF-2)&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="keyword">while</span> <span class="built_in">read</span> count ip;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$count</span> -gt <span class="variable">$LINK</span> ];<span class="keyword">then</span></span><br><span class="line">      iptables -A INPUT -s <span class="variable">$ip</span> -j REJECT</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>NR：记录的编号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;END&#123;print NR&#125;&#x27; /etc/passwd</span></span><br><span class="line">21</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;BEGIN&#123;print NR&#125;&#x27; /etc/passwd</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>Example1：显示awk处理文本时的记录及每条记录对应的内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">4 CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><p><strong>Example2：取IP地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print $2&#125;&#x27;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>FNR：对各自的文件的记录进行编号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">4 CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print FNR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">1 CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><ul><li>FILENAME：当前文件名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每行记录前显示该条记录所在的文件</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print FILENAME&#125;&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><ul><li>ARGC：命令行参数的个数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;BEGIN&#123;print ARGC&#125;&#x27; /etc/issue /etc/redhat-release </span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><ul><li>ARGV：数组，保存的是命令行所给的各参数，ARGV[0],····</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;BEGIN&#123;print ARGV[0]&quot;\n&quot;ARGV[1]&quot;\n&quot;ARGV[2]&#125;&#x27; /etc/issue /etc/redhat-release </span></span><br><span class="line">awk</span><br><span class="line">/etc/issue</span><br><span class="line">/etc/redhat-release</span><br></pre></td></tr></table></figure><h4 id="1-3-2-自定义变量"><a href="#1-3-2-自定义变量" class="headerlink" title="1.3.2 自定义变量"></a>1.3.2 自定义变量</h4><p>​自定义变量区分大小写，有如下两种定义方式：</p><ul><li>-v var&#x3D;value</li><li>在program中直接定义</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -v test1=test2=&quot;hello&quot; &#x27;BEGIN&#123;print test1,test2&#125;&#x27;</span></span><br><span class="line">test2=hello</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk  &#x27;BEGIN&#123;test1=test2=&quot;hello&quot;;print test1,test2&#125;&#x27;</span></span><br><span class="line">hello hello</span><br><span class="line"></span><br><span class="line">注：若两种方式同时使用，在program中定义的变量优先级更高</span><br></pre></td></tr></table></figure><h3 id="1-4-printf-动作"><a href="#1-4-printf-动作" class="headerlink" title="1.4 printf 动作"></a>1.4 printf 动作</h3><h3 id="1-5-操作符"><a href="#1-5-操作符" class="headerlink" title="1.5 操作符"></a>1.5 操作符</h3><h3 id="1-6-模式-PATTERN"><a href="#1-6-模式-PATTERN" class="headerlink" title="1.6 模式 PATTERN"></a>1.6 模式 PATTERN</h3><h3 id="1-7-条件判断-if-else"><a href="#1-7-条件判断-if-else" class="headerlink" title="1.7 条件判断 if-else"></a>1.7 条件判断 if-else</h3><h3 id="1-8-条件判断-switch"><a href="#1-8-条件判断-switch" class="headerlink" title="1.8 条件判断 switch"></a>1.8 条件判断 switch</h3><h3 id="1-9-循环-while"><a href="#1-9-循环-while" class="headerlink" title="1.9 循环 while"></a>1.9 循环 while</h3><h3 id="1-10-循环-do-···-while"><a href="#1-10-循环-do-···-while" class="headerlink" title="1.10 循环 do ··· while"></a>1.10 循环 do ··· while</h3><h3 id="1-11-循环-for"><a href="#1-11-循环-for" class="headerlink" title="1.11 循环 for"></a>1.11 循环 for</h3><h3 id="1-12-continue-和-break"><a href="#1-12-continue-和-break" class="headerlink" title="1.12 continue 和 break"></a>1.12 continue 和 break</h3><h3 id="1-13-next"><a href="#1-13-next" class="headerlink" title="1.13 next"></a>1.13 next</h3><h3 id="1-14-数组"><a href="#1-14-数组" class="headerlink" title="1.14 数组"></a>1.14 数组</h3><h3 id="1-15-awk-函数"><a href="#1-15-awk-函数" class="headerlink" title="1.15 awk 函数"></a>1.15 awk 函数</h3><h3 id="1-16-awk-脚本"><a href="#1-16-awk-脚本" class="headerlink" title="1.16 awk 脚本"></a>1.16 awk 脚本</h3><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本处理工具与正则表达式</title>
      <link href="/archives/bd60744f.html"/>
      <url>/archives/bd60744f.html</url>
      
        <content type="html"><![CDATA[<h1 id="文本编辑工具-vim"><a href="#文本编辑工具-vim" class="headerlink" title="文本编辑工具 vim"></a>文本编辑工具 vim</h1><p><strong>vi 和 vim 简介</strong></p><p>​vi 是文本编辑器，vim 是 vi 的增强版。</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220817084311877.png" alt="image-20220817084311877"  /><h2 id="一、vim-的常见模式和转换"><a href="#一、vim-的常见模式和转换" class="headerlink" title="一、vim 的常见模式和转换"></a>一、vim 的常见模式和转换</h2><p><strong>1、三种常见模式</strong></p><ul><li>命令或普通模式vim 打开一个文件的默认启动模式，可以实现光标移动、剪切&#x2F;粘贴文本</li><li>插入或编辑模式修改文本</li><li>扩展命令或命令（末）行模式    保存、退出等</li></ul><p><strong>2、模式之间的转换</strong></p><p>命令模式 —&gt; 插入模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i insert，在光标所在处插入</span><br><span class="line">I在当前光标所在行的行首输入</span><br><span class="line">aappend，在光标所在处后面插入</span><br><span class="line">A在当前光标所在行的行尾输入</span><br><span class="line">o在光标所在行的下方插入一个新行</span><br><span class="line">O在当前光标所在行的上方打开一个新行</span><br></pre></td></tr></table></figure><p>插入模式 —&gt; 命令模式Esc</p><p>命令模式 —&gt; 末行模式:</p><p>末行模式 —&gt; 命令模式Esc，Enter</p><p>示例：插入颜色字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、切换至插入模式</span><br><span class="line">2、按ctrl+v+[ 三个键，显示^[</span><br><span class="line">3、后续输入颜色信息</span><br><span class="line">4、切换至扩展命令模式，保存退出</span><br><span class="line">5、<span class="built_in">cat</span> 文件内容时看见相关颜色文本内容</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim color.txt</span></span><br><span class="line">^[[1;31mHello^[[0m</span><br><span class="line"><span class="comment"># 结果如下图</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat color.txt</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221008222224417.png" alt="image-20221008222224417"></p><h2 id="二、末行模式"><a href="#二、末行模式" class="headerlink" title="二、末行模式"></a>二、末行模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按 : 进入末行模式</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vi /etc/shadow</span></span><br><span class="line">  1 root:$6$gwZKY4RbKMpHlO7S<span class="variable">$FztMVac</span>/skadP5/ALb.KQvjNRS4CvFcpiD8FfGPPMcbPahW/LfsEXHQXfz.f3eTVpMFvaDQCPLeX/dAPElpjK0::0:99999:7:::</span><br><span class="line">  2 bin:*:18700:0:99999:7:::</span><br><span class="line">  3 daemon:*:18700:0:99999:7:::</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line"> 26 saslauth:!!:19078::::::</span><br><span class="line">~                                                                                                        </span><br><span class="line">:</span><br></pre></td></tr></table></figure><h3 id="2-1-末行模式基本命令"><a href="#2-1-末行模式基本命令" class="headerlink" title="2.1 末行模式基本命令"></a>2.1 末行模式基本命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">w          保存文件</span><br><span class="line">wq       写入并退出</span><br><span class="line">x       写入并退出</span><br><span class="line">X       加密</span><br><span class="line">q       退出</span><br><span class="line">q!       强制退出</span><br><span class="line">r filename读入一个文件内容到当前文件的光标所在处</span><br><span class="line">w filename将当前文件内容写入另一个文件中</span><br><span class="line">!<span class="built_in">command</span>在不退出vim的情况下，临时执行一个命令</span><br><span class="line">r!<span class="built_in">command</span>读入一个命令的输出到当前文件中</span><br></pre></td></tr></table></figure><h3 id="2-2-地址定界"><a href="#2-2-地址定界" class="headerlink" title="2.2 地址定界"></a>2.2 地址定界</h3><p>格式 <code>:start_pos,end_pos CMD</code></p><h4 id="2-2-1-地址定界格式"><a href="#2-2-1-地址定界格式" class="headerlink" title="2.2.1 地址定界格式"></a>2.2.1 地址定界格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#        具体第#行</span></span><br><span class="line"><span class="comment">#,#      从第几行到第几行</span></span><br><span class="line"><span class="comment">#,+#  例：3,+3 从第三行到第六行</span></span><br><span class="line">.        当前行</span><br><span class="line">$        最后一行</span><br><span class="line">.,$-1当前行到倒数第二行</span><br><span class="line">%全文</span><br><span class="line"></span><br><span class="line">/PATTERN/从当前行向下查找，直到匹配查找到的字符串。支持正则表达式</span><br><span class="line">/pat1/,/pat2/从第一个匹配到的模式开始到第二次匹配到的模式结束</span><br><span class="line"><span class="comment">#,/pat/从#行开始，到匹配到pattern的行结束</span></span><br><span class="line">/pat/,$从匹配到的第一个pat开始到文件末尾的所有行</span><br></pre></td></tr></table></figure><h4 id="2-2-2-地址定界后跟编辑命令"><a href="#2-2-2-地址定界后跟编辑命令" class="headerlink" title="2.2.2 地址定界后跟编辑命令"></a>2.2.2 地址定界后跟编辑命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">d删除</span><br><span class="line">y复制</span><br><span class="line">wfile将匹配到的行另存到指定文件中</span><br><span class="line">r file在指定位置插入指定文件的内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除2~5行</span></span><br><span class="line">:2,5d</span><br><span class="line"><span class="comment"># 在第五行读入指定文件的内容，在指定行下方插入</span></span><br><span class="line">:5 r /etc/shadow</span><br></pre></td></tr></table></figure><h3 id="2-3-查找替换"><a href="#2-3-查找替换" class="headerlink" title="2.3 查找替换"></a>2.3 查找替换</h3><h4 id="2-3-1-查找"><a href="#2-3-1-查找" class="headerlink" title="2.3.1 查找"></a>2.3.1 查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/PATTERN从当前光标所在处向文件尾部查找；</span><br><span class="line">?PATTERN从当前光标所在处向文件首部查找；</span><br><span class="line">  n：与命令同方向</span><br><span class="line">  N：与命令反方向</span><br><span class="line">例：</span><br><span class="line">?\&lt;love\&gt;     从当前光标处向文件首部查找love这个单词</span><br></pre></td></tr></table></figure><h4 id="2-3-2-查找并替换"><a href="#2-3-2-查找并替换" class="headerlink" title="2.3.2 查找并替换"></a>2.3.2 查找并替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s: 在末行模式下完成查找替换操作</span><br><span class="line">s/要查找的内容/替换为的内容/修饰符</span><br><span class="line">要查找的内容：可使用模式</span><br><span class="line">替换为的内容：不能使用模式，但可以使用\1, \2, ...等后向引用符号；还可以使用“&amp;”引用前面查找时查找到的整个内容；</span><br><span class="line">修饰符：</span><br><span class="line">i: 忽略大小写</span><br><span class="line">g: 全局替换；默认情况下，每一行只替换第一次出现；</span><br><span class="line">查找替换中的分隔符/可替换为其它字符,否则就要用到转义符，例如</span><br><span class="line">s@@@</span><br><span class="line">s<span class="comment">###</span></span><br><span class="line">例：</span><br><span class="line">:%s/\/etc\/fstab/\/var\/log/g    或</span><br><span class="line">:%s@/var/log@/etc/fstab@g</span><br></pre></td></tr></table></figure><h3 id="2-4-定制-vim-工作特性"><a href="#2-4-定制-vim-工作特性" class="headerlink" title="2.4 定制 vim 工作特性"></a>2.4 定制 vim 工作特性</h3><p>使用末行模式的配置只是对当前vim进程有效，可将配置存放在文件中永久保存。</p><p>配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/vimrc    全局</span><br><span class="line">~/.vimrc      个人</span><br></pre></td></tr></table></figure><h4 id="2-4-1-行号"><a href="#2-4-1-行号" class="headerlink" title="2.4.1 行号"></a>2.4.1 行号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示：<span class="built_in">set</span> number, 简写为<span class="built_in">set</span> nu</span><br><span class="line">取消显示：<span class="built_in">set</span> nonumber, 简写为<span class="built_in">set</span> nonu</span><br></pre></td></tr></table></figure><h4 id="2-4-2-忽略字符大小写"><a href="#2-4-2-忽略字符大小写" class="headerlink" title="2.4.2 忽略字符大小写"></a>2.4.2 忽略字符大小写</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ic</span><br><span class="line">不忽略：<span class="built_in">set</span> noic</span><br></pre></td></tr></table></figure><h4 id="2-4-3-自动缩进"><a href="#2-4-3-自动缩进" class="headerlink" title="2.4.3 自动缩进"></a>2.4.3 自动缩进</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ai</span><br><span class="line">禁用：<span class="built_in">set</span> noai</span><br></pre></td></tr></table></figure><h4 id="2-4-4-复制保留模式"><a href="#2-4-4-复制保留模式" class="headerlink" title="2.4.4 复制保留模式"></a>2.4.4 复制保留模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> <span class="built_in">paste</span></span><br><span class="line">禁用：<span class="built_in">set</span> nopaste</span><br></pre></td></tr></table></figure><h4 id="2-4-5-显示Tab-l-和换行符-显示"><a href="#2-4-5-显示Tab-l-和换行符-显示" class="headerlink" title="2.4.5 显示Tab ^l 和换行符 $ 显示"></a>2.4.5 显示Tab ^l 和换行符 $ 显示</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> list</span><br><span class="line">禁用：<span class="built_in">set</span> nolist</span><br></pre></td></tr></table></figure><h4 id="2-4-6-高亮搜索"><a href="#2-4-6-高亮搜索" class="headerlink" title="2.4.6 高亮搜索"></a>2.4.6 高亮搜索</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> hlsearch</span><br><span class="line">禁用：<span class="built_in">set</span> nohl</span><br></pre></td></tr></table></figure><h4 id="2-4-7-语法高亮"><a href="#2-4-7-语法高亮" class="headerlink" title="2.4.7 语法高亮"></a>2.4.7 语法高亮</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：syntax on</span><br><span class="line">禁用：syntax off</span><br></pre></td></tr></table></figure><h4 id="2-4-8-文件格式"><a href="#2-4-8-文件格式" class="headerlink" title="2.4.8 文件格式"></a>2.4.8 文件格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启用windows格式：<span class="built_in">set</span> fileformat=dos</span><br><span class="line">启用unix格式：<span class="built_in">set</span> fileformat=unix</span><br><span class="line">简写 <span class="built_in">set</span> ff=dos|unix</span><br></pre></td></tr></table></figure><h4 id="2-4-9-Tab-用空格代替"><a href="#2-4-9-Tab-用空格代替" class="headerlink" title="2.4.9 Tab 用空格代替"></a>2.4.9 Tab 用空格代替</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> expandtab(<span class="built_in">set</span> et) 默认8个空格</span><br><span class="line">禁用：<span class="built_in">set</span> noet</span><br></pre></td></tr></table></figure><h4 id="2-4-10-Tab-用指定空格的个数代替"><a href="#2-4-10-Tab-用指定空格的个数代替" class="headerlink" title="2.4.10 Tab 用指定空格的个数代替"></a>2.4.10 Tab 用指定空格的个数代替</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ts=<span class="comment">#   #为空格的个数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-11-设置缩进宽度"><a href="#2-4-11-设置缩进宽度" class="headerlink" title="2.4.11 设置缩进宽度"></a>2.4.11 设置缩进宽度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> sw=<span class="comment">##为空格的个数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-12-设置文本宽度"><a href="#2-4-12-设置文本宽度" class="headerlink" title="2.4.12 设置文本宽度"></a>2.4.12 设置文本宽度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> textwidth=65 (vim only) <span class="comment">#从左向右计数</span></span><br><span class="line"><span class="built_in">set</span> wrapmargin=15 <span class="comment">#从右到左计数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-13-设置光标所在行的标识线"><a href="#2-4-13-设置光标所在行的标识线" class="headerlink" title="2.4.13 设置光标所在行的标识线"></a>2.4.13 设置光标所在行的标识线</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> cul</span><br><span class="line">禁用：<span class="built_in">set</span> nocul</span><br></pre></td></tr></table></figure><h4 id="2-4-14-加密"><a href="#2-4-14-加密" class="headerlink" title="2.4.14 加密"></a>2.4.14 加密</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> key=PASSWORD</span><br><span class="line">禁用：<span class="built_in">set</span> key=</span><br></pre></td></tr></table></figure><h4 id="2-4-15-了解更多"><a href="#2-4-15-了解更多" class="headerlink" title="2.4.15 了解更多"></a>2.4.15 了解更多</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> </span><br><span class="line"><span class="built_in">set</span> all</span><br></pre></td></tr></table></figure><h2 id="三、命令模式"><a href="#三、命令模式" class="headerlink" title="三、命令模式"></a>三、命令模式</h2><h3 id="3-1-退出vim"><a href="#3-1-退出vim" class="headerlink" title="3.1 退出vim"></a>3.1 退出vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ZZ保存退出</span><br><span class="line">ZQ不保存退出</span><br></pre></td></tr></table></figure><h3 id="3-2-光标跳转"><a href="#3-2-光标跳转" class="headerlink" title="3.2 光标跳转"></a>3.2 光标跳转</h3><h4 id="3-2-1-字符间跳转"><a href="#3-2-1-字符间跳转" class="headerlink" title="3.2.1 字符间跳转"></a>3.2.1 字符间跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h左</span><br><span class="line">l右</span><br><span class="line">j下</span><br><span class="line">k上</span><br><span class="line"><span class="comment">#COMMAND跳转到由#指定的个数的字符</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-单词间跳转"><a href="#3-2-2-单词间跳转" class="headerlink" title="3.2.2 单词间跳转"></a>3.2.2 单词间跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">w下一个单词的词首</span><br><span class="line">e当前或下一个单词的词尾</span><br><span class="line">b当前或前一个单词的词首</span><br><span class="line"><span class="comment">#COMMAND由#指定一次跳转的单词数</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-当前页跳转"><a href="#3-2-3-当前页跳转" class="headerlink" title="3.2.3 当前页跳转"></a>3.2.3 当前页跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">H页首</span><br><span class="line">M页中间行</span><br><span class="line">L页底</span><br><span class="line">zt将光标所在当前行移到屏幕顶端</span><br><span class="line">zz将光标所在当前行移到屏幕中间</span><br><span class="line">zb将光标所在当前行移到屏幕底端</span><br></pre></td></tr></table></figure><h4 id="3-2-4-行首行尾跳转"><a href="#3-2-4-行首行尾跳转" class="headerlink" title="3.2.4 行首行尾跳转"></a>3.2.4 行首行尾跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">^跳转至行首的第一个非空白字符</span><br><span class="line">0跳转至行首</span><br><span class="line">$跳转至行尾</span><br></pre></td></tr></table></figure><h4 id="3-2-5-行间移动"><a href="#3-2-5-行间移动" class="headerlink" title="3.2.5 行间移动"></a>3.2.5 行间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G最后一行</span><br><span class="line">gg第一行</span><br></pre></td></tr></table></figure><h4 id="3-2-6-句间移动"><a href="#3-2-6-句间移动" class="headerlink" title="3.2.6 句间移动"></a>3.2.6 句间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">）下一句</span><br><span class="line">（上一句</span><br></pre></td></tr></table></figure><h4 id="3-2-7-段落间移动"><a href="#3-2-7-段落间移动" class="headerlink" title="3.2.7 段落间移动"></a>3.2.7 段落间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#125;下一段</span><br><span class="line">&#123;上一段</span><br></pre></td></tr></table></figure><h4 id="3-2-8-命令模式翻屏操作"><a href="#3-2-8-命令模式翻屏操作" class="headerlink" title="3.2.8 命令模式翻屏操作"></a>3.2.8 命令模式翻屏操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+f 向文件尾部翻一屏,相当于Pagedown</span><br><span class="line">Ctrl+b 向文件首部翻一屏,相当于Pageup</span><br><span class="line">Ctrl+d 向文件尾部翻半屏</span><br><span class="line">Ctrl+u 向文件首部翻半屏</span><br></pre></td></tr></table></figure><h3 id="3-3-字符编辑"><a href="#3-3-字符编辑" class="headerlink" title="3.3 字符编辑"></a>3.3 字符编辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x      剪切光标处的字符</span><br><span class="line"><span class="comment">#x剪切光标处起始的#个字符</span></span><br><span class="line">xp交换光标所在处的字符及其后面字符的位置</span><br><span class="line">~转换大小写</span><br><span class="line">J删除当前行后的换行符</span><br></pre></td></tr></table></figure><h3 id="3-4-替换命令"><a href="#3-4-替换命令" class="headerlink" title="3.4 替换命令"></a>3.4 替换命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r只替换光标所在处的一个字符</span><br><span class="line">R切换成REPLACE模式（末行有 -- REPLACE -- 提示），按Esc键回到命令模式</span><br></pre></td></tr></table></figure><h3 id="3-5-删除命令（实际为剪切）"><a href="#3-5-删除命令（实际为剪切）" class="headerlink" title="3.5 删除命令（实际为剪切）"></a>3.5 删除命令（实际为剪切）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">d删除，可通过光标跳转字符，实现范围删除</span><br><span class="line">d$删除到行尾</span><br><span class="line">d^删除到非空行首</span><br><span class="line">d0删除到行首</span><br><span class="line">dw</span><br><span class="line">de</span><br><span class="line">db</span><br><span class="line"><span class="built_in">dd</span>删除光标所在的行</span><br><span class="line"><span class="comment">#dd多行删除</span></span><br><span class="line">D从当前光标位置一直删除到行尾，等同于d$</span><br></pre></td></tr></table></figure><h3 id="3-6-复制命令"><a href="#3-6-复制命令" class="headerlink" title="3.6 复制命令"></a>3.6 复制命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">y 复制，行为相似于d命令</span><br><span class="line">y$</span><br><span class="line">y0</span><br><span class="line">y^</span><br><span class="line">ye</span><br><span class="line">yw</span><br><span class="line">yb</span><br><span class="line"><span class="comment">#COMMAND</span></span><br><span class="line">yy：复制行</span><br><span class="line"><span class="comment">#yy 复制多行</span></span><br><span class="line"></span><br><span class="line">------ 类似于d命令 ------</span><br></pre></td></tr></table></figure><h3 id="3-7-粘贴命令"><a href="#3-7-粘贴命令" class="headerlink" title="3.7 粘贴命令"></a>3.7 粘贴命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p 缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面</span><br><span class="line">P 缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面</span><br></pre></td></tr></table></figure><h3 id="3-8-改变命令"><a href="#3-8-改变命令" class="headerlink" title="3.8 改变命令"></a>3.8 改变命令</h3><p>使用 c 命令后会进入到插入模式，用法类似于 d 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c$</span><br><span class="line">c^</span><br><span class="line">c0</span><br><span class="line">cb</span><br><span class="line">ce</span><br><span class="line">cw</span><br><span class="line"><span class="comment">#COMMAND</span></span><br><span class="line">cc <span class="comment">#删除当前行并输入新内容，相当于S</span></span><br><span class="line"><span class="comment">#cc</span></span><br><span class="line">C <span class="comment">#删除当前光标到行尾，并切换成插入模式,相当于c$</span></span><br></pre></td></tr></table></figure><h3 id="3-9-撤销更改"><a href="#3-9-撤销更改" class="headerlink" title="3.9 撤销更改"></a>3.9 撤销更改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u 撤销最近的更改，相当于windows中ctrl+z</span><br><span class="line"><span class="comment">#u 撤销之前多次更改</span></span><br><span class="line">U 撤消光标落在这行后所有此行的更改</span><br><span class="line">Ctrl-r 重做最后的“撤消”更改，相当于windows中crtl+y</span><br><span class="line">. 重复前一个操作</span><br><span class="line"><span class="comment">#. 重复前一个操作#次</span></span><br></pre></td></tr></table></figure><h2 id="四、可视化模式"><a href="#四、可视化模式" class="headerlink" title="四、可视化模式"></a>四、可视化模式</h2><p>进入到可视化模式，末行有“– – VISUAL – –”指示</p><p>可视化模式的类型</p><ul><li>v 面向字符  – VISUAL –</li><li>V 面向整行  – VISUAL LINE –</li><li>ctrl+v  面向块  – VISUAL BLOCK –</li></ul><p>进入到可视化模式，被选中的文字可被删除，复制，变更，过滤，搜索，替换等</p><p>范例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、在文件指定行的行首插入<span class="comment">#</span></span><br><span class="line">- 先将光标移动到指定的第一行的行首</span><br><span class="line">- 输入ctrl+v 进入到可视化模式</span><br><span class="line">- 向下移动光标，选中希望操作的每一行的第一个字符</span><br><span class="line">- 输入大写字母 I 切换至插入模式</span><br><span class="line">- 输入 <span class="comment">#</span></span><br><span class="line">- 按 Esc 键</span><br></pre></td></tr></table></figure><h2 id="五、多文件模式"><a href="#五、多文件模式" class="headerlink" title="五、多文件模式"></a>五、多文件模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim FILE1 FILE2 FILE3 ...</span><br><span class="line">:next 下一个</span><br><span class="line">:prev 前一个</span><br><span class="line">:first 第一个</span><br><span class="line">:last 最后一个</span><br><span class="line">:wall 保存所有</span><br><span class="line">:qall 不保存退出所有</span><br><span class="line">:wqall保存退出所有</span><br></pre></td></tr></table></figure><h2 id="六、多窗口模式"><a href="#六、多窗口模式" class="headerlink" title="六、多窗口模式"></a>六、多窗口模式</h2><p><strong>多文件模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim FILE1 FILE2 FILE3 ...</span><br><span class="line">:next 下一个</span><br><span class="line">:prev 前一个</span><br><span class="line">:first 第一个</span><br><span class="line">:last 最后一个</span><br><span class="line">:wall 保存所有</span><br><span class="line">:qall 退出所有</span><br></pre></td></tr></table></figure><p><strong>窗口分割模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim -o|-O FILE1 FILE2 ...</span><br><span class="line">-o: 水平分割</span><br><span class="line">-O: 垂直分割</span><br><span class="line">在窗口间切换：Ctrl+w, Arrow</span><br><span class="line">单文件窗口分割：</span><br><span class="line"> Ctrl+w,s: <span class="built_in">split</span>, 水平分割</span><br><span class="line"> Ctrl+w,v: vertical, 垂直分割</span><br><span class="line"> ctrl+w,q：取消相邻窗口</span><br><span class="line">ctrl+w,o：取消全部窗口</span><br><span class="line">:wqall 退出</span><br></pre></td></tr></table></figure><hr><h1 id="文本常见处理工具"><a href="#文本常见处理工具" class="headerlink" title="文本常见处理工具"></a>文本常见处理工具</h1><h2 id="一、查看文件内容"><a href="#一、查看文件内容" class="headerlink" title="一、查看文件内容"></a>一、查看文件内容</h2><h3 id="1-1-查看文本文件内容"><a href="#1-1-查看文本文件内容" class="headerlink" title="1.1 查看文本文件内容"></a>1.1 查看文本文件内容</h3><h4 id="1-1-1-cat"><a href="#1-1-1-cat" class="headerlink" title="1.1.1 cat"></a>1.1.1 cat</h4><p>NAME<br>       cat - concatenate files and print on the standard output</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[option]</span><br><span class="line">  -E：显示行结束符$</span><br><span class="line">  -A：显示所有控制符</span><br><span class="line">  -n：对显示出的每一行进行编号</span><br><span class="line">  -b：只对非空行进行编号</span><br><span class="line">  -s：压缩连续的空行成一行</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">------------ 支持标准输入 -----------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat &gt; file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat &gt;&gt; file4 &lt;&lt; EOF    // 多行重定向</span></span><br><span class="line">&gt; line5</span><br><span class="line">&gt; EOF</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">line5</span><br></pre></td></tr></table></figure><h4 id="1-1-2-nl（相当于-cat-b）"><a href="#1-1-2-nl（相当于-cat-b）" class="headerlink" title="1.1.2 nl（相当于 cat -b）"></a>1.1.2 nl（相当于 cat -b）</h4><p>NAME<br>       nl - number lines of files</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat -n file2</span></span><br><span class="line">     1  1</span><br><span class="line">     2  2</span><br><span class="line">     3  3</span><br><span class="line">     4</span><br><span class="line">     5  5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># nl file2# nl 只对非空行进行编号</span></span><br><span class="line">     1  1</span><br><span class="line">     2  2</span><br><span class="line">     3  3</span><br><span class="line">       </span><br><span class="line">     4  5</span><br></pre></td></tr></table></figure><h4 id="1-1-3-tac"><a href="#1-1-3-tac" class="headerlink" title="1.1.3 tac"></a>1.1.3 tac</h4><p>NAME<br>       tac - concatenate and print files in reverse</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># tac file1</span></span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="1-1-4-rev"><a href="#1-1-4-rev" class="headerlink" title="1.1.4 rev"></a>1.1.4 rev</h4><p>NAME<br>       rev - reverse lines characterwise</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file</span></span><br><span class="line">01234</span><br><span class="line">56789</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tac file</span></span><br><span class="line">56789</span><br><span class="line">01234</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># rev file</span></span><br><span class="line">43210</span><br><span class="line">98765</span><br></pre></td></tr></table></figure><h3 id="1-2-查看非文本文件内容"><a href="#1-2-查看非文本文件内容" class="headerlink" title="1.2 查看非文本文件内容"></a>1.2 查看非文本文件内容</h3><h4 id="1-2-1-hexdump"><a href="#1-2-1-hexdump" class="headerlink" title="1.2.1 hexdump"></a>1.2.1 hexdump</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       hexdump - display file contents <span class="keyword">in</span> hexadecimal, decimal, octal, or ascii</span><br><span class="line">SYNOPSIS</span><br><span class="line">       hexdump [options] file...</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hexdump -C -n 5 /dev/sda  </span></span><br><span class="line">00000000  eb 63 90 10 8e                                    |.c...|</span><br><span class="line">00000005</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | hexdump -C</span></span><br><span class="line">00000000  61 20 62 20 63 20 64 20  65 20 66 0a              |a b c d e f.|</span><br><span class="line">0000000c</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; |tr -d &#x27; &#x27; | hexdump -C</span></span><br><span class="line">00000000  61 62 63 64 65 66 0a                              |abcdef.|</span><br><span class="line">00000007</span><br></pre></td></tr></table></figure><h4 id="1-2-2-od"><a href="#1-2-2-od" class="headerlink" title="1.2.2 od"></a>1.2.2 od</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       <span class="built_in">od</span> - dump files <span class="keyword">in</span> octal and other formats</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..z&#125; | tr -d &#x27; &#x27;|od -t x</span></span><br><span class="line">0000000 64636261 68676665 6c6b6a69 706f6e6d</span><br><span class="line">0000020 74737271 78777675 000a7a79</span><br><span class="line">0000033</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..z&#125; | tr -d &#x27; &#x27;|od -t x1</span></span><br><span class="line">0000000 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70</span><br><span class="line">0000020 71 72 73 74 75 76 77 78 79 7a 0a</span><br><span class="line">0000033</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | tr -d &#x27; &#x27; |od -t x1z </span></span><br><span class="line">0000000 61 62 63 64 65 66 0a                             &gt;abcdef.&lt;</span><br><span class="line">0000007</span><br></pre></td></tr></table></figure><h4 id="1-2-3-xxd"><a href="#1-2-3-xxd" class="headerlink" title="1.2.3 xxd"></a>1.2.3 xxd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       xxd - make a hexdump or <span class="keyword">do</span> the reverse.</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | tr -d &#x27; &#x27; | xxd</span></span><br><span class="line">00000000: 6162 6364 6566 0a                        abcdef.</span><br></pre></td></tr></table></figure><h2 id="二、分页查看文件内容"><a href="#二、分页查看文件内容" class="headerlink" title="二、分页查看文件内容"></a>二、分页查看文件内容</h2><ul><li>more</li><li>less</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more 和 less 都可实现文件的翻页</span><br><span class="line">使用 more 查看文件到末尾时会自动退出，而 less 不会</span><br><span class="line">less 查看文件时，支持使用模式匹配/文本 搜索文本  n/N 跳到下一个 或 上一个匹配</span><br></pre></td></tr></table></figure><h2 id="三、显示文本前或后行内容"><a href="#三、显示文本前或后行内容" class="headerlink" title="三、显示文本前或后行内容"></a>三、显示文本前或后行内容</h2><h3 id="3-1-head"><a href="#3-1-head" class="headerlink" title="3.1 head"></a>3.1 head</h3><p>选项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c <span class="comment">#指定获取前#字节</span></span><br><span class="line">-n <span class="comment">#指定获取前#行，#如果为负数，表示从文件头取到倒数第#行，不包括倒数第#行</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># head -n -3 file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="3-2-tail"><a href="#3-2-tail" class="headerlink" title="3.2 tail"></a>3.2 tail</h3><p>选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-c <span class="comment">#指定获取后#个字节</span></span><br><span class="line">-n <span class="comment">#指定获取后#行，如果#前有加号，表示从第#行开始到文件结束</span></span><br><span class="line">-f跟踪显示文件中的内容，当文件删除在新建一个同名文件时，无法继续跟踪</span><br><span class="line">-F也可跟踪显示文件中的内容，当文件删除又新建一个同名文件时可继续追踪</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tail -n +4 file1</span></span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="四、按列抽取文本-cut"><a href="#四、按列抽取文本-cut" class="headerlink" title="四、按列抽取文本 cut"></a>四、按列抽取文本 cut</h2><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-dDELIMITER：指明分隔符，默认为 Tab</span><br><span class="line">-fFILEDS:</span><br><span class="line">  <span class="comment">#: 第#个字段</span></span><br><span class="line">    <span class="comment">#,#: 指定多个不连续的字段，如 1，3，5</span></span><br><span class="line">    <span class="comment">#-#: 连续的多个字段</span></span><br><span class="line">    混合使用:<span class="number">1</span>-<span class="number">3</span>,<span class="number">7</span></span><br><span class="line">-c按字符切割</span><br><span class="line">--output-delimiter=STRING指定输出分隔符</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | tail -n $(echo `df | wc -l`-1|bc)</span></span><br><span class="line">devtmpfs               897476       0    897476   0% /dev</span><br><span class="line">tmpfs                  916616       0    916616   0% /dev/shm</span><br><span class="line">tmpfs                  916616    8884    907732   1% /run</span><br><span class="line">tmpfs                  916616       0    916616   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root  31441920 1849564  29592356   6% /</span><br><span class="line">/dev/mapper/rl-data  17410832   45084  16458280   1% /data</span><br><span class="line">/dev/sda1             1038336  216624    821712  21% /boot</span><br><span class="line">tmpfs                  183320       0    183320   0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="五、合并多个文件-paste"><a href="#五、合并多个文件-paste" class="headerlink" title="五、合并多个文件 paste"></a>五、合并多个文件 paste</h2><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-d DELIMITER: 指定分隔符，默认为 Tab</span><br><span class="line">-s所有行合成一行显示</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f1 </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f2</span></span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># paste -d &#x27; &#x27; f1 f2</span></span><br><span class="line">2 b</span><br><span class="line">3 c</span><br><span class="line">4 d</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># paste -s  -d &#x27; &#x27; f1 f2</span></span><br><span class="line">2 3 4</span><br><span class="line">b c d</span><br></pre></td></tr></table></figure><h2 id="六、分析文本的工具"><a href="#六、分析文本的工具" class="headerlink" title="六、分析文本的工具"></a>六、分析文本的工具</h2><h3 id="6-1-文本统计数据-wc"><a href="#6-1-文本统计数据-wc" class="headerlink" title="6.1 文本统计数据 wc"></a>6.1 文本统计数据 wc</h3><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-l只计数行数</span><br><span class="line">-w只计数单词总数</span><br><span class="line">-c统计字节总数</span><br><span class="line">-L显示文件中最长行的长度</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># wc /etc/passwd</span></span><br><span class="line">  27   46    1262 /etc/passwd</span><br><span class="line"> 行数单词数  字节数</span><br></pre></td></tr></table></figure><h3 id="6-2-文本排序-sort"><a href="#6-2-文本排序-sort" class="headerlink" title="6.2 文本排序 sort"></a>6.2 文本排序 sort</h3><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-r，--reversereverse the result of comparisons</span><br><span class="line">-R随机排序</span><br><span class="line">-n按照数字大小整理</span><br><span class="line">-h易读性排序，如 2M 1K</span><br><span class="line">-f忽略字符大小写</span><br><span class="line">-u去重</span><br><span class="line">-t指定字段分隔符</span><br><span class="line">-k<span class="comment">#对指定分隔符后的#列进行排序</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">============== 统计分区的利用率 ==============</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df |tail -n $(echo `df | wc -l` -1 | bc) | tr -s &#x27; &#x27;| cut -d&#x27; &#x27; -f1,5 | sort -n -t&#x27; &#x27; -k2 -r</span></span><br><span class="line">/dev/sda1 <span class="number">21</span>%</span><br><span class="line">/dev/mapper/rl-root <span class="number">7</span>%</span><br><span class="line">tmpfs <span class="number">1</span>%</span><br><span class="line">/dev/mapper/rl-data <span class="number">1</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">devtmpfs <span class="number">0</span>%</span><br><span class="line"></span><br><span class="line">============== 有两个文件，a.txt和b.txt，合并两个文件，并输出时确保每个数字唯一 =============</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort -u</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="6-3-文本去重-uniq"><a href="#6-3-文本去重-uniq" class="headerlink" title="6.3 文本去重 uniq"></a>6.3 文本去重 uniq</h3><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-c显示每行重复出现的次数</span><br><span class="line">-d仅显示重复过的行</span><br><span class="line">-u仅显示没有重复的行</span><br><span class="line"><span class="comment">#      注：重复为连续且相同   #</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file3</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># uniq -d file3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># uniq -u file3</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><p><strong>常与 sort 命令一起使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-- 并发连接最多的远程主机 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &quot;ESTAB&quot; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr</span></span><br><span class="line">      4 192.168.119.1</span><br><span class="line">      2 192.168.119.158</span><br><span class="line">      1 192.168.119.147</span><br><span class="line"></span><br><span class="line">-- 取两个文件的相同和不同的行 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅显示两个文件中相同的内容</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort | uniq -d</span></span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示两个文件中没有重复的</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort | uniq -u</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="6-4-比较文件"><a href="#6-4-比较文件" class="headerlink" title="6.4 比较文件"></a>6.4 比较文件</h3><h4 id="6-4-1-diff"><a href="#6-4-1-diff" class="headerlink" title="6.4.1 diff"></a>6.4.1 diff</h4><p><code>-u 选项，使用 unified 格式显示</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">root</span><br><span class="line">nginx</span><br><span class="line">wh</span><br><span class="line">wuhao</span><br><span class="line">harry</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file2</span></span><br><span class="line">mage</span><br><span class="line">root</span><br><span class="line">wuhao</span><br><span class="line">apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># diff  -u file1 file2</span></span><br><span class="line">--- file1       2022-03-22 08:35:52.270539575 -0400</span><br><span class="line">+++ file2       2022-03-22 08:38:20.195502598 -0400</span><br><span class="line">@@ -1,5 +1,4 @@</span><br><span class="line">+mage</span><br><span class="line"> root</span><br><span class="line">-nginx</span><br><span class="line">-wh</span><br><span class="line"> wuhao</span><br><span class="line">-harry</span><br><span class="line">+apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># diff  -u file1 file2 &gt; f.patch</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># rm -f file2           // 删除file2文件</span></span><br><span class="line">-- 先将 file1 文件备份成file1.org，然后根据f.patch文件和file1文件恢复原来的file2文件，但此时名称命名为file1 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># patch -b file1 f.patch </span></span><br><span class="line">patching file file1</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1      // 恢复的file2文件</span></span><br><span class="line">mage</span><br><span class="line">root</span><br><span class="line">wuhao</span><br><span class="line">apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1.orig </span></span><br><span class="line">root</span><br><span class="line">nginx</span><br><span class="line">wh</span><br><span class="line">wuhao</span><br><span class="line">harry</span><br></pre></td></tr></table></figure><h4 id="6-4-2-patch"><a href="#6-4-2-patch" class="headerlink" title="6.4.2 patch"></a>6.4.2 patch</h4><p>略</p><h4 id="6-4-3-vimdiff"><a href="#6-4-3-vimdiff" class="headerlink" title="6.4.3 vimdiff"></a>6.4.3 vimdiff</h4><p>略</p><h4 id="6-4-4-cmp"><a href="#6-4-4-cmp" class="headerlink" title="6.4.4 cmp"></a>6.4.4 cmp</h4><p>略</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1、找出ifconfig “网卡名” 命令结果中本机的IPv4地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | tr -s &#x27; &#x27; | cut -d&#x27; &#x27; -f3 | sort -nr | head -1</span></span><br><span class="line">192.168.119.128</span><br></pre></td></tr></table></figure><p>2、查出分区空间使用率的最大百分比值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df |tail -n $(echo `df | wc -l` -1 | bc) | tr -s &#x27; &#x27;| cut -d&#x27; &#x27; -f5 | sort -nr | head -n1</span></span><br><span class="line">21%</span><br></pre></td></tr></table></figure><p>3、查出用户UID最大值的用户名、UID及shell类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-mini3 ~]<span class="comment"># sort -t: -k3 -n /etc/passwd | tail -1 | cut -d: -f 1,3,7</span></span><br><span class="line">wh:1000:/bin/bash</span><br></pre></td></tr></table></figure><p>4、查出&#x2F;tmp的权限，以数字方式显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-mini3 ~]<span class="comment"># stat /tmp | tr -s &#x27;/(&#x27; &#x27; &#x27; | cut -d &#x27; &#x27; -f 2 | sed  -n &#x27;4p&#x27;</span></span><br><span class="line">1777</span><br></pre></td></tr></table></figure><p>5、统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &quot;ESTAB&quot; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr</span></span><br><span class="line">      4 192.168.119.1</span><br><span class="line">      2 192.168.119.158</span><br><span class="line">      1 192.168.119.147</span><br></pre></td></tr></table></figure><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>通配符通常用来匹配文件名，而正则表达式是用来匹配文本中的字符串。</p><p>正则表达式分类：</p><ul><li>基本正则表达式</li><li>扩展正则表达式</li></ul><p>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组</p><p><em>注：grep命令的使用见文本处理三剑客文章</em></p><h2 id="一、基本正则表达式元字符"><a href="#一、基本正则表达式元字符" class="headerlink" title="一、基本正则表达式元字符"></a>一、基本正则表达式元字符</h2><h3 id="1-1-字符匹配"><a href="#1-1-字符匹配" class="headerlink" title="1.1 字符匹配"></a>1.1 字符匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.匹配任意单个字符，可以使一个汉字</span><br><span class="line">[]匹配指定范围内的任意单个字符</span><br><span class="line">[^]匹配指定范围外的任意单个字符</span><br><span class="line">[:alnum:]字母和数字</span><br><span class="line">[:alpha:]任意大小写字母</span><br><span class="line">[:lower:]任意小写字母</span><br><span class="line">[:upper:]任意大写字母</span><br><span class="line">[:blank:]空白字符（空格和制表符）</span><br><span class="line">[:space:]包括空格、制表符、换行符、回车符等各种类型的空白</span><br><span class="line">[:cntrl:]不能打印的控制字符（退格、删除、警铃···）</span><br><span class="line">[:digit:]十进制数字</span><br><span class="line">[:xdigit:]十六进制数字</span><br><span class="line">[:graph:]可打印的非空白字符</span><br><span class="line">[:<span class="built_in">print</span>:]可打印字符</span><br><span class="line">[:punct:]标点符号</span><br><span class="line"></span><br><span class="line">\w <span class="comment">#匹配单词构成部分，等价于[_[:alnum:]]</span></span><br><span class="line">\W <span class="comment">#匹配非单词构成部分，等价于[^_[:alnum:]]</span></span><br><span class="line">\S <span class="comment">#匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</span></span><br><span class="line">\s <span class="comment">#匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意</span></span><br><span class="line">Unicode 正则表达式会匹配全角空格符</span><br></pre></td></tr></table></figure><h3 id="1-2-匹配次数"><a href="#1-2-匹配次数" class="headerlink" title="1.2 匹配次数"></a>1.2 匹配次数</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*匹配前面的字符任意次，贪婪模式：尽可能长的匹配</span><br><span class="line">.*任意长度的任意字符</span><br><span class="line">\?匹配其前面的字符出现<span class="number">0</span>次或<span class="number">1</span>次</span><br><span class="line">\+匹配其前面的字符至少出现<span class="number">1</span>次</span><br><span class="line">\&#123;n\&#125;匹配前面的字符n次</span><br><span class="line">\&#123;m,n\&#125;匹配前面的字符至少m次，最多n次</span><br><span class="line">\&#123;,n\&#125;匹配前面的字符最多n次</span><br><span class="line">\&#123;m,\&#125;匹配前面的字符至少m次</span><br></pre></td></tr></table></figure><h3 id="1-3-位置锚定"><a href="#1-3-位置锚定" class="headerlink" title="1.3 位置锚定"></a>1.3 位置锚定</h3><p>位置锚定可以定位出现的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">^               行首锚定，用于模式的最左侧</span><br><span class="line">$              行尾锚定，用于模式的最右侧</span><br><span class="line">^PATTERN$       模式匹配整行</span><br><span class="line">^$            匹配空行</span><br><span class="line">^[[:space:]]    空白行</span><br><span class="line">\&lt;              词首锚定</span><br><span class="line">\&gt;              词尾锚定</span><br><span class="line">\&lt;PATTERN\&gt;     匹配整个单词</span><br><span class="line"></span><br><span class="line">注：单词是由字母、数字、下划线组成，其他均为单词的分隔符</span><br><span class="line">如：http_122、788hhh 为单词；http-<span class="number">122</span>、<span class="number">788</span>:hhh 为两个单词</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">----------- 排除掉空行和<span class="string">&quot;#&quot;</span>开头的行 -----------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &#x27;^$&#x27; /etc/profile|grep -v &#x27;^#&#x27;</span></span><br><span class="line">[root@centos8 ~]<span class="comment">#grep &#x27;^[^$#]&#x27; /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="1-4-分组、或者"><a href="#1-4-分组、或者" class="headerlink" title="1.4 分组、或者"></a>1.4 分组、或者</h3><p><strong>分组：</strong>（）将多个字符捆绑在一起，当作一个整体处理，如：\(root\)</p><p><strong>后向引用：</strong>分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为：\1,\2,\3,…（\1 表示从左侧第一个左括号与之匹配的右括号之间的模式匹配到的内容）</p><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\(ab\+\(xy\)*\)：</span><br><span class="line">\1: ab\+\(xy\)*</span><br><span class="line">\2：xy</span><br><span class="line">后向引用：引用前面的分组括号中的模式所匹配到的字符（也就是匹配到的结果），而非模式本身。</span><br></pre></td></tr></table></figure><p><strong>或者：\|</strong></p><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a\|ba或b</span><br><span class="line">c\|<span class="built_in">cat</span>c或<span class="built_in">cat</span></span><br><span class="line">\(C\|c\)atCat或<span class="built_in">cat</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-------------------- 排除空行和<span class="string">&#x27;#&#x27;</span>开头的行 ----------------------</span><br><span class="line">grep -v <span class="string">&#x27;^#&#x27;</span> /PATH/TO/FILE |grep -v ^$</span><br><span class="line">grep -v <span class="string">&#x27;^#\|^$&#x27;</span> /PATH/TO/FILE</span><br><span class="line">grep -v <span class="string">&#x27;^\(#\|$\)&#x27;</span> /PATH/TO/FILE</span><br><span class="line">grep <span class="string">&quot;^[^#]&quot;</span> /PATH/TO/FILE</span><br></pre></td></tr></table></figure><h3 id="正则表达式练习"><a href="#正则表达式练习" class="headerlink" title="正则表达式练习"></a>正则表达式练习</h3><p><strong>1、显示&#x2F;proc&#x2F;meminfo文件中以大小s开头的行(要求：使用两种方法)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep &quot;^[Ss]&quot; /proc/meminfo</span></span><br><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep -i &quot;^s&quot; meminfo /proc/meminfo</span></span><br></pre></td></tr></table></figure><p><strong>2、显示&#x2F;etc&#x2F;passwd文件中不以&#x2F;bin&#x2F;bash结尾的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep -v  &quot;/bin/bash$&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>3、显示用户rpc默认的shell程序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;^\&lt;rpc\&gt;&quot; /etc/passwd | cut -d: -f7</span></span><br></pre></td></tr></table></figure><p><strong>4、找出&#x2F;etc&#x2F;passwd中的两位或三位数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;\&lt;[0-9]\&#123;2,3\&#125;\&gt;&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>5、显示CentOS7的&#x2F;etc&#x2F;grub2.cfg文件中，至少以一个空白字符开头的且后面有非空白字符的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;^[[:space:]]\+[[:alnum:]].*&quot; /etc/grub2.cfg</span></span><br></pre></td></tr></table></figure><p><strong>6、找出“netstat -tan”命令结果中以LISTEN后跟任意多个空白字符结尾的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># netstat -tan | grep &quot;\(LISTEN[[:space:]]*\)$&quot;</span></span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN</span><br></pre></td></tr></table></figure><p><strong>7、显示CentOS8上所有UID小于1000以内的用户名和UID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/passwd | cut -d: -f1,3 | grep &quot;\&lt;[0-9]\&#123;1,3\&#125;\&gt;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>8、添加用户bash、testbash、basher、sh、nologin(其shell为&#x2F;sbin&#x2F;nologin),找出&#x2F;etc&#x2F;passwd用户名和shell同名的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;^\(\&lt;[[:alnum:]]\+\&gt;\).*\1$&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>9、利用df和grep，取出磁盘各分区利用率，并从大到小排序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &quot;^/dev&quot; | tr -s &#x27; &#x27; % | cut -d% -f1,5 --output-delimiter=&#x27;   &#x27; | sort -nr</span></span><br><span class="line">/dev/sda1   21</span><br><span class="line">/dev/mapper/rl-root   7</span><br><span class="line">/dev/mapper/rl-data   1</span><br></pre></td></tr></table></figure><h2 id="二、扩展正则表达式元字符"><a href="#二、扩展正则表达式元字符" class="headerlink" title="二、扩展正则表达式元字符"></a>二、扩展正则表达式元字符</h2><p>扩展正则表达式元字符同基本正则表达式元字符，只是不需要加转义字符，词首锚定和词尾锚定仍然需要。</p><h3 id="扩展正则表达式练习"><a href="#扩展正则表达式练习" class="headerlink" title="扩展正则表达式练习"></a>扩展正则表达式练习</h3><p><strong>1、显示三个用户root、mage、wang的UID和默认shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep -E &quot;^(\&lt;root\&gt;|\&lt;mage\&gt;|\&lt;wang\&gt;)&quot; /etc/passwd | cut -d: -f3,7</span></span><br><span class="line">0:/bin/bash</span><br><span class="line">1000:/bin/bash</span><br><span class="line">1001:/bin/bash</span><br></pre></td></tr></table></figure><p><strong>2、找出&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;functions文件中行首为某单词(包括下划线)后面跟一个小括号的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep -E &quot;^[_[:alnum:]]+\(\)&quot; /etc/rc.d/init.d/functions </span></span><br></pre></td></tr></table></figure><p><strong>3、使用egrep取出&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;functions中其基名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># basename /etc/rc.d/init.d/functions</span></span><br><span class="line"><span class="built_in">functions</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#echo &quot;/etc/rc.d/init.d/functions/&quot; | grep -E -o &quot;[^/]+/?$&quot; | cut -d/ -f1</span></span><br><span class="line"><span class="built_in">functions</span></span><br></pre></td></tr></table></figure><p><strong>4、使用egrep取出上面路径的目录名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># dirname /etc/rc.d/init.d/functions</span></span><br><span class="line">/etc/rc.d/init.d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5、统计last命令中以root登录的每个主机IP地址登录次数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># last | grep -E &quot;\&lt;root\&gt;&quot; | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot; | sort | uniq -c</span></span><br></pre></td></tr></table></figure><p><strong>6、利用扩展正则表达式分别表示0-9、10-99、100-199、200-249、250-255</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;\&lt;[0-9]\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;[0-9]&#123;2&#125;\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;1[0-9]&#123;2&#125;\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;2[0-4][0-9]\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;25[0-5]\&gt;&quot;</span> num.txt</span><br></pre></td></tr></table></figure><p><strong>7、显示ifconfig命令结果中所有IPv4地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>8、将此字符串：welcome to wuhao linux 中的每个字符去重并排序，重复次数多的排到前面</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo ‘welcome to wuhao linux’ | grep -o &quot;[[:alpha:]]&quot; | sort | uniq -c | sort -nr</span></span><br><span class="line">      3 o</span><br><span class="line">      2 w</span><br><span class="line">      2 u</span><br><span class="line">      2 l</span><br><span class="line">      2 e</span><br><span class="line">      1 x</span><br><span class="line">      1 t</span><br><span class="line">      1 n</span><br><span class="line">      1 m</span><br><span class="line">      1 i</span><br><span class="line">      1 h</span><br><span class="line">      1 c</span><br><span class="line">      1 a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础入门和帮助</title>
      <link href="/archives/c31ae19.html"/>
      <url>/archives/c31ae19.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、冯·洛依曼计算机体系结构"><a href="#一、冯·洛依曼计算机体系结构" class="headerlink" title="一、冯·洛依曼计算机体系结构"></a>一、冯·洛依曼计算机体系结构</h3><p><strong>1、结构图</strong></p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/R-C.jpg" style="zoom: 67%;" /><p><strong>2、特点</strong></p><ul><li>指令和数据采用二进制表示</li><li>指令在存储器中按顺序存放</li><li>指令和数据以相同形式存放与存储器中</li><li>指令有操作码和地址码组成</li><li>计算机有运算器、存储器、控制器、输入设备和输出设备五大部件组成</li></ul><h3 id="二、进制转换"><a href="#二、进制转换" class="headerlink" title="二、进制转换"></a>二、进制转换</h3><p><strong>1、bc 命令（进制之间的转换，默认为10进制）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-en ~]<span class="comment"># bc</span></span><br><span class="line">bc 1.07.1</span><br><span class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.</span><br><span class="line">This is free software with ABSOLUTELY NO WARRANTY.</span><br><span class="line">For details <span class="built_in">type</span> `warranty<span class="string">&#x27;. </span></span><br><span class="line"><span class="string">2*3</span></span><br><span class="line"><span class="string">6          // 默认为10进制，得计算结果</span></span><br><span class="line"><span class="string">ibase=2    // 设定输入的数字类型为二进制，输出默认为10进制</span></span><br><span class="line"><span class="string">110</span></span><br><span class="line"><span class="string">6</span></span><br><span class="line"><span class="string">quit</span></span><br><span class="line"><span class="string">[root@Rocky8-en ~]# bc</span></span><br><span class="line"><span class="string">bc 1.07.1</span></span><br><span class="line"><span class="string">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="string">This is free software with ABSOLUTELY NO WARRANTY.</span></span><br><span class="line"><span class="string">For details type `warranty&#x27;</span>.</span><br><span class="line">obase=2    // 设定输出的类型为二进制，默认输入为十进制</span><br><span class="line">8</span><br><span class="line">1000</span><br><span class="line">9</span><br><span class="line">1001</span><br></pre></td></tr></table></figure><p><strong>2、各进制之间的转换</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-十进制转二进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=2;9&quot; | bc      // 将十进制9转化为二进制输出</span></span><br><span class="line">1001</span><br><span class="line">-八进制转十进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=10;ibase=8;11&quot; | bc </span></span><br><span class="line">9</span><br><span class="line">-二进制转十进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=10;ibase=2;110&quot; | bc</span></span><br><span class="line">6</span><br><span class="line">-二进制转十六进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=16;ibase=2;10010&quot; | bc</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="三、Unix-的哲学思想"><a href="#三、Unix-的哲学思想" class="headerlink" title="三、Unix 的哲学思想"></a>三、Unix 的哲学思想</h3><ul><li>一切皆文件<ul><li>不管是普通的文件，还是目录、字符设备、块设备、套接字等在Unix中都是以文件形式对待，采用统一的接口被提供</li></ul></li><li>配置数据存储在文本中<ul><li>Linux中大部分配置文件存放在文本中，方便我们进行修改来解决一些发生的错误；像Windows中的程序配置文件放在注册表中，注册表采用若干个二进制文件，出错很难修改。</li></ul></li><li>提供许多小型的单一用途的程序<ul><li>使用单一的程序就可以完成相应的操作</li></ul></li><li>避免令人困惑的用户界面<ul><li>更多的采用字符界面，图形界面会产生一些虚假的现象，执行过程中不稳定</li></ul></li><li>连接程序，完成复杂的功能<ul><li>某些复杂的任务，可以连接多个简单的程序来实现其复杂的功能。像编写SHELL程序。</li></ul></li></ul><h3 id="四、SHELL"><a href="#四、SHELL" class="headerlink" title="四、SHELL"></a>四、SHELL</h3><p>​Shell是Linux系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前使用的shell</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo $SHELL</span></span><br><span class="line">/bin/bash</span><br><span class="line">-- 显示当前系统使用的所有shell</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/shells</span></span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/usr/bin/sh</span><br><span class="line">/usr/bin/bash</span><br><span class="line">wh@unbuntu18:~$ <span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># /etc/shells: valid login shells</span></span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/bin/rbash</span><br><span class="line">/bin/dash</span><br></pre></td></tr></table></figure><h4 id="4-1-Shell中执行的命令"><a href="#4-1-Shell中执行的命令" class="headerlink" title="4.1 Shell中执行的命令"></a>4.1 Shell中执行的命令</h4><h5 id="4-1-1-shell-中可执行的两类命令"><a href="#4-1-1-shell-中可执行的两类命令" class="headerlink" title="4.1.1 shell 中可执行的两类命令"></a>4.1.1 shell 中可执行的两类命令</h5><ul><li>内部命令：由shell自带的，而且通过某命令形式提供，用户登录后自动加载并常驻内存中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-- <span class="built_in">type</span> 判断指定的命令时外部命令还是内部命令</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># type  -a cat       // 外部命令</span></span><br><span class="line"><span class="built_in">cat</span> is /usr/bin/cat</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># type -a echo      // 内部命令也是外部命令</span></span><br><span class="line"><span class="built_in">echo</span> is a shell <span class="built_in">builtin</span></span><br><span class="line"><span class="built_in">echo</span> is /usr/bin/echo</span><br><span class="line">-- 列出当前shell所有的内部命令</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># enable </span></span><br><span class="line"><span class="built_in">enable</span> .</span><br><span class="line"><span class="built_in">enable</span> :</span><br><span class="line"><span class="built_in">enable</span> [</span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">bg</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">bind</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">break</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">builtin</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">caller</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">cd</span></span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">wait</span></span><br></pre></td></tr></table></figure><ul><li>外部命令：在文件系统路径下有对应的可执行程序文件，当执行命令时才从磁盘加载至内存中，执行完毕后从内存中删除</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查看外部名令的路径</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># which cat</span></span><br><span class="line">/usr/bin/cat</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># whereis cat</span></span><br><span class="line"><span class="built_in">cat</span>: /usr/bin/cat /usr/share/man/man1/cat.1.gz /usr/share/man/man1p/cat.1p.gz</span><br></pre></td></tr></table></figure><ul><li>Hash缓存表</li></ul><p>​系统初始时hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当在此使用该命令时，shell解释器首先查看hash表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见用法</span><br><span class="line"><span class="built_in">hash</span> 显示<span class="built_in">hash</span>缓存</span><br><span class="line"><span class="built_in">hash</span> -l 显示<span class="built_in">hash</span>缓存，可作为输入使用</span><br><span class="line"><span class="built_in">hash</span> -p PATH NAME 将命令全路径path起别名为name</span><br><span class="line"><span class="built_in">hash</span> -t NAME 打印缓存中命令的路径</span><br><span class="line"><span class="built_in">hash</span> -d NAME 清除指定命令缓存</span><br><span class="line"><span class="built_in">hash</span> -r 清除缓存</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -t clock</span></span><br><span class="line">/usr/sbin/clock</span><br><span class="line">=========================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -l</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/dnf dnf</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/screen screen</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/systemctl systemctl</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/vim vim</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/date <span class="built_in">date</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/uname <span class="built_in">uname</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/who <span class="built_in">who</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/whoami <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/man man</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/shutdown shutdown</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/clock clock</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/hwclock hwclock</span><br><span class="line">===========================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -d clock</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line">hits    <span class="built_in">command</span></span><br><span class="line">   1    /usr/bin/dnf</span><br><span class="line">   1    /usr/bin/screen</span><br><span class="line">   1    /usr/bin/systemctl</span><br><span class="line">   1    /usr/bin/vim</span><br><span class="line">   5    /usr/bin/date</span><br><span class="line">   1    /usr/bin/uname</span><br><span class="line">   1    /usr/bin/who</span><br><span class="line">   1    /usr/bin/whoami</span><br><span class="line">   2    /usr/bin/man</span><br><span class="line">   8    /usr/sbin/shutdown</span><br><span class="line">   3    /usr/sbin/hwclock</span><br><span class="line">==============================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -r</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line"><span class="built_in">hash</span>: <span class="built_in">hash</span> table empty   </span><br></pre></td></tr></table></figure><h5 id="4-1-2、命令别名"><a href="#4-1-2、命令别名" class="headerlink" title="4.1.2、命令别名"></a>4.1.2、命令别名</h5><p>​对于经常执行的较长命令，可以将其定义为较短的别名，方便执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前shell进程所有可用的命令别名</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># alias</span></span><br><span class="line"></span><br><span class="line">-- 定义别名     <span class="built_in">alias</span> 新名=<span class="string">&#x27;需要定义别名的命令&#x27;</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># ls /etc/yum.repos.d/</span></span><br><span class="line">CentOS-Base.repo  epel-modular.repo  epel.repo  epel-testing-modular.repo  epel-testing.repo</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># alias lsrepo=&#x27;ls /etc/yum.repos.d&#x27;</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># lsrepo</span></span><br><span class="line">CentOS-Base.repo  epel-modular.repo  epel.repo  epel-testing-modular.repo  epel-testing.repo</span><br><span class="line"></span><br><span class="line">-- 取消别名  <span class="built_in">unalias</span> 别名</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># unalias lsrepo</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># lsrepo</span></span><br><span class="line">bash: lsrepo: <span class="built_in">command</span> not found...</span><br><span class="line"></span><br><span class="line">-- 定义别名配置永久有效</span><br><span class="line">* 仅对当前用户~/.bashrc</span><br><span class="line">* 对所有用户     /etc/bashrc</span><br><span class="line"></span><br><span class="line">-- 如果别名同原命令，仍然向执行原命令</span><br><span class="line">\ALIASNAME</span><br><span class="line"><span class="string">&#x27;ALIASNAME&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="4-1-3-命令的执行次序"><a href="#4-1-3-命令的执行次序" class="headerlink" title="4.1.3 命令的执行次序"></a>4.1.3 命令的执行次序</h5><ul><li>系统先判断是否是别名，如果是就立即执行</li><li>如果不是别名，判断是否是内部命令，是就执行</li><li>如果不是内部命令，查询hash对应的缓存区中是否有此命令对应的路径，如果有就按照此路径在磁盘上查找此命令的文件并执行。如果找不到对应的文件，无法执行此命令。</li><li>如果在hash缓存区中没有对应的命令，则按照PATH系统变量指定的路径进行搜索，如果找到了，则立刻执行，停止向后查找。</li><li>如果在PATH系统变量中也无法查找到，则提示没有此命令。</li></ul><h3 id="五、常见命令"><a href="#五、常见命令" class="headerlink" title="五、常见命令"></a>五、常见命令</h3><h4 id="5-1-查看当前所在的终端"><a href="#5-1-查看当前所在的终端" class="headerlink" title="5.1 查看当前所在的终端"></a>5.1 查看当前所在的终端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-en ~]<span class="comment"># tty</span></span><br><span class="line">/dev/pts/0// 伪终端</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># tty</span></span><br><span class="line">/dev/tty1// 虚拟终端</span><br></pre></td></tr></table></figure><h4 id="5-2-设置主机名"><a href="#5-2-设置主机名" class="headerlink" title="5.2 设置主机名"></a>5.2 设置主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 临时生效</span><br><span class="line">hostname NAME</span><br><span class="line">-- 永久生效（CentOS7和Ubuntu18.04以上版本）</span><br><span class="line">hostnamectl set-hostname NAME</span><br></pre></td></tr></table></figure><h4 id="5-3-查看-CPU的架构信息"><a href="#5-3-查看-CPU的架构信息" class="headerlink" title="5.3 查看 CPU的架构信息"></a>5.3 查看 CPU的架构信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># lscpu</span></span><br><span class="line">Architecture:        x86_64                      //  cpu架构信息</span><br><span class="line">CPU op-mode(s):      32-bit, 64-bit</span><br><span class="line">Byte Order:          Little Endian</span><br><span class="line">CPU(s):              2//  虚拟机的cpu核数</span><br><span class="line">On-line CPU(s) list: 0,1</span><br><span class="line">Thread(s) per core:  1</span><br><span class="line">Core(s) per socket:  2</span><br><span class="line">Socket(s):           1</span><br><span class="line">NUMA node(s):        1</span><br><span class="line">Vendor ID:           GenuineIntel</span><br><span class="line">BIOS Vendor ID:      GenuineIntel</span><br><span class="line">CPU family:          6</span><br><span class="line">Model:               142</span><br><span class="line">Model name:          Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz            // 物理机的CPU型号</span><br><span class="line">BIOS Model name:     Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">Stepping:            9</span><br><span class="line">CPU MHz:             2712.002</span><br><span class="line">BogoMIPS:            5424.00</span><br><span class="line">Hypervisor vendor:   VMware</span><br><span class="line">Virtualization <span class="built_in">type</span>: full</span><br><span class="line">L1d cache:           32K</span><br><span class="line">L1i cache:           32K</span><br><span class="line">L2 cache:            256K</span><br><span class="line">L3 cache:            3072K</span><br><span class="line">NUMA node0 CPU(s):   0,1</span><br><span class="line">Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/cpuinfo      // 将每一个cpu的完整信息展现出来</span></span><br><span class="line">processor       : 0</span><br><span class="line">vendor_id       : GenuineIntel</span><br><span class="line">cpu family      : 6</span><br><span class="line">model           : 142</span><br><span class="line">model name      : Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">stepping        : 9</span><br><span class="line">microcode       : 0xc6</span><br><span class="line">cpu MHz         : 2712.002</span><br><span class="line">cache size      : 3072 KB</span><br><span class="line">physical <span class="built_in">id</span>     : 0</span><br><span class="line">siblings        : 2</span><br><span class="line">core <span class="built_in">id</span>         : 0</span><br><span class="line">cpu cores       : 2</span><br><span class="line">apicid          : 0</span><br><span class="line">initial apicid  : 0</span><br><span class="line">fpu             : <span class="built_in">yes</span></span><br><span class="line">fpu_exception   : <span class="built_in">yes</span></span><br><span class="line">cpuid level     : 22</span><br><span class="line">wp              : <span class="built_in">yes</span></span><br><span class="line">flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds</span><br><span class="line">bogomips        : 5424.00</span><br><span class="line">clflush size    : 64</span><br><span class="line">cache_alignment : 64</span><br><span class="line">address sizes   : 45 bits physical, 48 bits virtual</span><br><span class="line">power management:</span><br><span class="line"></span><br><span class="line">processor       : 1</span><br><span class="line">vendor_id       : GenuineIntel</span><br><span class="line">cpu family      : 6</span><br><span class="line">model           : 142</span><br><span class="line">model name      : Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">stepping        : 9</span><br><span class="line">microcode       : 0xc6</span><br><span class="line">cpu MHz         : 2712.002</span><br><span class="line">cache size      : 3072 KB</span><br><span class="line">physical <span class="built_in">id</span>     : 0</span><br><span class="line">siblings        : 2</span><br><span class="line">core <span class="built_in">id</span>         : 1</span><br><span class="line">cpu cores       : 2</span><br><span class="line">apicid          : 1</span><br><span class="line">initial apicid  : 1</span><br><span class="line">fpu             : <span class="built_in">yes</span></span><br><span class="line">fpu_exception   : <span class="built_in">yes</span></span><br><span class="line">cpuid level     : 22</span><br><span class="line">wp              : <span class="built_in">yes</span></span><br><span class="line">flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds</span><br><span class="line">bogomips        : 5424.00</span><br><span class="line">clflush size    : 64</span><br><span class="line">cache_alignment : 64</span><br><span class="line">address sizes   : 45 bits physical, 48 bits virtual</span><br><span class="line">power management:</span><br></pre></td></tr></table></figure><h4 id="5-4-查看内存大小"><a href="#5-4-查看内存大小" class="headerlink" title="5.4 查看内存大小"></a>5.4 查看内存大小</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 展示系统内存的使用情况，-h 选项便于可读 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          1.7Gi       254Mi       1.1Gi       8.0Mi       437Mi       1.3Gi</span><br><span class="line">Swap:         2.0Gi          0B       2.0Gi</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/meminfo</span></span><br><span class="line">MemTotal:        1833232 kB</span><br><span class="line">MemFree:         1124496 kB</span><br><span class="line">MemAvailable:    1410600 kB</span><br><span class="line">Buffers:            3164 kB</span><br><span class="line">Cached:           400380 kB</span><br><span class="line">SwapCached:            0 kB</span><br><span class="line">Active:           246284 kB</span><br><span class="line">Inactive:         257196 kB</span><br><span class="line">Active(anon):       1928 kB</span><br><span class="line">Inactive(anon):   106892 kB</span><br><span class="line">Active(file):     244356 kB</span><br><span class="line">Inactive(file):   150304 kB</span><br><span class="line">Unevictable:           0 kB</span><br><span class="line">Mlocked:               0 kB</span><br><span class="line">SwapTotal:       2129916 kB</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line">DirectMap1G:           0 kB</span><br></pre></td></tr></table></figure><h4 id="5-5-查看硬盘和分区情况"><a href="#5-5-查看硬盘和分区情况" class="headerlink" title="5.5 查看硬盘和分区情况"></a>5.5 查看硬盘和分区情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># lsblk      // 默认查看所有设备，也可后接设备，查看指定的设备</span></span><br><span class="line">NAME        MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0  50G  0 disk </span><br><span class="line">├─sda1        8:1    0   1G  0 part /boot</span><br><span class="line">└─sda2        8:2    0  49G  0 part </span><br><span class="line">  ├─rl-root 253:0    0  47G  0 lvm  /</span><br><span class="line">  └─rl-swap 253:1    0   2G  0 lvm  [SWAP]</span><br><span class="line">sr0          11:0    1  10G  0 rom  </span><br><span class="line"></span><br><span class="line">-- major: 主版本号 minor: 次版本号 name: 设备名称 <span class="comment">#blocks: 表示block的数目</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/partitions</span></span><br><span class="line">major minor  <span class="comment">#blocks  name</span></span><br><span class="line"></span><br><span class="line">   8        0   52428800 sda</span><br><span class="line">   8        1    1048576 sda1</span><br><span class="line">   8        2   51379200 sda2</span><br><span class="line">  11        0   10465280 sr0</span><br><span class="line"> 253        0   49246208 dm-0</span><br><span class="line"> 253        1    2129920 dm-1</span><br></pre></td></tr></table></figure><h4 id="5-6-查看系统版本信息"><a href="#5-6-查看系统版本信息" class="headerlink" title="5.6 查看系统版本信息"></a>5.6 查看系统版本信息</h4><ul><li>查看系统架构</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># arch</span></span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><ul><li>查看内核版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># uname -r</span></span><br><span class="line">4.18.0-348.el8.0.2.x86_64</span><br><span class="line">[root@centos7-mini ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-1160.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>查看操作系统发行版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">Rocky Linux release 8.5 (Green Obsidian)</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/os-release</span></span><br><span class="line">NAME=<span class="string">&quot;Rocky Linux&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;8.5 (Green Obsidian)&quot;</span></span><br><span class="line">ID=<span class="string">&quot;rocky&quot;</span></span><br><span class="line">ID_LIKE=<span class="string">&quot;rhel centos fedora&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;8.5&quot;</span></span><br><span class="line">PLATFORM_ID=<span class="string">&quot;platform:el8&quot;</span></span><br><span class="line">PRETTY_NAME=<span class="string">&quot;Rocky Linux 8.5 (Green Obsidian)&quot;</span></span><br><span class="line">ANSI_COLOR=<span class="string">&quot;0;32&quot;</span></span><br><span class="line">CPE_NAME=<span class="string">&quot;cpe:/o:rocky:rocky:8.5:GA&quot;</span></span><br><span class="line">HOME_URL=<span class="string">&quot;https://rockylinux.org/&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.rockylinux.org/&quot;</span></span><br><span class="line">ROCKY_SUPPORT_PRODUCT=<span class="string">&quot;Rocky Linux&quot;</span></span><br><span class="line">ROCKY_SUPPORT_PRODUCT_VERSION=<span class="string">&quot;8&quot;</span></span><br></pre></td></tr></table></figure><h4 id="5-7-日期和时间"><a href="#5-7-日期和时间" class="headerlink" title="5.7 日期和时间"></a>5.7 日期和时间</h4><p>Linux的两种时钟：</p><ul><li>系统时钟Linux内核通过CPU工作频率进行计时</li><li>硬件时钟    计算机主板的内部物理芯片计时</li></ul><p>（1）date </p><p>date - print or set the system date and time</p><p>date [OPTION]… [+FORMAT]<br>date [-u|–utc|–universal] [MMDDhhmm[[CC]YY][.ss]]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前默认时间格式 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date   </span></span><br><span class="line">Wed Mar  2 01:56:39 EST 2022</span><br><span class="line">-- 只显示当前日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date +%F</span></span><br><span class="line">2022-03-02</span><br><span class="line">-- 只显示当前的小时、分钟、秒数时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date +%T</span></span><br><span class="line">02:12:05</span><br><span class="line">-- 显示昨天的日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date -d &#x27;-1 day&#x27; +%F</span></span><br><span class="line">2022-03-01</span><br><span class="line">-- 设置当前的日期为明年的日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date -s &#x27;1 year&#x27; +%F</span></span><br><span class="line">2023-03-02</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date &quot;+%F %T&quot;</span></span><br><span class="line">2023-03-02 02:10:19</span><br><span class="line">-- 设置时间为2022年7月1日12点30分30秒 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date 070112302022.30</span></span><br><span class="line">Fri Jul  1 12:30:30 EDT 2022</span><br></pre></td></tr></table></figure><p>（2）hwclock&#x2F;clock   操作硬件时钟</p><p>-s以硬件时间为准，设定系统时间</p><p>-w以系统时间为准，设定硬件时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 显示硬件时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hwclock </span></span><br><span class="line">2022-03-04 06:30:41.965061-05:00</span><br><span class="line">-- 调整系统时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hwclock -s</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># clock;date</span></span><br><span class="line">2022-03-04 06:32:00.405387-05:00</span><br><span class="line">Fri Mar  4 06:32:00 EST 2022</span><br></pre></td></tr></table></figure><h4 id="5-8-关机和重启"><a href="#5-8-关机和重启" class="headerlink" title="5.8 关机和重启"></a>5.8 关机和重启</h4><p>关机：shutdown、halt、poweroff</p><p>重启：reboot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">shutdown now 立刻关机</span><br><span class="line">+<span class="comment"># #分钟之后关机</span></span><br><span class="line">hh:mm    指明具体时间</span><br><span class="line">-c  取消关机</span><br><span class="line">-r 重启</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># shutdown 12:30   //十二点半关机</span></span><br><span class="line">Shutdown scheduled <span class="keyword">for</span> Fri 2022-03-04 12:30:00 EST, use <span class="string">&#x27;shutdown -c&#x27;</span> to cancel.</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># shutdown +5      // 五分钟后关机</span></span><br><span class="line">Shutdown scheduled <span class="keyword">for</span> Fri 2022-03-04 06:42:52 EST, use <span class="string">&#x27;shutdown -c&#x27;</span> to cancel.</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date</span></span><br><span class="line">Fri Mar  4 06:37:58 EST 2022</span><br></pre></td></tr></table></figure><h4 id="5-9-用户登录信息查看"><a href="#5-9-用户登录信息查看" class="headerlink" title="5.9 用户登录信息查看"></a>5.9 用户登录信息查看</h4><p>whoami显示当前登录的有效用户</p><p>who显示系统当前所有的登录会话</p><p>w显示系统当前所有的登录会话及所做的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># who</span></span><br><span class="line">root     pts/0        2022-03-04 06:16 (192.168.84.1)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># w</span></span><br><span class="line"> 06:49:03 up 48 min,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    192.168.84.1     06:16    5.00s  0.15s  0.00s w</span><br></pre></td></tr></table></figure><h4 id="5-10-会话管理"><a href="#5-10-会话管理" class="headerlink" title="5.10 会话管理"></a>5.10 会话管理</h4><p>​当我们打开一个终端窗口的时候，终端的窗口与启动的进程连接在一起。如果此时窗口突然关闭了，那我们正在执行的某个进程也会终止。使用会话，可以在终端窗口不正常关闭的同时，依然保存着他当前的会话。</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/2704859-20220304234120701-648595415.png" alt="image" style="zoom: 50%;" /><p>删除掉此screen会话，在新建一个正常会话，查看ping命令是否还在继续执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ps aux | grep ping      // ping 命令还在继续执行</span></span><br><span class="line">root        2464  0.0  0.2  55252  5012 pts/0    S+   10:09   0:00 ping www.baidu.com</span><br><span class="line">root        2495  0.0  0.0  12136  1176 pts/3    S+   10:14   0:00 grep --color=auto ping</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># kill -15 2464         // 终止此命令</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ps aux | grep ping</span></span><br><span class="line">root        2497  0.0  0.0  12136  1176 pts/3    S+   10:14   0:00 grep --color=auto ping</span><br></pre></td></tr></table></figure><h4 id="5-11-命令行历史（history）"><a href="#5-11-命令行历史（history）" class="headerlink" title="5.11 命令行历史（history）"></a>5.11 命令行历史（history）</h4><p>​当执行一条命令时，系统会在内存记录执行过的命令，当用户退出时，会将内存的命令写入对应的历史文件中（~&#x2F;.bash_history）</p><p>常用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-c：清空命令历史</span><br><span class="line">-d NUMBER：删除历史中指定的第几条命令</span><br><span class="line">n：显示最近到的n条历史</span><br><span class="line">-a：追加新执行的命令到历史文件中</span><br></pre></td></tr></table></figure><p>命令历史环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HISTSIZE：命令历史记录的条数</span><br><span class="line">HISTFILE：指定历史文件，默认为~/.bash_history</span><br><span class="line">HISTFILESIZE：命令历史文件记录历史的条数</span><br><span class="line">HISTTIMEFORMAT=<span class="string">&quot;%F %T `whoami` &quot;</span> 显示时间和用户</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- 设置查看命令历史时可以查看执行的时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># export HISTTIMEFORMAT=&quot;%F %T&quot;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># history | head</span></span><br><span class="line">    1  2022-03-04 10:11:16ip a</span><br><span class="line">    2  2022-03-04 10:11:16systemctl restart network</span><br><span class="line">    3  2022-03-04 10:11:16systemctl restart network-manager</span><br><span class="line">    4  2022-03-04 10:11:16quit</span><br><span class="line">    5  2022-03-04 10:11:16exit</span><br><span class="line">    6  2022-03-04 10:11:16ls]</span><br><span class="line">    7  2022-03-04 10:11:16ls</span><br><span class="line">    8  2022-03-04 10:11:16cd /root</span><br><span class="line">    9  2022-03-04 10:11:16ls</span><br><span class="line">   10  2022-03-04 10:11:16cd /honme</span><br><span class="line">==============================================================================</span><br><span class="line">-- 如果需要永久存储，需要写进配置文件中 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat ~/.bash_profile</span></span><br><span class="line"><span class="comment"># .bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the aliases and functions</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/.bashrc ]; <span class="keyword">then</span></span><br><span class="line">        . ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific environment and startup programs</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T&quot;</span></span><br></pre></td></tr></table></figure><h4 id="5-12-tr"><a href="#5-12-tr" class="headerlink" title="5.12 tr"></a>5.12 tr</h4><p>​tr 命令可以接受标准输入并按指定规则进行转换</p><p>SYNOPSIS<br>                tr [OPTION]… SET1 [SET2]</p><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c, -C, --complementuse the complement of SET1</span><br><span class="line">-d, --deletedelete characters <span class="keyword">in</span> SET1, <span class="keyword">do</span> not translate</span><br><span class="line">-s, --squeeze-repeats 将最后指定的 SET 中列出的重复字符的每个序列替换为该字符的单个匹配项</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat /dev/urandom | tr -dc [:alnum:] | echo `head -c 8`</span></span><br><span class="line">Q9WE83YS</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># echo Ixamxwh | tr -s x &quot; &quot;</span></span><br><span class="line">I am wh</span><br></pre></td></tr></table></figure><h4 id="5-13-输出信息-echo"><a href="#5-13-输出信息-echo" class="headerlink" title="5.13 输出信息 echo"></a>5.13 输出信息 echo</h4><h5 id="5-13-1-基础用法"><a href="#5-13-1-基础用法" class="headerlink" title="5.13.1 基础用法"></a>5.13.1 基础用法</h5><p>​将echo后面的字符进行输出，默认以空白字符分隔。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">option：</span><br><span class="line">-E 不支持转义（默认）</span><br><span class="line">-n 不自动换行</span><br><span class="line">-e 启用 <span class="string">&#x27;\&#x27;</span> 字符功能 </span><br></pre></td></tr></table></figure><p>​显示变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var_name</span>&quot;</span>弱引用，会输出变量的值</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$var_name&#x27;</span>强引用，变量的值不会输出</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;$PATH&quot;</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#x27;$PATH&#x27;</span></span><br><span class="line"><span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>​使用-e选项后支持的转义符号及所表达的意思</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">\\     backslash</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e \\</span></span><br><span class="line">\</span><br><span class="line"></span><br><span class="line">\a     alert (BEL)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e &#x27;\a&#x27;</span></span><br><span class="line"></span><br><span class="line">\b     backspace</span><br><span class="line"></span><br><span class="line">\c     produce no further output</span><br><span class="line"></span><br><span class="line">\e     escape</span><br><span class="line"></span><br><span class="line">\f     form feed</span><br><span class="line"></span><br><span class="line">\n     new line换行</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e &#x27;abc\nasdf&#x27;</span></span><br><span class="line">abc</span><br><span class="line">asdf</span><br><span class="line"></span><br><span class="line">\r     carriage <span class="built_in">return</span>回车，光标移至行首，但不换行</span><br><span class="line"></span><br><span class="line">\t     horizontal tab</span><br><span class="line"></span><br><span class="line">\v     vertical tab</span><br><span class="line"></span><br><span class="line">\0NNN  byte with octal value NNN (1 to 3 digits)</span><br><span class="line"></span><br><span class="line">\xHH   byte with hexadecimal value HH (1 to 2 digits)</span><br></pre></td></tr></table></figure><h5 id="5-13-2-高级用法"><a href="#5-13-2-高级用法" class="headerlink" title="5.13.2 高级用法"></a>5.13.2 高级用法</h5><p>​在终端中，可以输出带有颜色的字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;\033[字符背景颜色;字体颜色m字符串\033[0m&quot;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字体颜色范围：30--37</span></span><br><span class="line">30 黑</span><br><span class="line">31 红</span><br><span class="line">32 绿</span><br><span class="line">33 黄</span><br><span class="line">34 蓝</span><br><span class="line">35 紫</span><br><span class="line">36 深绿</span><br><span class="line">37 白</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符背景颜色范围：40--47</span></span><br><span class="line">40 黑</span><br><span class="line">41 红</span><br><span class="line">42 绿</span><br><span class="line">43 黄</span><br><span class="line">44 蓝</span><br><span class="line">45 紫</span><br><span class="line">46 深绿</span><br><span class="line">47 白</span><br></pre></td></tr></table></figure><h3 id="六、命令行历史（history）"><a href="#六、命令行历史（history）" class="headerlink" title="六、命令行历史（history）"></a>六、命令行历史（history）</h3><p>​在终端执行命令后，系统会在内存记录执行过的命令。当用户正常退出时，会将内存中保存的命令写入到对于应的历史文件中，默认是<code>~/.bash_history</code>。当再一次登录到shell时，会读取历史文件中记录的命令到内存中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">常用选项：</span><br><span class="line">-c清空命令历史</span><br><span class="line">-d offset删除历史中指定的第offset命令</span><br><span class="line">n显示最近的n跳命令</span><br><span class="line">-a手动将新执行的命令列表写入到历史文件中</span><br><span class="line">-w保存历史列表到指定的历史文件</span><br></pre></td></tr></table></figure><p><strong>命令历史相关环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HISTSIZE命令历史记录的条数</span><br><span class="line"></span><br><span class="line">HISTFILE指定存储命令历史的文件，默认~/.bash_history</span><br><span class="line"></span><br><span class="line">HISTFILESIZE命令历史文件记录历史命令的条数</span><br><span class="line"></span><br><span class="line">HISTTIMEFORMAT=<span class="string">&quot;%F %T `whoami`&quot;</span>显示时间和用户</span><br><span class="line"></span><br><span class="line">HISTCONTROL控制命令历史的记录方式</span><br><span class="line">ignoredups默认，忽略重复的命令，相同且连续为“重复”</span><br><span class="line">ignorespace忽略所有以空白开头的命令</span><br><span class="line">ignoreboth相当于ignoredups，ignorespace的组合</span><br><span class="line">erasedups删除重复命令</span><br></pre></td></tr></table></figure><p><strong>持久保存变量</strong></p><p>​使用 export 变量名&#x3D;”值” 的形式存放在 &#x2F;etc&#x2F;profile 或 ~&#x2F;.bash_profile 中实现永久保存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat ./.bash_profile</span></span><br><span class="line"><span class="comment"># .bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the aliases and functions</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/.bashrc ]; <span class="keyword">then</span></span><br><span class="line">. ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific environment and startup programs</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="built_in">export</span> HISTCONTROL=ignoreboth</span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T &quot;</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># history 2</span></span><br><span class="line">  999  2022-08-16 08:02:43 <span class="built_in">exit</span></span><br><span class="line"> 1000  2022-08-16 08:02:47 <span class="built_in">history</span> 2</span><br></pre></td></tr></table></figure><h3 id="七、BASH快捷键"><a href="#七、BASH快捷键" class="headerlink" title="七、BASH快捷键"></a>七、BASH快捷键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + l清屏，相当于clear命令</span><br><span class="line">Ctrl + s阻止屏幕输出</span><br><span class="line">Ctrl + q允许屏幕输出</span><br><span class="line">Ctrl + c终止命令</span><br><span class="line">Ctrl + z挂起命令</span><br><span class="line">Ctrl + a光标移动到行首</span><br><span class="line">Ctrl + e光标移动到行尾</span><br><span class="line">Ctrl + u从光标处删除至命令行首</span><br><span class="line">Ctrl + k从光标处删除至命令行尾</span><br><span class="line">Alt + r删除整行</span><br><span class="line">Ctrl + w从光标处向左删除单词首</span><br><span class="line">Alt + d从光标处向右删除至词尾</span><br></pre></td></tr></table></figure><p>​注：为了防止Alt快捷键与其他软件冲突，在 Xshell 中启动自己的Alt键</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220816201742468.png" alt="image-20220816201742468" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
