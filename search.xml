<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>文件查找和打包压缩</title>
      <link href="/archives/c871820f.html"/>
      <url>/archives/c871820f.html</url>
      
        <content type="html"><![CDATA[<h1 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h1><p>在文件系统上查找符合条件的文件</p><p>文件查找：</p><ul><li>非实时查找（数据库查找）：locate</li><li>实时查找：find</li></ul><h2 id="一、locate"><a href="#一、locate" class="headerlink" title="一、locate"></a>一、locate</h2><ul><li>locate 查询系统上预先建立的文件索引数据库 /var/lib/mlocate/mlocate.db</li><li>索引的构建是在系统较为空闲时自动进行（周期性任务），执行updatedb可以更新数据库</li><li>索引构建过程需要遍历整个根文件系统，很消耗资源</li><li>locate 和 updatedb 命令来自于 mlocate 包</li></ul><p>工作特点：</p><ul><li>查找速度快</li><li>模糊查找</li><li>非实时查找</li><li>搜索的是文件的全路径，不仅仅是文件名</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><p><code>locate [OPTION]... PATTERN...</code></p><p>常用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i 不区分大小写</span><br><span class="line">-n N 只列举前N个匹配项</span><br><span class="line">-r 使用基本的正则表达式</span><br></pre></td></tr></table></figure><p>示例：locatedb 创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#yum -y install mlocate</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate conf</span></span><br><span class="line">locate: can not <span class="built_in">stat</span> () `/var/lib/mlocate/mlocate.db<span class="string">&#x27;: No such file or directory</span></span><br><span class="line"><span class="string">[root@centos7 ~]#updatedb</span></span><br><span class="line"><span class="string">[root@centos7 ~]#ll /var/lib/mlocate/mlocate.db </span></span><br><span class="line"><span class="string">-rw-r----- 1 root slocate 978791 Oct 11 22:57 /var/lib/mlocate/mlocate.db</span></span><br><span class="line"><span class="string">[root@centos7 ~]#locate -n 3 conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/GeoIP.conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/asound.conf</span></span><br><span class="line"><span class="string">/backup/etc_2022-10-05/chkconfig.d</span></span><br></pre></td></tr></table></figure><p>示例：文件的创建与删除无法立即更新数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment">#touch test1.log</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#updatedb</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">/root/test1.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment">#rm -f test1.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#locate test1.log </span></span><br><span class="line">/root/test1.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><h2 id="二、find"><a href="#二、find" class="headerlink" title="二、find"></a>二、find</h2><p>find 是实时查找工具，通过遍历指定路径完成文件查找</p><p>工作特点：</p><ul><li>查找速度略慢</li><li>精确查找</li><li>实时查找</li><li>查找条件丰富</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find [option] ... [查找路径] [查找条件] [处理动作]</span><br><span class="line"></span><br><span class="line">查找路径：具体查找的目标路径，默认为当前目录</span><br><span class="line">查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所有文件</span><br><span class="line">处理动作：对符合条件的文件做操作，默认输出至屏幕</span><br></pre></td></tr></table></figure><h3 id="2-1-指定搜索目录层级"><a href="#2-1-指定搜索目录层级" class="headerlink" title="2.1 指定搜索目录层级"></a>2.1 指定搜索目录层级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-maxdepth level 最大搜索目录深度，指定目录下的文件为第1级</span><br><span class="line">-minddepth level 最小搜索目录深度</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -maxdepth 2 -mindepth 2</span><br></pre></td></tr></table></figure><h3 id="2-2-先处理该目录中文件再处理目录本身"><a href="#2-2-先处理该目录中文件再处理目录本身" class="headerlink" title="2.2 先处理该目录中文件再处理目录本身"></a>2.2 先处理该目录中文件再处理目录本身</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-depth</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data/test/</span></span><br><span class="line">/data/test/</span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find  /data/test/ -depth</span></span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br><span class="line">/data/test/</span><br></pre></td></tr></table></figure><h3 id="2-3-根据文件名和inode查找"><a href="#2-3-根据文件名和inode查找" class="headerlink" title="2.3 根据文件名和inode查找"></a>2.3 根据文件名和inode查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-name <span class="string">&quot;文件名称&quot;</span>        <span class="comment"># 支持使用glob，通配符需要加双引号引起来</span></span><br><span class="line">-iname <span class="string">&quot;文件名称&quot;</span>       <span class="comment"># 不区分字母大小写</span></span><br><span class="line">-inum n                <span class="comment"># 按inode号查找</span></span><br><span class="line">-samefile name         <span class="comment"># 相同inode号的文件</span></span><br><span class="line">-links n               <span class="comment"># 链接数为n的文件</span></span><br><span class="line">-regex <span class="string">&quot;PATTERN&quot;</span>       <span class="comment"># 以PATTERN匹配整个文件路径，而非文件名称</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data/ -name &quot;*.txt&quot;</span></span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/f1.txt</span><br></pre></td></tr></table></figure><h3 id="2-4-根据属主、属组查找"><a href="#2-4-根据属主、属组查找" class="headerlink" title="2.4 根据属主、属组查找"></a>2.4 根据属主、属组查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-user USERNAME          <span class="comment"># 查找属主为指定用户的文件</span></span><br><span class="line">-group GROUPNAME        <span class="comment"># 查找属组为指定组的文件</span></span><br><span class="line">-uid USERID             <span class="comment"># 查找属主为指定的UID的文件</span></span><br><span class="line">-gid GROUPID            <span class="comment"># 查找属组为指定的GID文件</span></span><br><span class="line">-nouser                 <span class="comment"># 查找没有属主的文件</span></span><br><span class="line">-nogroup                <span class="comment"># 查找没有属组的文件</span></span><br></pre></td></tr></table></figure><h3 id="2-5-根据文件类型查找"><a href="#2-5-根据文件类型查找" class="headerlink" title="2.5 根据文件类型查找"></a>2.5 根据文件类型查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">type</span> TYPE</span><br><span class="line"></span><br><span class="line">TYPE 可以是以下形式:</span><br><span class="line">f: 普通文件</span><br><span class="line">d: 目录文件</span><br><span class="line">l: 符号链接文件</span><br><span class="line">s: 套接字文件</span><br><span class="line">b: 块设备文件</span><br><span class="line">c: 字符设备文件</span><br><span class="line">p: 管道文件</span><br></pre></td></tr></table></figure><h3 id="2-6-空文件或目录"><a href="#2-6-空文件或目录" class="headerlink" title="2.6 空文件或目录"></a>2.6 空文件或目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-empty</span><br><span class="line">[root@Rocky8-mini data]<span class="comment"># find /data/test/  -empty</span></span><br></pre></td></tr></table></figure><h3 id="2-7-组合条件"><a href="#2-7-组合条件" class="headerlink" title="2.7 组合条件"></a>2.7 组合条件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">与 -a</span><br><span class="line">或 -o</span><br><span class="line">非 -not</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -type d -o -type l | wc -l</span></span><br><span class="line">299</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -type d -o -type l -ls | wc -l</span></span><br><span class="line">84</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ \( -type d -o -type l \) -ls | wc -l</span></span><br><span class="line">299</span><br></pre></td></tr></table></figure><p>德摩根定律</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!A -a !B = !(A -o B)</span><br><span class="line">!A -o !B = !(A -a B)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出/tmp目录下，属主不是root，且文件名不以f开头的文件</span></span><br><span class="line">find /tmp \( -not -user root -a -not -name <span class="string">&#x27;f*&#x27;</span> \) -<span class="built_in">ls</span></span><br><span class="line">find /tmp -not \( -user root -o -name <span class="string">&#x27;f*&#x27;</span> \) -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h3 id="2-8-排除目录"><a href="#2-8-排除目录" class="headerlink" title="2.8 排除目录"></a>2.8 排除目录</h3><p>查找条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-path  PATH</span><br><span class="line">-prune 剪切</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 查找/etc/下，除了/etc/security/目录的其它所有.conf后缀的文件 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ -path &#x27;/etc/security&#x27; -a -prune -o -name &quot;*.conf&quot; | wc -l</span></span><br><span class="line">80</span><br><span class="line">-- 查找/etc/下，除/etc/security和/etc/systemd,/etc/dbus-1三个目录的所有.conf后缀的文件 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc/ \( -path &quot;/etc/security&quot; -o -path &quot;/etc/systemd&quot; -o -path &quot;/etc/dbus-1&quot; \) -a -prune -o -name &quot;*.conf&quot; | wc -l</span></span><br><span class="line">71</span><br></pre></td></tr></table></figure><h3 id="2-9-根据文件大小和时间戳查找"><a href="#2-9-根据文件大小和时间戳查找" class="headerlink" title="2.9 根据文件大小和时间戳查找"></a>2.9 根据文件大小和时间戳查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">文件大小 常用单位：k，M，G</span><br><span class="line">  -size [+|-]<span class="comment">#UNIT</span></span><br><span class="line">    <span class="comment">#UNIT: (#-1,#]</span></span><br><span class="line">    -<span class="comment">#UNIT: [0,#-1]</span></span><br><span class="line">    +<span class="comment">#UNIT: (#,oo)</span></span><br><span class="line">    </span><br><span class="line">时间戳 </span><br><span class="line">以天为单位</span><br><span class="line">  -atime [+|-]<span class="comment">#</span></span><br><span class="line">    <span class="comment">#:[#,#+1)</span></span><br><span class="line">    +<span class="comment">#:[#+1,oo]</span></span><br><span class="line">    -<span class="comment">#:[0,#)</span></span><br><span class="line">  -mtime</span><br><span class="line">  -ctime</span><br><span class="line">以分钟为单位</span><br><span class="line">  -amin</span><br><span class="line">  -mmin</span><br><span class="line">  -cmin</span><br></pre></td></tr></table></figure><h3 id="2-10-根据权限查找"><a href="#2-10-根据权限查找" class="headerlink" title="2.10 根据权限查找"></a>2.10 根据权限查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-perm [/|-]MODe</span><br><span class="line">  MODE: 精确权限匹配</span><br><span class="line">    /MODE: 任何一类(u,g,o)对象的权限中只要能一位匹配即可</span><br><span class="line">    -MODE: 每一类对象都必须同时拥有为其指定的权限标准</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find /etc -perm /060 -<span class="built_in">ls</span> 只有当文件的属组有读或写权限时就可匹配到</span><br><span class="line">find /etc -perm -644 -<span class="built_in">ls</span> 文件的属主有读写权限，属组和其它有读权限</span><br></pre></td></tr></table></figure><h3 id="2-11-正则表达式"><a href="#2-11-正则表达式" class="headerlink" title="2.11 正则表达式"></a>2.11 正则表达式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-regextype <span class="built_in">type</span></span><br><span class="line">-regex pattern</span><br></pre></td></tr></table></figure><h3 id="2-12-处理动作"><a href="#2-12-处理动作" class="headerlink" title="2.12 处理动作"></a>2.12 处理动作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">print</span>    默认动作，将结果输出至屏幕</span><br><span class="line">-<span class="built_in">ls</span>       类似对查找到的文件做<span class="string">&quot;ls -dils&quot;</span></span><br><span class="line">-fls FILE    对查找到文件的长格式信息保存到指定文件中</span><br><span class="line">-delete      删除查找到的文件</span><br><span class="line">-ok COMMAND &#123;&#125; \;      对查找到的每个文件执行由COMMAND指定的命令，对每个文件执行命令前需交互式确认</span><br><span class="line">-<span class="built_in">exec</span> COMMAND &#123;&#125; \;    对查找到的每个文件执行由COMMAND指定的命令</span><br><span class="line">  &#123;&#125;: 用于引用查找到的文件名称自身</span><br><span class="line"></span><br><span class="line">note：find传递查找到的文件至后面指定的命令时，查找到所有符合条件的文件一次性传递给后面的命令</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份配置文件，并添加.bak后缀</span></span><br><span class="line">find -name <span class="string">&quot;*.conf&quot;</span> -<span class="built_in">exec</span> <span class="built_in">cp</span> &#123;&#125; &#123;&#125;.bak \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除存在时间查过三天以上的Tom的临时文件</span></span><br><span class="line">find /tmp -ctime +3 -user Tom -ok <span class="built_in">rm</span> &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在主目录中查找可被其他用户写入的文件并删除其权限</span></span><br><span class="line">find ~ -perm -002 -<span class="built_in">exec</span> <span class="built_in">chmod</span> o-w &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找/data下的权限为644，后缀为sh的普通文件，增加执行权限</span></span><br><span class="line">find /data -perm -644 -<span class="built_in">type</span> f -name <span class="string">&quot;*.sh&quot;</span> -<span class="built_in">exec</span> <span class="built_in">chmod</span> 755 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h2 id="三、参数替换-xargs"><a href="#三、参数替换-xargs" class="headerlink" title="三、参数替换 xargs"></a>三、参数替换 xargs</h2><p>​    有些命令不支持管道来传递参数，如 ls 命令。利用 xargs 命令可以将管道符传递过来的标准输入进行处理，然后传递到指定命令的参数位置上。</p><p>​    find 经常和 xargs 命令进行组合使用，如<code>find | xargs COMMAND</code></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xargs 的默认行为：对多行标准输入进行处理，用空格代替换行符，成为一行，传递给 echo 命令作为参数，进行输出</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq 5 | xargs </span></span><br><span class="line">1 2 3 4 5</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -name &quot;*.txt&quot; | xargs rm</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -name &quot;*.conf&quot; | xargs ls -Sl</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xargs 可以将一行中空格作为分隔符，用 -n# 选项，指定将 # 个空格替换成换行符，输出多行</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;1..6&#125; | xargs -n3</span></span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line"></span><br><span class="line"><span class="comment"># -d 选项为输入指定一个定制的定界符</span></span><br><span class="line"><span class="comment"># echo -n 不输出尾随的换行符</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -n &quot;IXloveXyou!&quot; | xargs -d X</span></span><br><span class="line">I love you!</span><br><span class="line"></span><br><span class="line"><span class="comment"># find配合xargs实现从大到小的文件排序显示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /root -type f | xargs ls -lSh</span></span><br><span class="line">-rw-------  1 root root  29K Oct 15 10:59 /root/.bash_history</span><br><span class="line">-rw-------  1 root root  11K Oct 16 06:48 /root/.viminfo</span><br><span class="line">-rw-------. 1 root root 1.5K Mar 13  2022 /root/anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量创建和删除用户</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo user&#123;1..5&#125; | xargs -n1 useradd</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo user&#123;1..5&#125; | xargs -n1 userdel -r</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用 null 字符代替空格作为分界符</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># touch &quot;a b.txt&quot; a.txt b.txt</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find -type f | xargs ls</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f | xargs ls</span></span><br><span class="line"><span class="built_in">ls</span>: cannot access <span class="string">&#x27;./a&#x27;</span>: No such file or directory</span><br><span class="line">./a.txt  ./b.txt  b.txt</span><br><span class="line"><span class="comment">## 对查找出的文件使用null字符作为分界符</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f -print0</span></span><br><span class="line">./b.txt./a.txt./a b.txt[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment">#</span></span><br><span class="line"><span class="comment">## 使用null字符代替空格做分界符</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># find -type f -print0 | xargs -0 ls -l</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03 <span class="string">&#x27;./a b.txt&#x27;</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03  ./a.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 16 07:03  ./b.txt</span><br></pre></td></tr></table></figure><p>ASCII码中真正的0字符，即null字符</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220323153112986.png" alt="image-20220323153112986"></p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p>1、查找/var目录下属主为root，且属组为mail的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var \( -user root -a -group mail \) -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p>2、查找/var目录下不属于root、lp、gdm的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var -not \( -user root -o -user lp -o -user gdm \)</span><br></pre></td></tr></table></figure><p>3、查找/var目录下最近一周内其内容修改过，同时属主不为root，也不是postfix的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var -mtime -7 -a -user root -a -user postfix</span><br></pre></td></tr></table></figure><p>4、查找当前系统上没有属主或属组，且最近一个周内曾被访问过的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -atime -7 -a \( -nouser -o -nogroup \)</span><br></pre></td></tr></table></figure><p>5、查找/etc目录下大于1M且类型为普通文件的所有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -<span class="built_in">type</span> f -a -size +1M</span><br></pre></td></tr></table></figure><p>6、查找/etc目录下所有用户都没有写权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc  -not -perm /222 </span><br></pre></td></tr></table></figure><p>7、查找/etc目录下至少有一类用户没有执行权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -not -perm -111</span><br></pre></td></tr></table></figure><p>8、查找/etc/init.d目录下，所有用户都有执行权限，且其它用户有写权限的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc/init.d -perm -113</span><br></pre></td></tr></table></figure><h1 id="压缩和解压缩"><a href="#压缩和解压缩" class="headerlink" title="压缩和解压缩"></a>压缩和解压缩</h1><p>主要针对单个文件压缩，而非目录。</p><h2 id="一、compress-和-uncompress"><a href="#一、compress-和-uncompress" class="headerlink" title="一、compress 和 uncompress"></a>一、compress 和 uncompress</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compress Options [file...]</span><br><span class="line">uncompress file.Z</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d 解压缩，相当于 uncompress</span><br><span class="line">-c 结果输出至标准输出，不删除源文件</span><br><span class="line">-v 显示详情</span><br></pre></td></tr></table></figure><p>zcat file.Z 不解压缩的前提下查看文本的文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat file.Z &gt; file</span><br></pre></td></tr></table></figure><h2 id="二、gzip-和-gunzip"><a href="#二、gzip-和-gunzip" class="headerlink" title="二、gzip 和 gunzip"></a>二、gzip 和 gunzip</h2><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip [OPTIONs] FILE...</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-k keep，保留源文件，centos8新特性</span><br><span class="line">-d 解压缩，相当于gunzip</span><br><span class="line">-c 结果输出至标准输出，保留源文件</span><br><span class="line">-<span class="comment"># 指定压缩比(1-9)</span></span><br><span class="line"></span><br><span class="line">zcat file.gz</span><br></pre></td></tr></table></figure><h2 id="三、bzip2-和-bunzip2"><a href="#三、bzip2-和-bunzip2" class="headerlink" title="三、bzip2 和 bunzip2"></a>三、bzip2 和 bunzip2</h2><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-k keep，保留源文件，centos8新特性</span><br><span class="line">-d 解压缩，相当于gunzip</span><br><span class="line">-c 结果输出至标准输出，保留源文件</span><br><span class="line">-<span class="comment"># 指定压缩比(1-9)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不解压缩的前提下查看文本的文件内容</span></span><br><span class="line">bzcat file.bz2</span><br></pre></td></tr></table></figure><h2 id="四、xz-和-unxz"><a href="#四、xz-和-unxz" class="headerlink" title="四、xz 和 unxz"></a>四、xz 和 unxz</h2><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-kkeep，保留源文件</span><br><span class="line">-d解压缩</span><br><span class="line">-c结果输出至标准输出，保留源文件不改变</span><br><span class="line">-<span class="comment">#指定压缩比，# 取值 1-9，默认为6</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不解压缩的前提下查看文本的文件内容</span></span><br><span class="line">xzcat file.xz</span><br></pre></td></tr></table></figure><h2 id="zip-和-unzip"><a href="#zip-和-unzip" class="headerlink" title="zip 和 unzip"></a>zip 和 unzip</h2><p>​    zip 可以实现打包目录和多个文件成一个文件并压缩，但可能会丢失文件属性信息，如：所有者和组信息，一般建议使用 tar 代替。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip</span></span><br><span class="line">Copyright (c) 1990-2008 Info-ZIP - Type <span class="string">&#x27;zip &quot;-L&quot;&#x27;</span> <span class="keyword">for</span> software license.</span><br><span class="line">Zip 3.0 (July 5th 2008). Usage:</span><br><span class="line">zip [-options] [-b path] [-t mmddyyyy] [-n suffixes] [zipfile list] [-xi list]</span><br><span class="line">  The default action is to add or replace zipfile entries from list, <span class="built_in">which</span></span><br><span class="line">  can include the special name - to compress standard input.</span><br><span class="line">  If zipfile and list are omitted, zip compresses stdin to stdout.</span><br><span class="line">  -f   freshen: only changed files  -u   update: only changed or new files</span><br><span class="line">  -d   delete entries <span class="keyword">in</span> zipfile    -m   move into zipfile (delete OS files)</span><br><span class="line">  -r   recurse into directories     -j   junk (don<span class="string">&#x27;t record) directory names</span></span><br><span class="line"><span class="string">  -0   store only                   -l   convert LF to CR LF (-ll CR LF to LF)</span></span><br><span class="line"><span class="string">  -1   compress faster              -9   compress better</span></span><br><span class="line"><span class="string">  -q   quiet operation              -v   verbose operation/print version info</span></span><br><span class="line"><span class="string">  -c   add one-line comments        -z   add zipfile comment</span></span><br><span class="line"><span class="string">  -@   read names from stdin        -o   make zipfile as old as latest entry</span></span><br><span class="line"><span class="string">  -x   exclude the following names  -i   include only the following names</span></span><br><span class="line"><span class="string">  -F   fix zipfile (-FF try harder) -D   do not add directory entries</span></span><br><span class="line"><span class="string">  -A   adjust self-extracting exe   -J   junk zipfile prefix (unzipsfx)</span></span><br><span class="line"><span class="string">  -T   test zipfile integrity       -X   eXclude eXtra file attributes</span></span><br><span class="line"><span class="string">  -y   store symbolic links as the link instead of the referenced file</span></span><br><span class="line"><span class="string">  -e   encrypt                      -n   don&#x27;</span>t compress these suffixes</span><br><span class="line">  -h2  show more <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包并压缩</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -r /backup/test.zip /data/test/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不包括目录本身，只打包目录内的文件和子目录</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cd /data/test/; zip -r /root/test.zip *</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认解压缩至当前目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unzip test.zip</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定解压缩目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># unzip test.zip -d /backup/</span></span><br></pre></td></tr></table></figure><p>实例1：交互式加密和解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -e test.zip *</span></span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line">  adding: a b.txt (stored 0%)</span><br><span class="line">  adding: a.txt.bz2 (stored 0%)</span><br><span class="line">  adding: b.txt (stored 0%)</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># unzip test.zip -d /backup/</span></span><br><span class="line">Archive:  test.zip</span><br><span class="line">[test.zip] a b.txt password: </span><br><span class="line"> extracting: /backup/a b.txt         </span><br><span class="line"> extracting: /backup/a.txt.bz2       </span><br><span class="line"> extracting: /backup/b.txt</span><br></pre></td></tr></table></figure><p>实例2：非交互式加密和解密</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># zip -P 123456 test.zip *</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># unzip -P 123456 test.zip -d /backup/</span></span><br></pre></td></tr></table></figure><h1 id="打包和解包"><a href="#打包和解包" class="headerlink" title="打包和解包"></a>打包和解包</h1><h2 id="一、tar"><a href="#一、tar" class="headerlink" title="一、tar"></a>一、tar</h2><p>​    tar 即磁带归档，可以对目录和多个文件打包成一个文件，并且可以压缩，保留文件属性不丢失，常用于备份功能。</p><p>选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">-A 新增文件到已经存在的备份文件</span><br><span class="line">-b&lt;区块数目&gt; 设置每个记录的区块数目，每个区块大小为12Bytes</span><br><span class="line">-B 读取数据时重设区块的大小</span><br><span class="line">-c 建立新的备份文件</span><br><span class="line">-C&lt;目的目录&gt; 切换到指定的目录</span><br><span class="line">-d 对比备份文件内和文件系统上的文件的差异</span><br><span class="line">-f&lt;备份文件&gt; 指定备份文件</span><br><span class="line">-F&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件</span><br><span class="line">-g或--listed-incremental 处理GNU格式的大量备份</span><br><span class="line">-G或--incremental 处理旧的GNU格式的大量备份。</span><br><span class="line">-h或--dereference 不建立符号连接，直接复制该连接所指向的原始文件。</span><br><span class="line">-i或--ignore-zeros 忽略备份文件中的0 Byte区块，也就是EOF。</span><br><span class="line">-k或--keep-old-files 解开备份文件时，不覆盖已有的文件。</span><br><span class="line">-K&lt;文件&gt;或--starting-file=&lt;文件&gt; 从指定的文件开始还原。</span><br><span class="line">-l或--one-file-system 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相</span><br><span class="line">同，否则不予复制。</span><br><span class="line">-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。</span><br><span class="line">-m或--modification-time 还原文件时，不变更文件的更改时间。</span><br><span class="line">-M或--multi-volume 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。</span><br><span class="line">-N&lt;日期格式&gt;或--newer=&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。</span><br><span class="line">-o或--old-archive或--portability 将资料写入备份文件时使用V7格式。</span><br><span class="line">-O或--stdout 把从备份文件里还原的文件输出到标准输出设备。</span><br><span class="line">-p或--same-permissions 用原来的文件权限还原文件。</span><br><span class="line">-P或--absolute-names 文件名使用绝对名称，不移除文件名称前的<span class="string">&quot;/&quot;</span>号。</span><br><span class="line">-r或--append 新增文件到已存在的备份文件的结尾部分。</span><br><span class="line">-R或--block-number 列出每个信息在备份文件中的区块编号。</span><br><span class="line">-s或--same-order 还原文件的顺序和备份文件内的存放顺序相同。</span><br><span class="line">-S或--sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。</span><br><span class="line">-t或--list 列出备份文件的内容。</span><br><span class="line">-T&lt;范本文件&gt;或--files-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或</span><br><span class="line">建立符合设置条件的文件。</span><br><span class="line">-u或--update 仅置换较备份文件内的文件更新的文件。</span><br><span class="line">-U或--unlink-first 解开压缩文件还原文件之前，先解除文件的连接。</span><br><span class="line">-v或--verbose 显示指令执行过程。</span><br><span class="line">-V&lt;卷册名称&gt;或--label=&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。</span><br><span class="line">-w或--interactive 遭遇问题时先询问用户。</span><br><span class="line">-W或--verify 写入备份文件后，确认文件正确无误。</span><br><span class="line">-x或--extract或--get 从备份文件中还原文件。</span><br><span class="line">-X&lt;范本文件&gt;或--exclude-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除</span><br><span class="line">符合设置条件的文件。</span><br><span class="line">-z或--gzip或--ungzip 通过gzip指令处理备份文件。</span><br><span class="line">-Z或--compress或--uncompress 通过compress指令处理备份文件。</span><br><span class="line">-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。</span><br><span class="line">--after-date=&lt;日期时间&gt; 此参数的效果和指定<span class="string">&quot;-N&quot;</span>参数相同。</span><br><span class="line">--atime-preserve 不变更文件的存取时间。</span><br><span class="line">--backup=&lt;备份方式&gt;或--backup 移除文件前先进行备份。</span><br><span class="line">--checkpoint 读取备份文件时列出目录名称。</span><br><span class="line">--concatenate 此参数的效果和指定<span class="string">&quot;-A&quot;</span>参数相同。</span><br><span class="line">--confirmation 此参数的效果和指定<span class="string">&quot;-w&quot;</span>参数相同。</span><br><span class="line">--delete 从备份文件中删除指定的文件。</span><br><span class="line">--exclude=&lt;范本样式&gt; 排除符合范本样式的文件。</span><br><span class="line">--group=&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。</span><br><span class="line">--<span class="built_in">help</span> 在线帮助。</span><br><span class="line">--ignore-failed-read 忽略数据读取错误，不中断程序的执行。</span><br><span class="line">--new-volume-script=&lt;Script文件&gt; 此参数的效果和指定<span class="string">&quot;-F&quot;</span>参数相同。</span><br><span class="line">--newer-mtime 只保存更改过的文件。</span><br><span class="line">--no-recursion 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。</span><br><span class="line">--null 从null设备读取文件名称。</span><br><span class="line">--numeric-owner 以用户识别码及群组识别码取代用户名称和群组名称。</span><br><span class="line">--owner=&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。</span><br><span class="line">--posix 将数据写入备份文件时使用POSIX格式。</span><br><span class="line">--preserve 此参数的效果和指定<span class="string">&quot;-ps&quot;</span>参数相同。</span><br><span class="line">--preserve-order 此参数的效果和指定<span class="string">&quot;-A&quot;</span>参数相同。</span><br><span class="line">--preserve-permissions 此参数的效果和指定<span class="string">&quot;-p&quot;</span>参数相同。</span><br><span class="line">--record-size=&lt;区块数目&gt; 此参数的效果和指定<span class="string">&quot;-b&quot;</span>参数相同。</span><br><span class="line">--recursive-unlink 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。</span><br><span class="line">--remove-files 文件加入备份文件后，就将其删除。</span><br><span class="line">--rsh-command=&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。</span><br><span class="line">--same-owner 尝试以相同的文件拥有者还原文件。</span><br><span class="line">--suffix=&lt;备份字尾字符串&gt; 移除文件前先行备份。</span><br><span class="line">--totals 备份文件建立后，列出文件大小。</span><br><span class="line">--use-compress-program=&lt;执行指令&gt; 通过指定的指令处理备份文件。</span><br><span class="line">--version 显示版本信息。</span><br><span class="line">--volno-file=&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。</span><br></pre></td></tr></table></figure><p>1、创建归档，保留权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -c -f -p /PATH/TO/SOMEFILE.tar FILE...</span><br><span class="line">tar -cpf /PATH/TO/SOMEFILE.tar FILE...</span><br></pre></td></tr></table></figure><p>2、追加文件至归档，不支持对压缩文件追加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -rf /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><p>3、查看归档文件中的文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -t -f /PATH/TO/SOMEFILE.tar</span><br></pre></td></tr></table></figure><p>4、展开归档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar xf /PATH/TO/SOMEFILE.tar</span><br><span class="line">tar xf /PATH/TO/SOMEFILE.tar -C /PATH/TO/DIR</span><br></pre></td></tr></table></figure><p>5、结合压缩工具实现归档并压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-z 相当于gzip压缩工具</span><br><span class="line">-j 相当于bzip2</span><br><span class="line">-J 相当于xz</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar zcvf test.tar.gz /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar jcvf test.tar.bz2 /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tar Jcvf test.tar.xz /data/test/</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ls</span></span><br><span class="line">test.tar.bz2  test.tar.gz  test.tar.xz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只打包目录内的文件，不包括目录本身</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cd /data/test/</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># tar zcvf /root/test.tar.gz *</span></span><br></pre></td></tr></table></figure><p>6、对文件进行归档压缩式，排除指定的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--exclude 排除文件</span><br><span class="line"></span><br><span class="line">tar zcvf /root/test.tgz --exclude=/data/test/a.txt --exclude=/data/test/b.txt /data/test</span><br></pre></td></tr></table></figure><p>7、选择指定的输入和选择要排除的文件列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-T 选择指定的输入文件</span><br><span class="line">-X 选择只当包含要排除的文件列表</span><br><span class="line"></span><br><span class="line">tar zcvf backup.tgz -T /root/includefilelist -X /root/excludefilelist</span><br></pre></td></tr></table></figure><h2 id="二、split"><a href="#二、split" class="headerlink" title="二、split"></a>二、split</h2><p>split 命令可以将一个文件分割成多个文件</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个10M的文件</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># dd if=/dev/zero of=/data/test/bigfile bs=1M count=10</span></span><br><span class="line">10+0 records <span class="keyword">in</span></span><br><span class="line">10+0 records out</span><br><span class="line">10485760 bytes (10 MB, 10 MiB) copied, 0.00859871 s, 1.2 GB/s</span><br><span class="line"><span class="comment"># -b 指定分割的大小</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># split -b 1M bigfile smallfile</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll -h</span></span><br><span class="line">total 20M</span><br><span class="line">-rw-r--r-- 1 root root  10M Mar 23 04:23  bigfile</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaa</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileab</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileac</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfilead</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileae</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaf</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileag</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileah</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileai</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:24  smallfileaj</span><br><span class="line"><span class="comment"># -d 分割后的文件用数字后缀 </span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># split -b 1M -d  bigfile smallfile | ll -h</span></span><br><span class="line">total 20M</span><br><span class="line">-rw-r--r-- 1 root root  10M Mar 23 04:23  bigfile</span><br><span class="line">-rw-r--r-- 1 root root    0 Mar 23 04:28  smallfile00</span><br><span class="line">-rw-r--r-- 1 root root 468K Mar 23 04:28  smallfile01</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile02</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile03</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile04</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile05</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile06</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile07</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile08</span><br><span class="line">-rw-r--r-- 1 root root 1.0M Mar 23 04:28  smallfile09</span><br><span class="line"><span class="comment"># 将切割后的小文件合并成一个大文件</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat smallfile* &gt; bigfile1</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll -h bigfile1</span></span><br><span class="line">-rw-r--r-- 1 root root 10M Mar 23 04:29 bigfile1</span><br></pre></td></tr></table></figure><h2 id="三、cpio"><a href="#三、cpio" class="headerlink" title="三、cpio"></a>三、cpio</h2><p>cpio 是通过重定向的方式将文件进行打包备份、还原恢复的工具，它可以解压缩以“.cpio”和“.tar”结尾的文件</p><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cpio [option] &gt; 文件名或设备名</span><br><span class="line">cpio [option] &lt; 文件名或设备名</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-o output模式，打包，将标准输入传入的文件名打包后发送到标准输出</span><br><span class="line">-i input模式，解包，对标准输入传入的打包文件名解包到当前目录</span><br><span class="line">-t 预览，查看标准输入传入的打包文件中包含的文件列表</span><br><span class="line">-O filename 输出到指定的归档文件名</span><br><span class="line">-A 向已存在的归档文件中追加文件</span><br><span class="line">-I filename 对指定的归档文件名解压</span><br><span class="line">-F filename 使用指定的文件名替代标准输入或输出</span><br><span class="line">-d 解包生成目录，在cpio还原时，自动的建立目录</span><br><span class="line">-v 显示打包过程中的文件名称</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份/etc目录</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /etc -print | cpio -ov &gt; bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将/data内容追加到bak.cpio</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># find /data | cpio -oA -F bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容预览</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cpio -tv &lt; bak.cpio</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解包文件</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cpio -idv &lt; bak.cpio</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 脚本编程</title>
      <link href="/archives/c5a7de75.html"/>
      <url>/archives/c5a7de75.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Shell-脚本的基本用法"><a href="#一、Shell-脚本的基本用法" class="headerlink" title="一、Shell 脚本的基本用法"></a>一、Shell 脚本的基本用法</h2><h3 id="1-1-Shell-脚本的用途"><a href="#1-1-Shell-脚本的用途" class="headerlink" title="1.1 Shell 脚本的用途"></a>1.1 Shell 脚本的用途</h3><ul><li>将简单的命令进行组合完成复杂的工作，能够自动化执行，从而提高工作效率</li><li>减少命令的重复输入</li><li>将软件或应用的安装及配置实现标准化</li><li>方便日常性、重复性的运维工作实现，如：文件的打包压缩备份、监控系统的运行状态等</li></ul><h3 id="1-2-Shell-脚本的基本结构"><a href="#1-2-Shell-脚本的基本结构" class="headerlink" title="1.2 Shell 脚本的基本结构"></a>1.2 Shell 脚本的基本结构</h3><p>Shell 脚本编程：是基于过程式、解释执行的语言</p><p>Shell 脚本：包含一些命令或声明，符合一定格式的文本文件，首行需shebang机制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shebang机制如下类型</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#!/usr/bin/perl</span></span><br></pre></td></tr></table></figure><h3 id="1-3-Shell-脚本注释规范"><a href="#1-3-Shell-脚本注释规范" class="headerlink" title="1.3 Shell 脚本注释规范"></a>1.3 Shell 脚本注释规范</h3><p>（1）首行为调用使用的语言，即shebang机制</p><p>（2）程序名，避免因更改文件名而无法找到正确的文件 </p><p>（3）该脚本的版本号</p><p>（4）更改后的时间</p><p>（5）作者的相关信息</p><p>（6）该程序的作用及注意事项</p><p>（7）各版本的更新简要说明</p><h3 id="1-4-第一个简单Shell脚本示例"><a href="#1-4-第一个简单Shell脚本示例" class="headerlink" title="1.4 第一个简单Shell脚本示例"></a>1.4 第一个简单Shell脚本示例</h3><p><strong>示例：第一个脚本示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># vim /shell/hello.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#----------------------------------------------</span></span><br><span class="line"><span class="comment"># Filename:       hello.sh</span></span><br><span class="line"><span class="comment"># Version:        1.0</span></span><br><span class="line"><span class="comment"># Date:           2022/10/01</span></span><br><span class="line"><span class="comment"># Author:         Herbert</span></span><br><span class="line"><span class="comment"># Email:          wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># Website:        wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># Description:    This is the first script</span></span><br><span class="line"><span class="comment">#----------------------------------------------</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello, world!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式1</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># bash /shell/hello.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式2</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/hello.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式3</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># bash &lt; /shell/hello.sh </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式4</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod +x /shell/hello.sh</span></span><br><span class="line"><span class="comment">## 绝对路径</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># /shell/hello.sh</span></span><br><span class="line"><span class="comment">## 相对路径</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cd /shell</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ./hello.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行方式5，在本地执行远程主机的shell脚本</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-5-脚本调试"><a href="#1-5-脚本调试" class="headerlink" title="1.5 脚本调试"></a>1.5 脚本调试</h3><p>只检测脚本中的语法错误，不检查命令错误，并不执行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -n /path/script</span><br></pre></td></tr></table></figure><p>调试并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash -x /path/script</span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash -x hello.sh </span></span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;Hello, world!&#x27;</span></span><br><span class="line">Hello, world!</span><br></pre></td></tr></table></figure><p>注：常见的三种脚本错误方式</p><ul><li>语法错误，后续命令将无法执行，使用 bash -n 检查错误，提示的出错行数不一定准确</li><li>命令错误，默认后续的命令还会执行，使用 bash -x 进行观察</li><li>逻辑错误，只能使用 bash -x 进行观察</li></ul><h3 id="1-6-变量"><a href="#1-6-变量" class="headerlink" title="1.6 变量"></a>1.6 变量</h3><h4 id="1-6-1-变量"><a href="#1-6-1-变量" class="headerlink" title="1.6.1 变量"></a>1.6.1 变量</h4><p>变量表示命名的内存空间，将数据放在内存空间中，通过变量名的引用来获取数据</p><h4 id="1-6-2-Shell-中变量的命名法则"><a href="#1-6-2-Shell-中变量的命名法则" class="headerlink" title="1.6.2 Shell 中变量的命名法则"></a>1.6.2 Shell 中变量的命名法则</h4><p><strong>1、命名要求</strong></p><ul><li>区分大小写</li><li>不能使用程序中的保留字和内置变量</li><li>只能使用字母、数字、下划线，不能以数字开头，不支持短横线 “-”</li></ul><p><strong>2、命名习惯</strong></p><ul><li>见名知义，用英文命名，体现出实际作用，不可用简写，如：ATM</li><li>变量名要大写</li><li>局部变量小写</li><li>函数名小写</li><li>大驼峰形式：StudentFirstName</li><li>小驼峰形式：studentFirstName</li><li>下划线：student_name</li></ul><h4 id="1-6-3-变量的定义和引用"><a href="#1-6-3-变量的定义和引用" class="headerlink" title="1.6.3 变量的定义和引用"></a>1.6.3 变量的定义和引用</h4><p>变量的类型</p><ul><li>普通变量：生效范围为当前shell进程；对当前 shell 之外的其它 shell 进程，或当前 shell 的子 shell 进程均无效</li><li>环境变量：生效范围为当前shell及其子进程</li><li>本地变量：生效范围为当前shell进程中某代码片段，通常指某段函数中</li></ul><p>变量赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;value&#x27;</span></span><br><span class="line"></span><br><span class="line">value 形式如下：</span><br><span class="line">直接字符串: name=<span class="string">&#x27;root&#x27;</span></span><br><span class="line">变量引用: name=<span class="string">&quot;<span class="variable">$USER</span>&quot;</span></span><br><span class="line">命令引用: name=`COMMAND` 或 name=$(COMMAND)</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：变量赋值是临时生效，当退出终端后，变量会自动删除，无法持久保存，脚本中的变量会随着脚本结束自动删除</span></span><br></pre></td></tr></table></figure><p>变量引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span></span><br><span class="line"><span class="variable">$&#123;name&#125;</span></span><br></pre></td></tr></table></figure><p>弱引用和强引用</p><ul><li>“$name”      弱引用，其中定义的变量会被替换为变量值</li><li>‘$name’       强引用，定义的变量不会被替换为变量值，引号中是什么就会输出什么</li></ul><p>显示定义的变量和删除变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span></span><br><span class="line"><span class="built_in">unset</span> &lt;name&gt;</span><br></pre></td></tr></table></figure><p><strong>示例：变量的各种赋值和引用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;I am $NAME&quot;</span></span><br><span class="line">I am Herbert</span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &#x27;I am $NAME&#x27;</span></span><br><span class="line">I am <span class="variable">$NAME</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NAME=$USER</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">root</span><br><span class="line">[root@centos7 ~]<span class="comment"># NAME=`whoami`</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">root</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=`ls /run`</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $FILE</span></span><br><span class="line">auditd.pid console crond.pid cron.reboot cryptsetup dbus dhclient-eth0.pid dmeventd-client dmeventd-server faillock httpd initramfs lock <span class="built_in">log</span> lvm lvmetad.pid mount netreport NetworkManager plymouth sepermit setrans sshd.pid sudo syslogd.pid systemd tmpfiles.d tuned udev user utmp vmware</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=/etc/*;echo $FILE</span></span><br><span class="line">/etc/adjtime /etc/aliases /etc/aliases.db /etc/alternatives /etc/anacrontab</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NUM=`seq 3`;echo $NUM</span></span><br><span class="line">1 2 3</span><br><span class="line">[root@centos7 ~]<span class="comment"># NUM=`seq 3`;echo &quot;$NUM&quot;</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># NAMES=&quot;zhao</span></span><br><span class="line">&gt; qian</span><br><span class="line">&gt; sun</span><br><span class="line">&gt; li<span class="string">&quot;</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo <span class="variable">$NAMES</span></span></span><br><span class="line"><span class="string">zhao qian sun li</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo &quot;</span><span class="variable">$NAMES</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">zhao</span></span><br><span class="line"><span class="string">qian</span></span><br><span class="line"><span class="string">sun</span></span><br><span class="line"><span class="string">li</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@centos7 ~]# NAME=Herbert</span></span><br><span class="line"><span class="string">[root@centos7 ~]# AGE=20</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo $NAME_<span class="variable">$AGE</span></span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">[root@centos7 ~]# echo <span class="variable">$&#123;NAME&#125;</span>_<span class="variable">$AGE</span></span></span><br><span class="line"><span class="string">Herbert_20</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 利用变量实现动态命令</span></span><br><span class="line"><span class="string">[root@centos7 ~]# CMD=hostname</span></span><br><span class="line"><span class="string">[root@centos7 ~]# <span class="variable">$CMD</span></span></span><br><span class="line"><span class="string">centos7</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 删除定义的变量</span></span><br><span class="line"><span class="string">[root@centos7 ~]# NAME=Herbert;echo <span class="variable">$NAME</span></span></span><br><span class="line"><span class="string">Herbert</span></span><br><span class="line"><span class="string">[root@centos7 ~]# unset NAME;echo <span class="variable">$NAME</span></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h5 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h5><p>1、编写脚本 systeminfo.sh，显示当前主机系统信息，包括:主机名，IPv4地址，操作系统版本，内核<br>版本，CPU型号，内存大小，硬盘大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># cat systeminfo.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : systeminfo.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 2.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-03</span></span><br><span class="line"><span class="comment"># * Description   : display information about the system</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">RED=<span class="string">&quot;\E[1;31m&quot;</span></span><br><span class="line">GREEN=<span class="string">&quot;\E[1;32m&quot;</span></span><br><span class="line">END=<span class="string">&quot;\E[0m&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$GREEN</span>---------------------Host Systeminfo-------------------------<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;HOSTNAME:           <span class="variable">$RED</span>`hostname`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;IPADDR:             <span class="variable">$RED</span>`ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print <span class="variable">$2</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;OSVersion:          <span class="variable">$RED</span>`cat /etc/redhat-release`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;KERNAL:             <span class="variable">$RED</span>`uname -r`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;CPU:                <span class="variable">$RED</span>`lscpu | grep &#x27;Model name&#x27; | tr -s &#x27; &#x27;|cut -d : -f2`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;MEMORY:             <span class="variable">$RED</span>`free -h | awk &#x27;/^Mem/&#123;print <span class="variable">$2</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;DISK:               <span class="variable">$RED</span>`lsblk | awk -v ORS=&#x27;,&#x27; &#x27;/^sd/&#123;print <span class="variable">$1</span>,<span class="variable">$4</span>&#125;&#x27;`<span class="variable">$END</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$GREEN</span>---------------------      END      -------------------------<span class="variable">$END</span>&quot;</span></span><br></pre></td></tr></table></figure><p>2、编写脚本 backup.sh，可实现每日将 /etc/ 目录备份到 /backup/etcYYYY-mm-dd中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># cat backup.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mStart Backup\E[0m&quot;</span></span><br><span class="line">[ -d /backup ] || <span class="built_in">mkdir</span> /backup</span><br><span class="line"><span class="built_in">cp</span> -a /etc /backup/etc_`<span class="built_in">date</span> +%F`</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mBackup finished\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每天的凌晨2点运行脚本</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># crontab -e</span></span><br><span class="line"> * 2 * * * <span class="string">&quot;bash /shell/backup.sh&quot;</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 disk.sh，显示当前硬盘分区中空间利用率最大的值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment"># vim disk_utilization_rate.sh</span></span><br><span class="line">Most_Disk_Rate=`<span class="built_in">df</span> -Th | awk <span class="string">&#x27;/^\/dev\/sd/&#123;print $6&#125;&#x27;</span> | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> -n1`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;磁盘空间利用率最大值为：<span class="variable">$Most_Disk_Rate</span>&quot;</span></span><br></pre></td></tr></table></figure><h4 id="1-6-4-环境变量"><a href="#1-6-4-环境变量" class="headerlink" title="1.6.4 环境变量"></a>1.6.4 环境变量</h4><p>环境变量的特点</p><ul><li>子进程可以进程父进程的变量，但父进程无法使用子进程的变量</li><li>一旦子进程修改从父进程继承的变量，新的值将会传递给孙子进程</li><li>一般在系统配置文件中使用，脚本中使用较少</li></ul><p>变量的声明和赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 声明并赋值</span></span><br><span class="line"><span class="built_in">export</span> name=value</span><br><span class="line"><span class="built_in">declare</span> -x name=value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分步实现</span></span><br><span class="line">name=value</span><br><span class="line"><span class="built_in">export</span> name</span><br></pre></td></tr></table></figure><p>变量的引用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span></span><br><span class="line"><span class="variable">$&#123;name&#125;</span></span><br></pre></td></tr></table></figure><p>显示所有环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span></span><br><span class="line"><span class="built_in">printenv</span></span><br><span class="line"><span class="built_in">export</span></span><br><span class="line"><span class="built_in">declare</span> -x</span><br></pre></td></tr></table></figure><p>查看指定进程的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/<span class="variable">$PID</span>/environ</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /proc/1495/environ | tr &#x27;\0&#x27; &#x27;\n&#x27;</span></span><br><span class="line">USER=root</span><br><span class="line">LOGNAME=root</span><br><span class="line">HOME=/root</span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAIL=/var/mail/root</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">SSH_CLIENT=192.168.119.1 12198 22</span><br><span class="line">SSH_CONNECTION=192.168.119.1 12198 192.168.119.165 22</span><br><span class="line">SSH_TTY=/dev/pts/0</span><br><span class="line">TERM=xterm</span><br><span class="line">XDG_SESSION_ID=1</span><br><span class="line">XDG_RUNTIME_DIR=/run/user/0</span><br></pre></td></tr></table></figure><p>删除变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> name</span><br></pre></td></tr></table></figure><h4 id="1-6-5-只读变量"><a href="#1-6-5-只读变量" class="headerlink" title="1.6.5 只读变量"></a>1.6.5 只读变量</h4><p>​    只能声明定义，后续不能修改和删除，即常量</p><p>声明只读变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name</span><br></pre></td></tr></table></figure><p>查看只读变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">readonly</span></span><br><span class="line"><span class="built_in">declare</span> -r</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># readonly PI=3.14159;echo $PI</span></span><br><span class="line">3.14159</span><br><span class="line">[root@centos7 ~]<span class="comment"># PI=3.14</span></span><br><span class="line">-bash: PI: <span class="built_in">readonly</span> variable</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># exit</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $PI</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure><h4 id="1-6-6-位置变量"><a href="#1-6-6-位置变量" class="headerlink" title="1.6.6 位置变量"></a>1.6.6 位置变量</h4><p>​    在bash shell中内置的变量，在脚本代码中通过调用命令行传递给脚本的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,··· 对应第1、第2、第3个等参数，<span class="built_in">shift</span> [n]换位置</span><br><span class="line"><span class="variable">$0</span>命令本身，包括路径</span><br><span class="line">$*传递给脚本的所有参数，全部参数合并成一个字符串</span><br><span class="line"><span class="variable">$@</span>传递给脚本的所有参数，每个参数为独立字符串</span><br><span class="line"><span class="variable">$#</span>传递给脚本的参数个数</span><br><span class="line"></span><br><span class="line">$*和<span class="variable">$@</span> 只在被双引号包起来的时候才会有差异</span><br><span class="line"></span><br><span class="line">清空所有位置变量</span><br><span class="line"><span class="built_in">set</span> --</span><br></pre></td></tr></table></figure><p><strong>示例1</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 位置变量的简单使用</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/arg.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : arg.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-03</span></span><br><span class="line"><span class="comment"># * Description   : 位置变量的简单使用</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1st arg is <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2st arg is <span class="variable">$2</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3st arg is <span class="variable">$3</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10st arg is <span class="variable">$&#123;10&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;11st arg is <span class="variable">$&#123;11&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The number of arg is <span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All args are: $*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;All args are: <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The script path is <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The scriptname is `basename <span class="variable">$0</span>`&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash /shell/arg.sh &#123;a..z&#125;</span></span><br><span class="line">1st arg is a</span><br><span class="line">2st arg is b</span><br><span class="line">3st arg is c</span><br><span class="line">10st arg is j</span><br><span class="line">11st arg is k</span><br><span class="line">The number of arg is 26</span><br><span class="line">All args are: a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">All args are: a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">The script path is /shell/arg.sh</span><br><span class="line">The scriptname is arg.sh</span><br></pre></td></tr></table></figure><p><strong>示例2</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $* 和 $@ 的区别</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat f1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f1.sh: all args are <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f1.sh: all args are $*&quot;</span></span><br><span class="line"></span><br><span class="line">./file.sh <span class="string">&quot;$*&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat f2.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f2.sh: all args are <span class="variable">$@</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;f2.sh: all args are $*&quot;</span></span><br><span class="line"></span><br><span class="line">./file.sh <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat file.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;file.sh: 1st arg is <span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## $*将所有的参数作为一个整体进行传递，而$@将所有参数当作独立的参数全部传递过去</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash f1.sh a b c</span></span><br><span class="line">f1.sh: all args are a b c</span><br><span class="line">f1.sh: all args are a b c</span><br><span class="line">file.sh: 1st arg is a b c</span><br><span class="line">[root@centos7 shell]<span class="comment"># bash f2.sh a b c</span></span><br><span class="line">f2.sh: all args are a b c</span><br><span class="line">f2.sh: all args are a b c</span><br><span class="line">file.sh: 1st arg is a</span><br></pre></td></tr></table></figure><p><strong>示例3</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用软链接实现同一个脚本的不同功能</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$0</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ln -s test.sh a.sh</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># ln -s test.sh b.sh</span></span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># bash a.sh </span></span><br><span class="line">a.sh</span><br><span class="line">[root@centos7 shell]<span class="comment"># bash b.sh </span></span><br><span class="line">b.sh</span><br></pre></td></tr></table></figure><p><strong>示例4</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删库跑路命令安全实现</span></span><br><span class="line">[root@centos7 shell]<span class="comment"># cat rm.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DIR=/tmp/`<span class="built_in">date</span> +%F_%T`</span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">mv</span> $* <span class="variable">$DIR</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Move  $* to <span class="variable">$DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line">[root@centos7 shell]<span class="comment"># chmod +x rm.sh </span></span><br><span class="line">[root@centos7 shell]<span class="comment"># alias rm=&#x27;/shell/rm.sh&#x27;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># touch &#123;1..5&#125;.txt</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># rm *.txt</span></span><br><span class="line">Move  1.txt 2.txt 3.txt 4.txt 5.txt to /tmp/2022-10-03_21:57:42</span><br></pre></td></tr></table></figure><h4 id="1-6-7-退出状态码变量"><a href="#1-6-7-退出状态码变量" class="headerlink" title="1.6.7 退出状态码变量"></a>1.6.7 退出状态码变量</h4><p>​    进程执行后，将使用变量$?保存状态码的相关数字，不同的值反映出成功或失败，$?取值范围0~255</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$? 为0，进程返回状态为成功 </span><br><span class="line">$? 为1~255，失败</span><br></pre></td></tr></table></figure><p>用户可以在脚本中自定义退出的状态码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> [n]</span><br></pre></td></tr></table></figure><p>注意</p><ul><li>脚本中一旦遇到 exit 命令，脚本会立即终止；终止退出的状态取决于 exit 命令后面的数字</li><li>如果 exit 后面无数字，终止退出状态取决于 exit 命令前面命令执行结果</li><li>如果没有给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码</li></ul><h4 id="1-6-8-展开命令行"><a href="#1-6-8-展开命令行" class="headerlink" title="1.6.8 展开命令行"></a>1.6.8 展开命令行</h4><p>展开命令执行顺序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">把命令行分成单个命令词</span><br><span class="line">展开别名</span><br><span class="line">展开大括号的声明&#123;&#125;</span><br><span class="line">展开波浪符声明 ~</span><br><span class="line">命令替换$() 和 ``</span><br><span class="line">再次把命令行分成命令词</span><br><span class="line">展开文件通配*、?、[abc]等等</span><br><span class="line">准备I/0重导向 &lt;、&gt;</span><br><span class="line">运行命令</span><br></pre></td></tr></table></figure><h4 id="1-6-9-脚本安全和set"><a href="#1-6-9-脚本安全和set" class="headerlink" title="1.6.9 脚本安全和set"></a>1.6.9 脚本安全和set</h4><p>set 命令：可以用来定制 shell 环境</p><p><strong>$- 变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">h: hashall，打开选项后，Shell 会将命令所在的路径<span class="built_in">hash</span>下来，避免每次都要查询。通过<span class="built_in">set</span> +h将h选项关闭</span><br><span class="line">i: interactive-comments，包含这个选项说明当前的 shell 是一个交互式的 shell。所谓的交互式shell,在脚本中，i选项是关闭的</span><br><span class="line">m: monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等</span><br><span class="line">B: braceexpand，大括号扩展</span><br><span class="line">H: <span class="built_in">history</span>，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的一个历史命令，“!n”返回第 n 个历史命令</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $-</span></span><br><span class="line">himBHs</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># set +h</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $-</span></span><br><span class="line">imBHs</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line">-bash: <span class="built_in">hash</span>: hashing disabled</span><br></pre></td></tr></table></figure><p><strong>set 命令实现脚本安全</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-u在扩展一个没有设置的变量时，显示错误信息，等同 <span class="built_in">set</span> -o nounset</span><br><span class="line">-e如果一个命令返回一个非0退出状态值就退出，等同 <span class="built_in">set</span> -o errexit</span><br><span class="line">-ooption显示，打开或关闭选项</span><br><span class="line">    <span class="built_in">set</span> -o显示选项</span><br><span class="line">    <span class="built_in">set</span> -o 选项打开选项</span><br><span class="line">    <span class="built_in">set</span> +o 选项关闭选项</span><br><span class="line">-x当执行命令时，打印命令及其参数，类似 bash -x</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># set -o</span></span><br><span class="line">allexport       off</span><br><span class="line">braceexpand     on</span><br><span class="line">emacs           on</span><br><span class="line">errexit         off</span><br><span class="line">errtrace        off</span><br><span class="line">functrace       off</span><br><span class="line">hashall         off</span><br><span class="line">histexpand      on</span><br><span class="line"><span class="built_in">history</span>         on</span><br><span class="line">ignoreeof       off</span><br><span class="line">interactive-comments    on</span><br><span class="line">keyword         off</span><br><span class="line">monitor         on</span><br><span class="line">noclobber       off</span><br><span class="line">noexec          off</span><br><span class="line"><span class="built_in">noglob</span>          off</span><br><span class="line">nolog           off</span><br><span class="line">notify          off</span><br><span class="line">nounset         off</span><br><span class="line">onecmd          off</span><br><span class="line">physical        off</span><br><span class="line">pipefail        off</span><br><span class="line">posix           off</span><br><span class="line">privileged      off</span><br><span class="line">verbose         off</span><br><span class="line">vi              off</span><br><span class="line">xtrace          off</span><br></pre></td></tr></table></figure><h3 id="1-7-格式化输出-printf"><a href="#1-7-格式化输出-printf" class="headerlink" title="1.7 格式化输出 printf"></a>1.7 格式化输出 printf</h3><p><strong>常用格式替换符</strong></p><table><thead><tr><th>替换符</th><th align="left">功能</th></tr></thead><tbody><tr><td>%s</td><td align="left">字符串</td></tr><tr><td>%d,%i</td><td align="left">十进制整数</td></tr><tr><td>%f</td><td align="left">浮点格式</td></tr><tr><td>%c</td><td align="left">ASCII字符</td></tr><tr><td>%b</td><td align="left">相对应的参数中包含转义字符，可对转义字符进行转义</td></tr><tr><td>%o</td><td align="left">八进制值</td></tr><tr><td>%u</td><td align="left">无符号十进制值</td></tr><tr><td>%x</td><td align="left">小写的十六进制 a~f</td></tr><tr><td>%X</td><td align="left">大写的十六进制 A~F</td></tr><tr><td>%%</td><td align="left">%本身</td></tr></tbody></table><p>说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%<span class="comment">#s中的数字代表此替换符中的输出字符宽度，不足补空格，默认右对齐。%-10s表示10个字符宽，- 表示左对齐</span></span><br><span class="line">%03d表示<span class="number">3</span>为宽度，不足前面用<span class="number">0</span>补全，超出位数原样输出</span><br><span class="line">%<span class="number">.2</span>f表示保留<span class="number">2</span>位小数</span><br></pre></td></tr></table></figure><p><strong>常用转义字符</strong></p><table><thead><tr><th align="left">转义符</th><th>功能</th></tr></thead><tbody><tr><td align="left">\a</td><td>警告字符，通常为ASCII中的BEL字符</td></tr><tr><td align="left">\b</td><td>后退</td></tr><tr><td align="left">\f</td><td>换页</td></tr><tr><td align="left">\n</td><td>换行</td></tr><tr><td align="left">\r</td><td>回车</td></tr><tr><td align="left">\t</td><td>水平制表符</td></tr><tr><td align="left">\v</td><td>垂直制表符</td></tr><tr><td align="left">\\</td><td>表示\本身</td></tr></tbody></table><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%s&quot; 1 2 3 4</span></span><br><span class="line">1234[root@centos7 ~]<span class="comment">#</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%s %s %s %s \n&quot;  1 2 3 4</span></span><br><span class="line">1 2 3 4 </span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># printf &quot;%.2f\n&quot; 2.458 </span></span><br><span class="line">2.46</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># strvar=&quot;I love you&quot;;printf &quot;\033[1;32m%s\033[0m\n&quot; &quot;$strvar&quot;</span></span><br><span class="line">I love you</span><br></pre></td></tr></table></figure><h3 id="1-8-算数运算"><a href="#1-8-算数运算" class="headerlink" title="1.8 算数运算"></a>1.8 算数运算</h3><p>注：bash 只支持整数，不支持小数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ARITHMETIC EVALUATION</span><br><span class="line">       The shell allows arithmetic expressions to be evaluated, under certain circumstances (see the <span class="built_in">let</span> and <span class="built_in">declare</span> <span class="built_in">builtin</span>  commands  and  Arithmetic Expansion).   Evaluation  is  <span class="keyword">done</span>  <span class="keyword">in</span> fixed-width integers with no check <span class="keyword">for</span> overflow, though division by 0 is trapped and flagged as an error.</span><br><span class="line">       The operators and their precedence, associativity, and values are the same as <span class="keyword">in</span> the C language.  The following list  of  operators  is  grouped into levels of equal-precedence operators.  The levels are listed <span class="keyword">in</span> order of decreasing precedence.</span><br><span class="line"></span><br><span class="line">* / %multiplication, division, remainder, %表示取模，即取余数，示例：9%4=1，5%3=2</span><br><span class="line">+ - addition, subtraction</span><br><span class="line">i++ i--variable post-increment and post-decrement</span><br><span class="line">++i --i variable pre-increment and pre-decrement</span><br><span class="line">= *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |=assignment</span><br><span class="line">- + unary minus and plus</span><br><span class="line">! ~ logical and bitwise negation</span><br><span class="line">** exponentiation 乘方,即指数运算</span><br><span class="line">&lt;&lt; &gt;&gt; left and right bitwise shifts</span><br><span class="line">&lt;= &gt;= &lt; &gt; comparison</span><br><span class="line">== != equality and inequality</span><br><span class="line">&amp; bitwise AND</span><br><span class="line">| bitwise OR</span><br><span class="line">^ bitwise exclusive OR</span><br><span class="line">&amp;&amp; logical AND</span><br><span class="line">|| logical OR</span><br><span class="line"><span class="built_in">expr</span>?<span class="built_in">expr</span>:<span class="built_in">expr</span> conditional operator</span><br><span class="line">expr1 , expr2 comma</span><br></pre></td></tr></table></figure><p>算数运算实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(1)<span class="built_in">let</span> var=算术表达式</span><br><span class="line">(2)((var=算术表达式))</span><br><span class="line">(3)var=$[算术表达式]</span><br><span class="line">(4)var=$((算术表达式))</span><br><span class="line">(5)var=$(<span class="built_in">expr</span> arg1 arg2 arg3 ...)</span><br><span class="line">(6)<span class="built_in">declare</span> -i var = 数值</span><br><span class="line">(7)<span class="built_in">echo</span> <span class="string">&#x27;算术表达式&#x27;</span> | bc</span><br><span class="line"></span><br><span class="line">随机数生成器<span class="variable">$RANDOM</span></span><br><span class="line">ooa random <span class="built_in">integer</span> between 0 and 32767 is generated.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 注：乘法符号在有些场景需要转义</span></span><br><span class="line"><span class="comment"># mul=$(expr $num1 \* $num2)</span></span><br></pre></td></tr></table></figure><p>示例：随机字体颜色生成</p><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221004172137142.png" alt="image-20221004172137142"></p><p>增强型赋值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+=i+=10 等同于 i=i+10</span><br><span class="line">-=</span><br><span class="line">*=</span><br><span class="line">/=</span><br><span class="line">%=</span><br><span class="line">++i++ ++i</span><br><span class="line">--i-- --i</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># num1=3</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># num2=5</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># let sum=$num1+$num2</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $sum</span></span><br><span class="line">8</span><br><span class="line">(2)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;The sum is $[$num1+$num2]&quot;</span></span><br><span class="line">The <span class="built_in">sum</span> is 8</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;The sum is $(($num1+$num2))&quot;</span></span><br><span class="line">The <span class="built_in">sum</span> is 8</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># echo &quot;$((num1+num2))&quot;</span></span><br><span class="line">8</span><br><span class="line">(3)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mul=$(expr $num1 \* $num2);echo $mul</span></span><br><span class="line">15</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># mul=$[$num1 * $num2];echo $mul</span></span><br><span class="line">15</span><br><span class="line">(4)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $RANDOM</span></span><br><span class="line">14098</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $RANDOM</span></span><br><span class="line">3320</span><br></pre></td></tr></table></figure><h3 id="1-9-逻辑运算"><a href="#1-9-逻辑运算" class="headerlink" title="1.9 逻辑运算"></a>1.9 逻辑运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">与&amp;0&amp;0=0；0&amp;1=0；1&amp;1=1</span><br><span class="line">或|           0&amp;0=0；0&amp;1=1；1&amp;1=1</span><br><span class="line">非!取反；!0=1</span><br><span class="line">异或^         相同为假，不同为真</span><br><span class="line">短路与&amp;&amp;</span><br><span class="line">短路或||</span><br></pre></td></tr></table></figure><p>示例：关于异或运算达成数值的交换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个数字x，y异或得z；z和任意一个数字x或y做异或运算，得到另一个数字y或x</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># x=10;y=20;x=$[x^y];y=$[x^y];x=$[x^y];echo &quot;x=$x,y=$y&quot;</span></span><br><span class="line">x=20,y=10</span><br></pre></td></tr></table></figure><p>示例：关于短路运算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 短路与 &amp;&amp;</span></span><br><span class="line">CMD1 &amp;&amp; CMD2</span><br><span class="line">CMD1结果为真 (1)，第二个CMD2必须要参与运算，才能得到最终的结果</span><br><span class="line">CMD1结果为假 (0)，总的结果必定为0，因此不需要执行CMD2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 短路或 ||</span></span><br><span class="line">CMD1 || CMD2</span><br><span class="line">CMD1结果为真 (1)，总的结果必定为1，因此不需要执行CMD2</span><br><span class="line">CMD1结果为假 (0)，第二个CMD2 必须要参与运算,才能得到最终的结果</span><br></pre></td></tr></table></figure><h3 id="1-10-条件测试命令"><a href="#1-10-条件测试命令" class="headerlink" title="1.10 条件测试命令"></a>1.10 条件测试命令</h3><p>条件测试：判断某需求是否满足；若条件测试为真，则返回的状态码$?为0；反之则不为0</p><p>条件测试命令</p><ul><li>test EXPRESSION</li><li>[ EXPRESSION ]</li><li>[[ EXPRESSION ]]    支持扩展的正则表达式和通配符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># type [</span></span><br><span class="line">[ is a shell <span class="built_in">builtin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：括号中的 EXPRESSION 两边一定要有空白字符</span></span><br></pre></td></tr></table></figure><p>bash 中的测试类型查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># help test</span></span><br><span class="line"><span class="built_in">test</span>: <span class="built_in">test</span> [<span class="built_in">expr</span>]</span><br><span class="line">    Evaluate conditional expression.</span><br><span class="line">    </span><br><span class="line">    Exits with a status of 0 (<span class="literal">true</span>) or 1 (<span class="literal">false</span>) depending on</span><br><span class="line">    the evaluation of EXPR.  Expressions may be unary or binary.  Unary</span><br><span class="line">    expressions are often used to examine the status of a file.  There</span><br><span class="line">    are string operators and numeric comparison operators as well.</span><br><span class="line">    </span><br><span class="line">    The behavior of <span class="built_in">test</span> depends on the number of arguments.  Read the</span><br><span class="line">    bash manual page <span class="keyword">for</span> the complete specification.</span><br><span class="line">    </span><br><span class="line">    File operators:</span><br><span class="line">    </span><br><span class="line">      -a FILE        True <span class="keyword">if</span> file exists.</span><br><span class="line">      -b FILE        True <span class="keyword">if</span> file is block special.</span><br><span class="line">      -c FILE        True <span class="keyword">if</span> file is character special.</span><br><span class="line">      -d FILE        True <span class="keyword">if</span> file is a directory.</span><br><span class="line">      -e FILE        True <span class="keyword">if</span> file exists.</span><br><span class="line">      -f FILE        True <span class="keyword">if</span> file exists and is a regular file.</span><br><span class="line">      -g FILE        True <span class="keyword">if</span> file is set-group-id.</span><br><span class="line">      -h FILE        True <span class="keyword">if</span> file is a symbolic <span class="built_in">link</span>.</span><br><span class="line">      -L FILE        True <span class="keyword">if</span> file is a symbolic <span class="built_in">link</span>.</span><br><span class="line">      -k FILE        True <span class="keyword">if</span> file has its `sticky<span class="string">&#x27; bit set.</span></span><br><span class="line"><span class="string">      -p FILE        True if file is a named pipe.</span></span><br><span class="line"><span class="string">      -r FILE        True if file is readable by you.</span></span><br><span class="line"><span class="string">      -s FILE        True if file exists and is not empty.</span></span><br><span class="line"><span class="string">      -S FILE        True if file is a socket.</span></span><br><span class="line"><span class="string">      -t FD          True if FD is opened on a terminal.</span></span><br><span class="line"><span class="string">      -u FILE        True if the file is set-user-id.</span></span><br><span class="line"><span class="string">      -w FILE        True if the file is writable by you.</span></span><br><span class="line"><span class="string">      -x FILE        True if the file is executable by you.</span></span><br><span class="line"><span class="string">      -O FILE        True if the file is effectively owned by you.</span></span><br><span class="line"><span class="string">      -G FILE        True if the file is effectively owned by your group.</span></span><br><span class="line"><span class="string">      -N FILE        True if the file has been modified since it was last read.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -nt FILE2  True if file1 is newer than file2 (according to</span></span><br><span class="line"><span class="string">                       modification date).</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -ot FILE2  True if file1 is older than file2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      FILE1 -ef FILE2  True if file1 is a hard link to file2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    String operators:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -z STRING      True if string is empty.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -n STRING</span></span><br><span class="line"><span class="string">         STRING      True if string is not empty.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      STRING1 = STRING2</span></span><br><span class="line"><span class="string">                     True if the strings are equal.</span></span><br><span class="line"><span class="string">      STRING1 != STRING2</span></span><br><span class="line"><span class="string">                     True if the strings are not equal.</span></span><br><span class="line"><span class="string">      STRING1 &lt; STRING2</span></span><br><span class="line"><span class="string">                     True if STRING1 sorts before STRING2 lexicographically.</span></span><br><span class="line"><span class="string">      STRING1 &gt; STRING2</span></span><br><span class="line"><span class="string">                     True if STRING1 sorts after STRING2 lexicographically.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Other operators:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      -o OPTION      True if the shell option OPTION is enabled.</span></span><br><span class="line"><span class="string">      -v VAR True if the shell variable VAR is set</span></span><br><span class="line"><span class="string">      ! EXPR         True if expr is false.</span></span><br><span class="line"><span class="string">      EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.</span></span><br><span class="line"><span class="string">      EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">      arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,</span></span><br><span class="line"><span class="string">                     -lt, -le, -gt, or -ge.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Arithmetic binary operators return true if ARG1 is equal, not-equal,</span></span><br><span class="line"><span class="string">    less-than, less-than-or-equal, greater-than, or greater-than-or-equal</span></span><br><span class="line"><span class="string">    than ARG2.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Exit Status:</span></span><br><span class="line"><span class="string">    Returns success if EXPR evaluates to true; fails if EXPR evaluates to</span></span><br><span class="line"><span class="string">    false or an invalid argument is given.</span></span><br></pre></td></tr></table></figure><h4 id="1-10-1-变量测试"><a href="#1-10-1-变量测试" class="headerlink" title="1.10.1 变量测试"></a>1.10.1 变量测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断变量是否定义 </span></span><br><span class="line">[ -v NAME ]</span><br><span class="line"><span class="comment"># 判断变量是否定义并且是名称引用,bash 4.4新特性</span></span><br><span class="line">[ -R NAME ]</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;$BASH_VERSION&quot;</span></span><br><span class="line">4.2.46(2)-release</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;$BASH_VERSION&quot;</span></span><br><span class="line">4.4.20(1)-release</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># unset x</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># [ -v x ]</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $?</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="1-10-2-数值测试"><a href="#1-10-2-数值测试" class="headerlink" title="1.10.2 数值测试"></a>1.10.2 数值测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-eq 是否等于</span><br><span class="line">-ne是否不等于</span><br><span class="line">-gt 是否大于</span><br><span class="line">-ge 是否大于等于</span><br><span class="line">-lt 是否小于</span><br><span class="line">-le是否小于等于</span><br><span class="line"></span><br><span class="line">算数表达式比较</span><br><span class="line">==!=&lt;=&gt;=&lt;&gt;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># i=10</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># j=8</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ $i -lt $j ];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ i -gt j ];echo $?</span></span><br><span class="line">-bash: [: i: <span class="built_in">integer</span> expression expected</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># (( i &gt;= j ));echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-10-3-字符串测试"><a href="#1-10-3-字符串测试" class="headerlink" title="1.10.3 字符串测试"></a>1.10.3 字符串测试</h4><p><strong>test 和 [] 用法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-z STRING字符串是否为空，空为真</span><br><span class="line">-n STRING字符串是否不空，不空为真</span><br><span class="line"></span><br><span class="line">STRING1 = STRING2是否等于</span><br><span class="line">STRING1 != STRING2是否不等于</span><br><span class="line">&gt;、&lt;比较的是ASCII码的大小值</span><br></pre></td></tr></table></figure><p><strong>[[]] 用法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[[ expression ]]</span><br><span class="line">==左侧字符串是否和右侧的PATTERN相同</span><br><span class="line">note: 此表达式使用于[[]]，PATTERN支持通配符</span><br><span class="line">=~左侧字符串是否能被右侧的正则表达式的PATTERN匹配</span><br><span class="line">note: 此表达式使用于[[]]时，使用扩展的正则表达式</span><br></pre></td></tr></table></figure><p>[  ] 示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在比较字符串时，建议变量放在&quot;&quot;中</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># str1=Tom</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># str2=Jerry</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;$str1&quot; = &quot;$str2&quot; ];echo $?</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># str3=&quot;I love you&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ $str3 ]</span></span><br><span class="line">-bash: [: love: binary operator expected</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;$str3&quot; ];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>[[  ]] 和通配符示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># strvar1=&quot;Rocky_linux&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == Rocky* ]];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == &quot;Rocky*&quot; ]];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># strvar1=&quot;Rocky*&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$strvar1&quot; == &quot;Rocky*&quot; ]];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 右侧的模式作为通配符时不需要加&quot;&quot;,只是表达字符本身,加&quot;&quot;或转义</span></span><br></pre></td></tr></table></figure><p>[[  ]]和扩展正则表达式示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断合理的考试成绩</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># SCORE=101</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ $SCORE =~ ^(100|[0-9]&#123;1,2&#125;)$ ]];echo $?</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件后缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=abc.log</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [[ &quot;$FILE&quot; =~ \.log$ ]];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-10-4-文件测试"><a href="#1-10-4-文件测试" class="headerlink" title="1.10.4 文件测试"></a>1.10.4 文件测试</h4><p>存在性测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-a FILE: 同 -e</span><br><span class="line">-e FILE: 判断文件是否存在，存在则为真</span><br><span class="line">-b FILE: 是否是块设备文件</span><br><span class="line">-c FILE: 是否存在且为字符设备文件</span><br><span class="line">-d FILE: 是否存在且为目录文件</span><br><span class="line">-f FILE: 是否存在且为普通文件</span><br><span class="line">-h FILE 或 -L FILE: 存在且为符号链接文件</span><br><span class="line">-p FILE: 是否存在且为命名管道文件</span><br><span class="line">-S FILE: 是否存在且为套接字文件</span><br><span class="line"></span><br><span class="line">! 非   例: [ ! -a FILE ] 判断该文件是否不存在</span><br></pre></td></tr></table></figure><p>文件权限测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-r FILE: 是否存在且可读</span><br><span class="line">-w FILE: 是否存在且可写</span><br><span class="line">-x FILE: 是否存在且可执行</span><br><span class="line">-u FILE: 是否存在且拥有suid权限</span><br><span class="line">-g FILE: 是否存在且拥有sgid权限</span><br><span class="line">-k FILE: 是否存在且拥有sticky权限</span><br><span class="line"></span><br><span class="line">note: 最终结果由用户对文件的实际权限决定，而非文件属性决定</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/shadow 属性和root用户实际权限</span></span><br><span class="line"><span class="comment"># 判断文件是否具有某一权限，应根据该用户对文件的实际执行操作结果为准</span></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># ll /etc/shadow</span></span><br><span class="line">---------- 1 root root 759 Mar 27 02:44 /etc/shadow     </span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># [ -w /etc/shadow ]; echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># [ -x /etc/shadow ]; echo $? </span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>文件属性测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-s FILE  是否存在且非空</span><br><span class="line">-t fd fd 文件描述符是否在某终端已经打开</span><br><span class="line">-N FILE 文件自从上一次被读取之后是否被修改过</span><br><span class="line">-O FILE 当前有效用户是否为文件属主</span><br><span class="line">-G FILE当前有效用户是否为文件属组</span><br><span class="line">FILE1 -ef FILE2 FILE1是否是FILE2的硬链接</span><br><span class="line">FILE1 -nt FILE2    FILE1是否新于FILE2（mtime）</span><br><span class="line">FILE1 -ot FILE2 FILE1是否旧于FILE2</span><br></pre></td></tr></table></figure><h3 id="1-11-关于-与"><a href="#1-11-关于-与" class="headerlink" title="1.11 关于 () 与 {}"></a>1.11 关于 () 与 {}</h3><p>(CMD1;CMD2;···) 和 { CMD1;CMD2;···; } 都可以将多个命令组合在一起，批量执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(list) 会开启子shell，并且list中变量赋值及内部命令执行后,将不再影响后续的环境</span><br><span class="line"></span><br><span class="line">&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索(list)</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># man bash</span></span><br><span class="line">(list) list  is  executed  <span class="keyword">in</span>  a subshell environment (see COMMAND EXECUTION ENVIRONMENT below).  Variable assignments and <span class="built_in">builtin</span> commands that affect the shell<span class="string">&#x27;s environment do not remain in effect after the command completes.  The return status is the exit status of list.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123; list; &#125; list is simply executed in the current shell environment.  list must be terminated with a newline or semicolon.  This is known as a group command.  The return status is the exit status of list.  Note that unlike the metacharacters ( and ), &#123; and &#125; are reserved words and must occur where a reserved word is permitted to be recognized.  Since they do not cause a word break, they must be  separated  from  list  by whitespace or another shell metacharacter.</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># name=Tom;(echo $name;name=Jerry;echo $name);echo $name</span></span><br><span class="line">Tom</span><br><span class="line">Jerry</span><br><span class="line">Tom</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># name=Tom;&#123; echo $name;name=Jerry;echo $name; &#125;;echo $name</span></span><br><span class="line">Tom</span><br><span class="line">Jerry</span><br><span class="line">Jerry</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当我们需要临时切换到某个目录执行某些操作，之后在返回原先的目录，可使用小括号</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># (cd /data/test/; rm -f f1.txt)</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="1-12-组合测试条件"><a href="#1-12-组合测试条件" class="headerlink" title="1.12 组合测试条件"></a>1.12 组合测试条件</h3><h4 id="1-12-1-第一种方式"><a href="#1-12-1-第一种方式" class="headerlink" title="1.12.1 第一种方式"></a>1.12.1 第一种方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ EXPRESSION1 -a EXPRESSION2 ] 并且，EXPRESSION1和EXPRESSION2都是真，结果才为真</span><br><span class="line">[ EXPRESSION1 -o EXPRESSION2 ] 或者，EXPRESSION1和EXPRESSION2只要有一个真，结果就为</span><br><span class="line">真</span><br><span class="line">[ ! EXPRESSION ] 取反</span><br><span class="line"></span><br><span class="line">note:-a 和 -o 需要使用测试命令进行，[[]]不支持</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ll /shell/test.sh </span></span><br><span class="line">-rw-r--r-- 1 root root 350 Oct  3 21:46 /shell/test.sh</span><br><span class="line">[root@centos7 ~]<span class="comment"># FILE=/shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -a -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">1</span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod +x /shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -a -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># chmod -x /shell/test.sh </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f  &quot;$FILE&quot; -o -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ ! -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br><span class="line">[root@centos7 ~]<span class="comment"># ! [ -x &quot;$FILE&quot; ];echo $?</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="1-12-2-第二种方式"><a href="#1-12-2-第二种方式" class="headerlink" title="1.12.2 第二种方式"></a>1.12.2 第二种方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">COMMAND1 &amp;&amp; COMMAND2 <span class="comment">#并且，短路与，代表条件性的AND THEN</span></span><br><span class="line">如果COMMAND1 成功,将执行COMMAND2,否则,将不执行COMMAND2</span><br><span class="line"></span><br><span class="line">COMMAND1 || COMMAND2 <span class="comment">#或者，短路或，代表条件性的OR ELSE</span></span><br><span class="line">如果COMMAND1 成功,将不执行COMMAND2,否则,将执行COMMAND2</span><br><span class="line"></span><br><span class="line">! COMMAND <span class="comment">#非,取反</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;a&quot; = &quot;B&quot; ] &amp;&amp; echo &quot;String is same.&quot;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># [ &quot;a&quot; = &quot;a&quot; ] &amp;&amp; echo &quot;String is same.&quot;</span></span><br><span class="line">String is same.</span><br><span class="line">[root@centos7 ~]<span class="comment"># [ -f /etc/fstab -a -x /bin/cat ] &amp;&amp; cat /etc/fstab</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># id wh &amp;&gt; /dev/null || useradd wh</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># getent passwd wh</span></span><br><span class="line">wh:x:1000:1000::/home/wh:/bin/bash</span><br></pre></td></tr></table></figure><p>示例：&amp;&amp; 和 || 组合使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># NAME=Herbert;id $NAME &amp;&gt; /dev/null &amp;&amp; echo &quot;$NAME is exist&quot; || echo &quot;$NAME is not exist&quot;</span></span><br><span class="line">Herbert is not exist</span><br></pre></td></tr></table></figure><h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><p>1、编写脚本 argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat argsnum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">[ <span class="variable">$#</span> -lt 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Please input a path!&quot;</span> &amp;&amp; <span class="built_in">exit</span> 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> has space characters:  `grep -E &#x27;^[[:space:]]+$&#x27; <span class="variable">$1</span> | wc -l`&quot;</span></span><br></pre></td></tr></table></figure><p>2、编写脚本 hostping.sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可ping通，则提示用户“该IP地址不可访问”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat hostping.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">IP=<span class="variable">$1</span></span><br><span class="line">fping <span class="variable">$IP</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is reachable!&quot;</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> is unreachable!&quot;</span>;<span class="built_in">exit</span>; &#125;</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&quot;Script is finished&quot;</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat checkdisk.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">Error=80</span><br><span class="line">MAIL=wuhaolam@163.com</span><br><span class="line"></span><br><span class="line">Disk=`<span class="built_in">df</span> -Th | sed -n <span class="string">&#x27;/^\/dev\/sd*/p&#x27;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span> % | <span class="built_in">cut</span> -d% -f6 | <span class="built_in">sort</span> -r | <span class="built_in">head</span> -1`</span><br><span class="line">[ <span class="variable">$Disk</span> -ge <span class="variable">$Error</span> ] &amp;&amp; (<span class="built_in">echo</span> <span class="string">&quot;`hostname -I ` insufficient disk space &quot;</span>| mail -s <span class="string">&quot;Linux Disk Warning&quot;</span> wuhaolam@163.com )</span><br><span class="line"></span><br><span class="line">Inode=`<span class="built_in">df</span> -ih | sed -n <span class="string">&#x27;/^\/dev\/sd*/p&#x27;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27; &#x27;</span> % | <span class="built_in">cut</span> -d% -f5 | <span class="built_in">sort</span> -r | <span class="built_in">head</span> -1`</span><br><span class="line">[ <span class="variable">$Inode</span> -ge <span class="variable">$Error</span> ] &amp;&amp; ( <span class="built_in">echo</span> <span class="string">&quot;`hostname -I ` insufficient inode space &quot;</span>| mail -s <span class="string">&quot;Linux Inode Warning&quot;</span> <span class="variable">$MAIL</span>)</span><br></pre></td></tr></table></figure><p>4、编写脚本 per.sh，判断当前用户的指定参数文件，是否不可读并且不可写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[wh@Rocky8-mini ~]$ [ ! -r /etc/gshadow -a ! -w /etc/gshadow ]   </span><br><span class="line">[wh@Rocky8-mini ~]$ <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>5、编写脚本 excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat excute.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">Path=/root/*</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$Path</span>; <span class="keyword">do</span></span><br><span class="line">        [[ <span class="string">&quot;<span class="variable">$i</span>&quot;</span> == *<span class="string">&quot;.&quot;</span>sh ]] &amp;&amp; <span class="built_in">chmod</span> +x <span class="string">&quot;<span class="variable">$i</span>&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$i</span> is not script file!&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>6、编写脚本 nologin.sh和 login.sh，实现禁止和允许普通用户登录系统</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat nologin.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ `<span class="built_in">id</span> -u <span class="variable">$1</span>` -ge 1000 ] &amp;&amp; usermod <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -s /sbin/nologin </span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat login.sh   </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">[ `<span class="built_in">id</span> -u <span class="variable">$1</span>` -ge 1000 ] &amp;&amp; usermod <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -s /bin/bash</span><br></pre></td></tr></table></figure><h3 id="1-13-接收键盘的输入—read命令"><a href="#1-13-接收键盘的输入—read命令" class="headerlink" title="1.13 接收键盘的输入—read命令"></a>1.13 接收键盘的输入—read命令</h3><p>​    使用read命令将输入值分配给一个或多个shell变量。read 命令从标准输入读取值，给每个单词分配一个变量，当所有单词分配完成还剩余变量没有分配，则默认的值为系统内置变量REPLY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> [options] [name ...]</span><br><span class="line"></span><br><span class="line">常见选项：</span><br><span class="line">-p 指定要显示的提示</span><br><span class="line">-s 静默输入，一般用于密码</span><br><span class="line">-n N 指定输入的字符长度N</span><br><span class="line">-d <span class="string">&#x27;字符&#x27;</span> 输入结束符</span><br><span class="line">-t NTIMEOUT为N秒</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo $REPLY</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># read</span></span><br><span class="line">TEST</span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $REPLY</span></span><br><span class="line">TEST</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># read -p &quot;Please input your name: &quot; NAME</span></span><br><span class="line">Please input your name: Tom   </span><br><span class="line">[root@centos7 ~]<span class="comment"># echo $NAME</span></span><br><span class="line">Tom</span><br></pre></td></tr></table></figure><p>示例：read命令使用管道符时的注意点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Pipelines</span><br><span class="line">       A pipeline is a sequence of one or more commands separated by one of the control operators | or |&amp;.</span><br><span class="line">       </span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | read NAME</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo $NAME</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo Jerry | &#123; read NAME; echo $NAME; &#125;</span></span><br><span class="line">Jerry</span><br></pre></td></tr></table></figure><p>实例：read和输入重定向</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.txt </span></span><br><span class="line">1 2</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># read i j &lt; test.txt;echo &quot;i=$i,j=$j&quot;</span></span><br><span class="line">i=1,j=2</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | read i j;echo &quot;i=$i,j=$j&quot;</span></span><br><span class="line">i=,j=</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | (read i j;echo &quot;i=$i,j=$j&quot;)</span></span><br><span class="line">i=1,j=2</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo 1 2 | &#123; read i j;echo &quot;i=$i,j=$j&quot;; &#125;</span></span><br><span class="line">i=1,j=2</span><br><span class="line"></span><br><span class="line"><span class="comment"># Each command in a pipeline is executed as a separate process (i.e., in a subshell).</span></span><br></pre></td></tr></table></figure><p>实例：实现运维工作菜单</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat /shell/work_menu.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&quot;\E[1;$[RANDOM%7+31]m&quot;</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">1) 备份数据库</span></span><br><span class="line"><span class="string">2) 清理日志</span></span><br><span class="line"><span class="string">3) 软件升级</span></span><br><span class="line"><span class="string">4) 软件回滚</span></span><br><span class="line"><span class="string">5) 删库跑路</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">echo</span> -en <span class="string">&#x27;\E[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your choice(1-5): &quot;</span> MENU</span><br><span class="line">[ <span class="variable">$MENU</span> -eq 1 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;备份数据库&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 2 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;清理日志&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 3 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;软件升级&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 4 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;软件回滚&quot;</span></span><br><span class="line">[ <span class="variable">$MENU</span> -eq 5 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;删库跑路&quot;</span></span><br></pre></td></tr></table></figure><h2 id="二、bash-shell-配置文件"><a href="#二、bash-shell-配置文件" class="headerlink" title="二、bash shell 配置文件"></a>二、bash shell 配置文件</h2><h3 id="2-1-按照生效范围划分"><a href="#2-1-按照生效范围划分" class="headerlink" title="2.1 按照生效范围划分"></a>2.1 按照生效范围划分</h3><p>全局配置：针对所有用户生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/*.sh</span><br><span class="line">/etc/bashrc</span><br></pre></td></tr></table></figure><p>个人配置：仅对指定用户生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="2-2-shell-登录两种方式分类"><a href="#2-2-shell-登录两种方式分类" class="headerlink" title="2.2 shell 登录两种方式分类"></a>2.2 shell 登录两种方式分类</h3><h4 id="2-2-1-交互式登录"><a href="#2-2-1-交互式登录" class="headerlink" title="2.2.1 交互式登录"></a>2.2.1 交互式登录</h4><ul><li>直接通过终端输入账号密码登录</li><li>使用 su - USERNAME 切换登录</li></ul><h4 id="2-2-2-非交互式登录"><a href="#2-2-2-非交互式登录" class="headerlink" title="2.2.2 非交互式登录"></a>2.2.2 非交互式登录</h4><ul><li>su USERNAME</li><li>图形界面下打开的终端</li><li>执行脚本</li><li>任何其它的bash实例</li></ul><h3 id="2-3-按照功能划分"><a href="#2-3-按照功能划分" class="headerlink" title="2.3 按照功能划分"></a>2.3 按照功能划分</h3><h4 id="2-3-1-profile-类"><a href="#2-3-1-profile-类" class="headerlink" title="2.3.1 profile 类"></a>2.3.1 profile 类</h4><p>profile 类为交互式登录的shell提供配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">全局: /etc/profile, /etc/profile.d/*.sh</span><br><span class="line">个人: ~/.bash_profile</span><br></pre></td></tr></table></figure><p>功用：</p><p>（1）一般用于定义环境变量</p><p>（2）运行命令或脚本</p><h4 id="2-3-2-bashrc-类"><a href="#2-3-2-bashrc-类" class="headerlink" title="2.3.2 bashrc 类"></a>2.3.2 bashrc 类</h4><p>bashrc 类为交互式和交互式登录的shell提供配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">全局: /etc/bashrc</span><br><span class="line">个人: ~/.bashrc</span><br></pre></td></tr></table></figure><p>功用：</p><p>（1）定义命令别名和函数</p><p>（2）定义本地变量</p><h3 id="2-4-编辑配置文件生效"><a href="#2-4-编辑配置文件生效" class="headerlink" title="2.4 编辑配置文件生效"></a>2.4 编辑配置文件生效</h3><p>修改profile和bashrc文件后使其生效的两种方法</p><p>（1）重新启动shell进程</p><p>（2）source | .</p><h3 id="2-5-退出任务"><a href="#2-5-退出任务" class="headerlink" title="2.5 退出任务"></a>2.5 退出任务</h3><p>保存在~/.bash_logout文件中，在退出登录shell时运行</p><p>功能：</p><p>（1）创建自动备份</p><p>（2）清除临时文件</p><h3 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h3><p>1、让所有用户的PATH环境变量的值多出一个路径，例如：/usr/local/apache/bin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;PATH=/usr/local/apache/bin:$PATH&quot; &gt;&gt; /etc/profile</span></span><br></pre></td></tr></table></figure><p>2、用户 root 登录时，将命令指示符变成红色，并自动启用如下别名： </p><p>rm=‘rm -i’<br>cdnet=‘cd /etc/sysconfig/network-scripts/’<br>editnet=‘vim /etc/sysconfig/network-scripts/ifcfg-eth0’<br>editnet=‘vim /etc/sysconfig/network-scripts/ifcfg-eno16777736 或 ifcfg-ens33 ’ (如果系统是CentOS7)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改命令指示符颜色</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#echo &#x27;PS1=&quot;\[\e[1;31m\][\u@\h \W]\\$\[\e[0m\]&quot;&#x27; &gt;&gt; ~/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义别名</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#vim ~/.bashrc</span></span><br><span class="line"><span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line">cdnet=<span class="string">&#x27;cd /etc/sysconfig/network-scripts/&#x27;</span></span><br><span class="line">editnet=<span class="string">&#x27;vim /etc/sysconfig/network-scripts/ifcfg-eth0&#x27;</span></span><br></pre></td></tr></table></figure><p>3、任意用户登录系统时，显示红色字体的警示提醒信息“Hi,dangerous！”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/issue 登录前脚本提示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/issue</span></span><br><span class="line">^[[1;31mHi, dangerous(login before)^[[0m</span><br><span class="line"><span class="comment"># /etc/motd 登录后脚本提示</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim /etc/motd</span></span><br><span class="line">^[[1;31mHi, dangerous!(login after)^[[0m</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221008224950634.png" alt="image-20221008224950634"></p><p>4、编写生成脚本基本格式的脚本，包括作者，联系方式，版本，时间，描述等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以下信息包括文件名、作者、版本、邮箱、站点、时间、描述</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat .vimrc</span></span><br><span class="line">autocmd BufNewFile *.sh <span class="built_in">exec</span> <span class="string">&quot;:call AddTitleForShell()&quot;</span></span><br><span class="line"><span class="keyword">function</span>  AddTitleForShell()</span><br><span class="line">   call append(0,<span class="string">&quot;#!/bin/bash&quot;</span>)</span><br><span class="line">   call append(1,<span class="string">&quot;# **********************************************************&quot;</span>)</span><br><span class="line">   call append(2,<span class="string">&quot;# * Filename      : &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:t&quot;</span>))</span><br><span class="line">   call append(3,<span class="string">&quot;# * Author        : Herbert&quot;</span>)</span><br><span class="line">   call append(4,<span class="string">&quot;# * Version       : 1.0&quot;</span>)</span><br><span class="line">   call append(5,<span class="string">&quot;# * Email         : wuhaolam@163.com&quot;</span>)</span><br><span class="line">   call append(6,<span class="string">&quot;# * Website       : wuhaolam.github.io&quot;</span>)</span><br><span class="line">   call append(7,<span class="string">&quot;# * Date          : &quot;</span>.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>))</span><br><span class="line">   call append(8,<span class="string">&quot;# * Description   : &quot;</span>)</span><br><span class="line">   call append(9,<span class="string">&quot;# **********************************************************&quot;</span>)</span><br><span class="line">endfunction</span><br></pre></td></tr></table></figure><h2 id="三、流程控制"><a href="#三、流程控制" class="headerlink" title="三、流程控制"></a>三、流程控制</h2><h3 id="3-1-条件选择"><a href="#3-1-条件选择" class="headerlink" title="3.1 条件选择"></a>3.1 条件选择</h3><h4 id="3-1-1-选择执行-if-语句"><a href="#3-1-1-选择执行-if-语句" class="headerlink" title="3.1.1 选择执行 if 语句"></a>3.1.1 选择执行 if 语句</h4><p>单分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件;<span class="keyword">then</span></span><br><span class="line">条件成立时的代码</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件;<span class="keyword">then</span></span><br><span class="line">条件为真的代码</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">条件不成立时执行代码</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 判断条件1;<span class="keyword">then</span></span><br><span class="line">条件1成立时执行代码</span><br><span class="line"><span class="keyword">elif</span> 判断条件2;<span class="keyword">then</span></span><br><span class="line">条件2成立时执行代码</span><br><span class="line"><span class="keyword">elif</span> 判断条件3;<span class="keyword">then</span></span><br><span class="line">条件3成立时执行代码</span><br><span class="line">···</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">以上条件都不成立时执行该语句</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-条件判断-case-语句"><a href="#3-1-2-条件判断-case-语句" class="headerlink" title="3.1.2 条件判断 case 语句"></a>3.1.2 条件判断 case 语句</h4><p>语法格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> 变量引用 <span class="keyword">in</span></span><br><span class="line">PAT1)</span><br><span class="line">分支1</span><br><span class="line">;;</span><br><span class="line">PAT2)</span><br><span class="line">分支2</span><br><span class="line">;;</span><br><span class="line">···</span><br><span class="line">*)</span><br><span class="line">默认分支</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>case 支持glob风格的通配符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 任意长度任意字符</span><br><span class="line">? 任意单个字符</span><br><span class="line">[] 指定范围内的任意单个字符</span><br><span class="line">| 或者，如: a|b</span><br></pre></td></tr></table></figure><h4 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h4><p>1、编写脚本 createuser.sh，实现如下功能：使用一个用户名做为参数，如果指定参数的用户存在，就显示其存在，否则添加之。并设置初始密码为123456，显示添加的用户的id号等信息，在此新用户第一次登录时，会提示用户立即改密码，如果没有参数，就提示：请输入用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat createuser.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">USERNAME=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -lt 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入用户名！&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">id</span> <span class="variable">$USERNAME</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该用户已经存在!&quot;</span> || &#123; useradd <span class="variable">$USERNAME</span>;<span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span> | passwd --stdin <span class="variable">$USERNAME</span>&gt;/dev/null;<span class="built_in">echo</span> <span class="string">&quot;该用户信息为：`id <span class="variable">$USERNAME</span>`&quot;</span>;<span class="built_in">echo</span> <span class="string">&quot;请修改您的密码对于第一次登录，若非第一次登录请忽略！&quot;</span> &gt;&gt; /home/<span class="variable">$USERNAME</span>/.bashrc; &#125;</span><br></pre></td></tr></table></figure><p>2、编写脚本 yesorno.sh，提示用户输入yes或no,并判断用户输入的是yes还是no,或是其它信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7-mini ~]<span class="comment"># cat yesorno.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please input &#x27;yes&#x27; or &#x27;no&#x27;: &quot;</span> INPUT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INPUT=`<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INPUT</span>&quot;</span> | <span class="built_in">tr</span> -s <span class="string">&#x27;[A-Z]&#x27;</span> <span class="string">&#x27;[a-z]&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$INPUT</span> <span class="keyword">in</span></span><br><span class="line">y|<span class="built_in">yes</span>)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Your input is YES!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">n|no)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Your input is NO!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">*)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Input false! Please input yes or no!&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>3、编写脚本 filetype.sh，判断用户输入文件路径，显示其文件类型（普通，目录，链接，其它文件类型）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">4、编写脚本 checkint.sh，判断用户输入的参数是否为正整数</span><br><span class="line"></span><br><span class="line">~~~bash</span><br><span class="line">[root@Centos7-mini ~]<span class="comment"># cat checkint.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入一个数字：&quot;</span> INTNUM</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$INTNUM</span> =~ ^[0-9]+$ ]];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INTNUM</span> 是一个正整数!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$INTNUM</span> 不是一个正整数!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>5、编写脚本 reset.sh，实现系统安装后的初始化环境，包括：(1)、别名 (2)、环境变量，如PS1等 (3)、安装常用软件包，如：tree (5)、实现固定的IP的设置，(6)、vim的设置等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-2-循环"><a href="#3-2-循环" class="headerlink" title="3.2 循环"></a>3.2 循环</h3><h4 id="3-2-1-循环-for"><a href="#3-2-1-循环-for" class="headerlink" title="3.2.1 循环 for"></a>3.2.1 循环 for</h4><h5 id="格式1"><a href="#格式1" class="headerlink" title="格式1"></a>格式1</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方式1</span></span><br><span class="line"><span class="keyword">for</span> 变量名 <span class="keyword">in</span> 列表;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方式2</span></span><br><span class="line"><span class="keyword">for</span> 变量名 <span class="keyword">in</span> 列表</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>for 循环列表生成方式</p><ul><li>直接给出列表</li><li>整数列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;star..end&#125;</span><br><span class="line">$(<span class="built_in">seq</span> [start [step]] end)</span><br></pre></td></tr></table></figure><ul><li>返回列表的命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(COMMAND)</span><br></pre></td></tr></table></figure><ul><li>使用glob，如：*.sh</li><li>变量引用，如：$@, $*, $#</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当不指定列表时，默认使用位置变量 $@</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat test.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> NAME; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$NAME</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># bash -x test.sh Tom Jerry</span></span><br><span class="line">+ <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">+ <span class="built_in">echo</span> Tom</span><br><span class="line">Tom</span><br><span class="line">+ <span class="keyword">for</span> NAME <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span></span><br><span class="line">+ <span class="built_in">echo</span> Jerry</span><br><span class="line">Jerry</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算 1+2+3+...+100 的结果</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sum=0;for i in &#123;1..100&#125;;do sum=$[$sum+$i];done;echo &quot;sum=$sum&quot;</span></span><br><span class="line"><span class="built_in">sum</span>=5050</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq -s+ 100 | bc</span></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 100以内的奇数之和</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sum=0;for i in &#123;1..100..2&#125;;do let sum=sum+i;done;echo &quot;sum=$sum&quot;</span></span><br><span class="line"><span class="built_in">sum</span>=2500</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq -s+ 1 2 100 | bc</span></span><br><span class="line">2500</span><br></pre></td></tr></table></figure><p>实例：自定义输入数字计算之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat for_sum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : for_sum.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : 接收命令行传来的参数计算之和</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">sum</span>=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $*; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+i]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;sum=<span class="variable">$sum</span>&quot;</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash for_sum.sh 1 2 3 4 5</span></span><br><span class="line"><span class="built_in">sum</span>=15</span><br></pre></td></tr></table></figure><p>实例：传递用户名参数自动创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat CreateUser.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : CreateUser.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : Create Users in Batchers</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;USAGE: CreateUser.sh USERNAME ...&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> USERS;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">id</span> <span class="variable">$USERS</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$USERS</span> already exists&quot;</span> || &#123; useradd <span class="variable">$USERS</span>;<span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$USERS</span>&#x27; user created successfully!&quot;</span>; &#125;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash CreateUser.sh Tom Jerry</span></span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span> user created successfully!</span><br><span class="line"><span class="string">&#x27;Jerry&#x27;</span> user created successfully!</span><br></pre></td></tr></table></figure><p>实例：批量创建用户并设置随机密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat UsersAndPasswords.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : UsersAndPasswords.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-09</span></span><br><span class="line"><span class="comment"># * Description   : Create Users in Branchers and Set Passwords</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">[ <span class="variable">$#</span> -eq 0 ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;USAGE: CreateUser.sh USERNAME ...&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> User;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">id</span> <span class="variable">$User</span> &amp;&gt; /dev/null &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">&quot;user <span class="variable">$User</span> already exists&quot;</span>;<span class="built_in">continue</span>; &#125;</span><br><span class="line">  useradd <span class="variable">$User</span></span><br><span class="line">  PASS=`<span class="built_in">cat</span> /dev/urandom | <span class="built_in">tr</span> -dc <span class="string">&#x27;[:alnum:]&#x27;</span> | <span class="built_in">head</span> -c12`</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$PASS</span>&quot;</span> | passwd --stdin <span class="variable">$User</span> &amp;&gt; /dev/null</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$User</span>:<span class="variable">$PASS</span>&quot;</span> &gt;&gt; /backup/UsersAndPasswords.<span class="built_in">log</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;&#x27;<span class="variable">$User</span>&#x27; user created successfully!&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#bash UsersAndPasswords.sh Tom Jerry</span></span><br><span class="line"><span class="string">&#x27;Tom&#x27;</span> user created successfully!</span><br><span class="line"><span class="string">&#x27;Jerry&#x27;</span> user created successfully!</span><br><span class="line">[root@centos7 shell]<span class="comment">#cat  /backup/UsersAndPasswords.log </span></span><br><span class="line">Tom:5OO4dZXKZSXl</span><br><span class="line">Jerry:DFshykfzYUBL</span><br></pre></td></tr></table></figure><p>实例：九九乘法表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二,printf 打印九九乘法表</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;%s*%s=%d\t&quot;</span> <span class="variable">$j</span> <span class="variable">$i</span> $[i*j]</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式三，打印多彩九九乘法表</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..9&#125;;<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> `<span class="built_in">seq</span> <span class="variable">$i</span>`;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c\E[0m&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>生产案例：将指定目录下文件所有文件后缀名改为bak后缀</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat suffix.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DIR=/data/test</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;Can not access to!&quot;</span>;<span class="built_in">exit</span> 1; &#125;</span><br><span class="line"><span class="keyword">for</span> FILE <span class="keyword">in</span> *;<span class="keyword">do</span></span><br><span class="line">  PRE=`<span class="built_in">echo</span> <span class="variable">$FILE</span> | grep -Eo <span class="string">&quot;.*\.&quot;</span>`</span><br><span class="line">  <span class="built_in">mv</span> <span class="variable">$FILE</span> <span class="variable">$&#123;PRE&#125;</span>bak</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>面试题：将目录YYYY-MM-DD/中所有文件，移动到YYYY-MM/DD/下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat MoveFile.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : MoveFile.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-10</span></span><br><span class="line"><span class="comment"># * Description   : Directory file movement</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line">PDIR=/data</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..365&#125;;<span class="keyword">do</span></span><br><span class="line">  DIR=`<span class="built_in">date</span> -d <span class="string">&quot;-<span class="variable">$i</span> day&quot;</span> +%F`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$PDIR</span>/<span class="variable">$DIR</span></span><br><span class="line">  <span class="built_in">cd</span> <span class="variable">$PDIR</span>/<span class="variable">$DIR</span>/</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..10&#125;;<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">touch</span> <span class="variable">$&#123;RANDOM&#125;</span>.<span class="built_in">log</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;31mRelated directroy files have been created\nStart to move related directories and files\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line">DIR=/data</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span> || &#123; <span class="built_in">echo</span> <span class="string">&quot;Can not access to!&quot;</span>;exit1; &#125;</span><br><span class="line"><span class="keyword">for</span> SUBDIR <span class="keyword">in</span> *;<span class="keyword">do</span></span><br><span class="line">  YYYY_MM=`<span class="built_in">echo</span> <span class="variable">$SUBDIR</span> | <span class="built_in">cut</span> -d<span class="string">&#x27;-&#x27;</span> -f1,2`</span><br><span class="line">  DD=`<span class="built_in">echo</span> <span class="variable">$SUBDIR</span> | <span class="built_in">cut</span> -d<span class="string">&#x27;-&#x27;</span> -f3`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$DIR</span>/<span class="variable">$YYYY_MM</span>/<span class="variable">$DD</span></span><br><span class="line">  <span class="built_in">mv</span> <span class="variable">$SUBDIR</span> ./<span class="variable">$YYYY_MM</span>/<span class="variable">$DD</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\E[1;32mSuccessfully!\E[0m&quot;</span></span><br></pre></td></tr></table></figure><p>面试题：扫描一个网段：192.168.0.0/24，判断此网段中所有主机在线状态，将在线的主机的IP打印出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 shell]<span class="comment">#cat ScanHost.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">NET=192.168.0</span><br><span class="line"><span class="keyword">for</span> ID <span class="keyword">in</span> &#123;1..254&#125;;<span class="keyword">do</span></span><br><span class="line">        fping <span class="variable">$NET</span>.<span class="variable">$ID</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NET</span>.<span class="variable">$ID</span> is alived&quot;</span> | <span class="built_in">tee</span> -a /tmp/ip_alived.log || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NET</span>.<span class="variable">$ID</span> is down&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="格式2"><a href="#格式2" class="headerlink" title="格式2"></a>格式2</h5><p>​    双小括号法，即 ((…)) 格式，也可以用于算数运算，双小括号号方法可以使bash shell实现C语言风格的变量操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((控制变量初始化;条件判断表达式;控制变量的修正表达式))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1~100的和</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#cat sum.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((<span class="built_in">sum</span>=0,i=1;i&lt;=100;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">sum</span>=$[<span class="built_in">sum</span>+i]</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1~100的和为：<span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 九九乘法表 </span></span><br><span class="line">[root@centos7 ~]<span class="comment">#cat /shell/MultiplicationTable.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : MultiplicationTable.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.2</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-10</span></span><br><span class="line"><span class="comment"># * Description   : 9*9 multiplication table</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=9;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> ((j=1;j&lt;=i;j++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m<span class="variable">$j</span>*<span class="variable">$i</span>=$[j*i]\t\c\E[0m&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印等腰三角形</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#cat EquicruralTriangle.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="comment"># * Filename      : EquicruralTriangle.sh</span></span><br><span class="line"><span class="comment"># * Author        : Herbert</span></span><br><span class="line"><span class="comment"># * Version       : 1.0</span></span><br><span class="line"><span class="comment"># * Email         : wuhaolam@163.com</span></span><br><span class="line"><span class="comment"># * Website       : wuhaolam.github.io</span></span><br><span class="line"><span class="comment"># * Date          : 2022-10-11</span></span><br><span class="line"><span class="comment"># * Description   : print equicrural triangle</span></span><br><span class="line"><span class="comment"># **********************************************************</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter the number of rows of triangle: &quot;</span> LINE</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=LINE;i++));<span class="keyword">do</span></span><br><span class="line">  <span class="keyword">for</span> ((j=1;j&lt;=LINE-i;j++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&#x27; \c&#x27;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">for</span> ((k=1;k&lt;=2*i-1;k++));<span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\E[1;$[RANDOM%7+31]m*\E[0m\c&quot;</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221011204213932.png" alt="image-20221011204213932"></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成进度条</span></span><br><span class="line">[root@centos7 shell]<span class="comment">#for ((i=0;i&lt;=100;i++));do printf &quot;\e[4D%3d%%&quot; $i;sleep 0.1s;done</span></span><br></pre></td></tr></table></figure><h4 id="练习（for实现）"><a href="#练习（for实现）" class="headerlink" title="练习（for实现）"></a>练习（for实现）</h4><p>1、判断/var/目录下所有文件的类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">2、添加10个用户user1-user10，密码为8位随机字符</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>3、/etc/rc.d/rc3.d目录下分别有多个以K开头和以S开头的文件；分别读取每个文件，以K开头的输出为文件加stop，以S开头的输出为文件名加start，如K34filename stop S66filename start</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>4、编写脚本，提示输入正整数n的值，计算1+2+…+n的总和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">5、计算100以内所有能被3整除的整数之和</span><br><span class="line"></span><br><span class="line">~~~bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6、在/testdir目录下创建10个html文件,文件名格式为数字N（从1到10）加随机8个字母，如：1AbCdeFgH.html</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>7、猴子第一天摘下若干个桃子，当即吃了一半，还不瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第10天早上想再吃时，只剩下一个桃子了。求第一天共摘了多少？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-2-循环-while"><a href="#3-2-2-循环-while" class="headerlink" title="3.2.2 循环 while"></a>3.2.2 循环 while</h4><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> CONDITION; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 无限循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :;<span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>实例：磁盘检查并发出邮件警告</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实现报警功能需提前设置好报警功能</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实例：防止DOS攻击的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 练习</span></span><br><span class="line"></span><br><span class="line">1、编写脚本，求100以内所有正奇数之和</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>2、编写脚本，提示请输入网络地址，如:192.168.0.0，判断输入的网段中主机在线状态，并统计在线和离线主机各多少</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">3、编写脚本，打印九九乘法表</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>4、编写脚本，利用变量RANDOM生成10个随机数字，输出这个10数字，并显示其中的最大值和最小值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">5、编写脚本，实现打印国际象棋棋盘</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>6、后续六个字符串：efbaf275cd、4be9c40b8b、44b2395c46、f8c8873ce0、b902c16c8b、ad865d2f63是通过对随机数变量RANDOM随机执行命令： echo $RANDOM|md5sum|cut -c1-10后的结果，请破解这些字符串对应的RANDOM值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-3-循环-until"><a href="#3-2-3-循环-until" class="headerlink" title="3.2.3 循环 until"></a>3.2.3 循环 until</h4><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">until CONDITION; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 无线循环</span></span><br><span class="line">until <span class="literal">false</span>; <span class="keyword">do</span></span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-4-continue-语句"><a href="#3-2-4-continue-语句" class="headerlink" title="3.2.4 continue 语句"></a>3.2.4 continue 语句</h4><p>continue [N]：提前结束第N层的本轮循环，直接进入下一轮判断；最内层为第1层</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-5-break-语句"><a href="#3-2-5-break-语句" class="headerlink" title="3.2.5 break 语句"></a>3.2.5 break 语句</h4><p>break[N]：提前结束第N层整个循环，最内层为第1层</p><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"></span><br><span class="line">~~~bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-6-shift命令"><a href="#3-2-6-shift命令" class="headerlink" title="3.2.6 shift命令"></a>3.2.6 shift命令</h4><p>​    shift [n] 用于将参数列表 list 左移指定次数，缺省为左移一次。</p><p>​    当参数列表 list 被移动，最左端的那个参数就从列表中删除。while循环遍历位置参数列表时，常用到 shift</p><p>示例1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">示例2</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h4><p>1、每隔3秒钟到系统上获取已经登录的用户的信息；如果发现用户hacker登录，则将登录时间和主机记录于日志/var/log/login.log中,并退出脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">2、随机生成10以内的数字，实现猜字游戏，提示比较大或小，相等则退出</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>3、用文件名做为参数，统计所有参数文件的总行数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">4、用二个以上的数字为参数，显示其中的最大值和最小值</span><br><span class="line"></span><br><span class="line">~~~bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-7-while-特殊用法-while-read"><a href="#3-2-7-while-特殊用法-while-read" class="headerlink" title="3.2.7 while 特殊用法 while read"></a>3.2.7 while 特殊用法 while read</h4><p>while 循环的特殊用法，遍历文件或文本的每一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> LINE;<span class="keyword">do</span></span><br><span class="line">loop body</span><br><span class="line"><span class="keyword">done</span> &lt; /PATH/SOMEFILE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 依次读取/PATH/SOMEFILE文件中的每一行，且将行赋值给变量LINE</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">实例：磁盘检查</span><br><span class="line"></span><br><span class="line">~~~bash</span><br></pre></td></tr></table></figure><p>实例：检查DOS攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">~~~</span><br><span class="line"></span><br><span class="line">实例：查看/sbin/nologin的shell类型的用户名和UID</span><br><span class="line"></span><br><span class="line">~~~bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-8-循环与菜单-select"><a href="#3-2-8-循环与菜单-select" class="headerlink" title="3.2.8 循环与菜单 select"></a>3.2.8 循环与菜单 select</h4><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select NAME [<span class="keyword">in</span> WORDS ...;]<span class="keyword">do</span> COMMANDS;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">select VARIABLE <span class="keyword">in</span> list; <span class="keyword">do</span></span><br><span class="line">循环体命令</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>select 循环主要用于创建菜单，按数字顺序排列的菜单项显示在标准错误上，并显示 PS3 提示符，等待用户输入</li><li>用户输入菜单列表中的某个数字，执行相应的命令</li><li>用户的输入被保存在内置变量 REPLY 中</li><li>select 是个无限循环，因此要用break命令退出循环，或者用exit命令终止脚本</li><li>select 经常和case联合使用</li><li>与 for 循环类似，可以省略 in list，此时使用位置参数</li></ul><p>实例：餐馆点菜</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、函数-function"><a href="#四、函数-function" class="headerlink" title="四、函数 function"></a>四、函数 function</h2><h2 id="五、其它脚本相关工具"><a href="#五、其它脚本相关工具" class="headerlink" title="五、其它脚本相关工具"></a>五、其它脚本相关工具</h2><h2 id="六、数组-array"><a href="#六、数组-array" class="headerlink" title="六、数组 array"></a>六、数组 array</h2><h2 id="七、字符串处理"><a href="#七、字符串处理" class="headerlink" title="七、字符串处理"></a>七、字符串处理</h2><h2 id="八、高级变量"><a href="#八、高级变量" class="headerlink" title="八、高级变量"></a>八、高级变量</h2>]]></content>
      
      
      <categories>
          
          <category> Shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本处理三剑客</title>
      <link href="/archives/8b87eef8.html"/>
      <url>/archives/8b87eef8.html</url>
      
        <content type="html"><![CDATA[<h1 id="文本处理三剑客之-GREP"><a href="#文本处理三剑客之-GREP" class="headerlink" title="文本处理三剑客之 GREP"></a>文本处理三剑客之 GREP</h1><h2 id="一、grep"><a href="#一、grep" class="headerlink" title="一、grep"></a>一、grep</h2><p>grep：</p><p>​    作用：文本搜索工具，根据指定的“模式”来对需要处理的文本逐行进行检查，打印匹配到的行</p><p>​    模式：由正则表达式及字符构成的搜索条件</p><p>​    格式：<code>grep [OPTION]    PATTERN    [FILE...]</code></p><p><strong>常见选项</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">-color=auto    对匹配到的文本进行着色显示，默认</span><br><span class="line">-m <span class="comment">#           匹配#次后停止</span></span><br><span class="line">-v             显示没有被pattern匹配到的行，即取反</span><br><span class="line">-i             忽略字符大小写</span><br><span class="line">-n             显示匹配的行号</span><br><span class="line">-c             统计匹配的行数</span><br><span class="line">-o             仅显示匹配到的字符串</span><br><span class="line">-q             静默模式，不输出任何信息</span><br><span class="line">-A <span class="comment">#           after，后#行</span></span><br><span class="line">-B <span class="comment">#           before，前#行</span></span><br><span class="line">-C <span class="comment">#           context，前后各#行</span></span><br><span class="line">-e             实现多个选项间的逻辑or关系，如grep –e <span class="string">&#x27;cat&#x27;</span> -e <span class="string">&#x27;dog&#x27;</span> file</span><br><span class="line">-w             匹配整个单词</span><br><span class="line">-E             使用扩展的正则表达式，相当于egrep</span><br><span class="line">-F             不支持正则表达式，相当于fgrep</span><br><span class="line">-f file        根据模式文件处理,将一个文件作为模式的条件</span><br><span class="line">-r             递归目录，但不处理软链接</span><br><span class="line">-R             递归目录，处理软链接</span><br></pre></td></tr></table></figure><h3 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h3><p><strong>（1）取两个文件相同的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将a.txt文件作为条件匹配b.txt文件中的内容</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">a</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">a</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -f a.txt b.txt </span></span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">a</span><br></pre></td></tr></table></figure><p><strong>（2）分区利用率最大的值</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &#x27;^/dev/sd&#x27; | tr -s &#x27; &#x27; | cut -d&#x27; &#x27; -f5 | sort -n | tail -1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &#x27;^/dev/sd&#x27; | grep -o &#x27;\&lt;[0-9]\&#123;,3\&#125;%&#x27; | sort -nr | head -n1</span></span><br></pre></td></tr></table></figure><p><strong>（3）连接当前主机最多的前3个IP及连接数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &#x27;^ESTAB&#x27; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr | head -n3</span></span><br></pre></td></tr></table></figure><p><strong>（4）统计当前连接状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nta | grep -v &#x27;^State&#x27; | cut -d&quot; &quot; -f1 | sort | uniq -c</span></span><br></pre></td></tr></table></figure><p><strong>（5）显示 /etc/profile 文件中非#开头及空白行的内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &quot;^#&quot; /etc/profile | grep -v &#x27;^$&#x27;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v -e &quot;^#&quot; -e &quot;^$&quot; /etc/profile</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &#x27;^#\|^$&#x27; /etc/profile</span></span><br></pre></td></tr></table></figure><p><strong>（6）显示IP地址相关信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig | grep -E &#x27;([0-9]&#123;1,3&#125;.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（7）算出所有人的年龄总和</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat age.txt </span></span><br><span class="line">xiaoming:20</span><br><span class="line">xiaohong:18</span><br><span class="line">xiaoqiang:22</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cut -d: -f2 age.txt | tr &#x27;\n&#x27; + | grep -Eo &quot;.*[0-9]&quot; | bc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -Eo &#x27;[0-9]+&#x27; age.txt | tr &#x27;\n&#x27; + | grep -Eo &quot;.*[0-9]&quot; | bc</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -Eo &#x27;[0-9]+&#x27; age.txt | paste -s -d+ | bc</span></span><br></pre></td></tr></table></figure><p><strong>（8）其它选项示例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -w root /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &#x27;\&lt;root\&gt;&#x27; /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -E &quot;^(.*)\&gt;.*\&lt;\1$&quot; /etc/passwd</span></span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br></pre></td></tr></table></figure><hr><h1 id="文本处理三剑客之-SED"><a href="#文本处理三剑客之-SED" class="headerlink" title="文本处理三剑客之 SED"></a>文本处理三剑客之 SED</h1><h2 id="一、sed"><a href="#一、sed" class="headerlink" title="一、sed"></a>一、sed</h2><h3 id="1-1-sed-工作原理"><a href="#1-1-sed-工作原理" class="headerlink" title="1.1 sed 工作原理"></a>1.1 sed 工作原理</h3><p>​    当sed处理某个文件时，首先读取该文件的第一行进入到模式空间中，然后使用sed命令处理该模式空间中的内容，处理完成后，将模式空间中的内容输出到屏幕，接着处理下一行，直至文件末尾。</p><p>​    sed命令默认执行的是p操作，即打印操作，当没有指定特定的操作时，直接将该内容输出至屏幕；如果模式空间中执行了打印操作，那么该行内容就会被打印输出至屏幕，模式空间中的内容默认打印至屏幕，这是该行内容在屏幕上就会出现两次。</p><h3 id="1-2-sed基本用法"><a href="#1-2-sed基本用法" class="headerlink" title="1.2 sed基本用法"></a>1.2 sed基本用法</h3><p><strong>SYNOPSIS</strong><br>       <code>sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]...</code></p><p><strong>常用选项：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-n        不输出模式空间中的内容至屏幕，即不自动打印</span><br><span class="line">-e        多点编辑</span><br><span class="line">-f FILE   从指定的文件中读取编辑脚本</span><br><span class="line">-r,-E     使用扩展的正则表达式</span><br><span class="line">-i.bak    备份文件并原处编辑</span><br><span class="line">-s        将多个文件视为独立文件</span><br></pre></td></tr></table></figure><p><strong>script 格式：地址+命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 地址格式</span></span><br><span class="line">1. 没有给地址范围，默认对全文做处理</span><br><span class="line">2. 单个地址</span><br><span class="line">   <span class="comment">#：指定第#行</span></span><br><span class="line">   $：最后一行</span><br><span class="line">   /pattern/：被模式匹配到的每一行</span><br><span class="line">3. 地址范围</span><br><span class="line">   <span class="comment">#,#                从第#行到第#行</span></span><br><span class="line">   <span class="comment">#,+#               如3,+4;从第3行到第7行</span></span><br><span class="line">   /pat1/,/pat2/      从被pat1模式匹配到的行到被pat2模式匹配到的行</span><br><span class="line">   <span class="comment">#,/pat/</span></span><br><span class="line">   /pat/,<span class="comment">#</span></span><br><span class="line">4. 步进 ~</span><br><span class="line">   1~2    奇数行</span><br><span class="line">   2~2    偶数行</span><br><span class="line">   </span><br><span class="line"><span class="comment"># 命令</span></span><br><span class="line">p                    打印当前模式空间中的内容，追加到默认输出之后</span><br><span class="line">Ip                   忽略大小写输出</span><br><span class="line">d                    删除模式空间中匹配到的行，并读取下一行内容进行处理</span><br><span class="line">a [\]text            在指定行后面追加文本，支持使用\n实现多行追加</span><br><span class="line">i [\]text            在行前面插入文本</span><br><span class="line">c [\]text            替换行为单行或多行文本</span><br><span class="line">w file               保存模式匹配到的行到指定文件</span><br><span class="line">r file               读取指定文件的文本至模式空间中匹配到的行后</span><br><span class="line">=                    为模式空间中的行打印行号</span><br><span class="line">!                    模式空间中匹配行取反处理</span><br><span class="line">q                    退出sed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找替换</span></span><br><span class="line">s/pattern/string/修饰符            分隔符可以是s@@@或s<span class="comment">###</span></span><br><span class="line">替换时可用修饰符：</span><br><span class="line">  g    行内全局替换</span><br><span class="line">  p    显示替换成功的行</span><br><span class="line">  w /PATH/FILE    将替换成功的行保存至文件中</span><br><span class="line">  I,i  忽略大小写</span><br></pre></td></tr></table></figure><h4 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;&#x27; /etc/issue</span></span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;p&#x27; /etc/issue</span></span><br><span class="line">\S</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | sed -n &#x27;2p&#x27;</span></span><br><span class="line">        inet 192.168.119.128  netmask 255.255.255.0  broadcast 192.168.119.255</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | sed -n &#x27;/netmask/p&#x27;</span></span><br><span class="line">        inet 192.168.119.128  netmask 255.255.255.0  broadcast 192.168.119.255</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -n &#x27;$p&#x27; /etc/passwd</span></span><br><span class="line">saslauth:x:994:76:Saslauthd user:/run/saslauthd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | sed -n &#x27;/^\/dev\/sd/p&#x27;</span></span><br><span class="line">/dev/sda1             1038336  216624    821712  21% /boot</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># seq 10 | sed -n &#x27;1,2p&#x27;</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line"><span class="comment"># seq.log 文件中有1~5行数</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -e &#x27;2d&#x27; -e &#x27;5d&#x27; seq.log </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示非注释行和空行</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed &#x27;/^#/d;/^$/d&#x27; /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时编辑seq.log文件，并备份原来的文件</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat seq.log</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># sed -i.bak &#x27;2d;3d&#x27; seq.log</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat seq.log;cat seq.log.bak </span></span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除/etc/fstab文件中所有非#开头的行</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -n &#x27;/^#/!p&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><h4 id="范例-1"><a href="#范例-1" class="headerlink" title="范例"></a>范例</h4><p><strong>（1）修改网卡名为eth0，并使其生效</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># sed -Ei.bak &#x27;/^GRUB_CMDLINE_LINUX/s/(.*)(&quot;)$/\1 net.ifnames=0\2/&#x27; /etc/default/grub</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><p><strong>（2）取IP地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | sed -nr &#x27;2s/[^0-9]+([0-9.]+).*/\1/p&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（3）取基名和目录名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取基名</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;/etc/sysconfig/network-scripts/&quot; | sed -r &#x27;s@(^/.*/)([^/]+/?)@\2@&#x27;</span></span><br><span class="line"><span class="comment"># 取目录名</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo &quot;/etc/sysconfig/network-scripts/&quot; | sed -r &#x27;s@(^/.*/)([^/]+/?)@\1@&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>（4）取文件的前缀和后缀</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg</span><br><span class="line"><span class="comment"># 取前缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ls | sed -En &#x27;s/(.*)\.([^.]+)/\1/p&#x27;</span></span><br><span class="line"><span class="comment"># 取后缀</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ls | sed -En &#x27;s/(.*)\.([^.]+)/\2/p&#x27;</span></span><br><span class="line"><span class="comment"># 同理，当想取更多的后缀时</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># echo a.b.c.tar.gz | sed -nr &#x27;s@.*\.([^.]+)\.([^.]+)@\1.\2@p&#x27;</span></span><br><span class="line">tar.gz</span><br></pre></td></tr></table></figure><p><strong>（5）将非#开头的行加#</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &quot;&amp;&quot;表示引用前面匹配到的所有内容</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -nr &#x27;s/^[^#]/#&amp;/p&#x27; /etc/fstab</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -nr &#x27;s/^[^#](.*)/#\1/p&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><p><strong>（6）取分区利用率</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># df | sed -nr &#x27;/^\/dev\/sd/s@ .* ([0-9]+)%.*@ \1@p&#x27;</span></span><br><span class="line">/dev/sda1 15</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sdc1 56</span><br></pre></td></tr></table></figure><p><strong>（7）查看配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment"># 删除空行和以#开头的行</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed -r &#x27;/^(#|$)/d&#x27; /etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="comment"># 将行首后添加多个空白符之后有#的行也删除</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># sed  -e &#x27;/^$/d&#x27; -e &#x27;/^[[:space:]]*#/d&#x27; /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure><p><strong>（8）引用变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># echo | sed &quot;s/^/$RANDOM/&quot;</span></span><br><span class="line">29428</span><br></pre></td></tr></table></figure><hr><h1 id="文本处理三剑客之-AWK"><a href="#文本处理三剑客之-AWK" class="headerlink" title="文本处理三剑客之 AWK"></a>文本处理三剑客之 AWK</h1><h2 id="一、AWK"><a href="#一、AWK" class="headerlink" title="一、AWK"></a>一、AWK</h2><h3 id="1-1-AWK-简介及基本用法"><a href="#1-1-AWK-简介及基本用法" class="headerlink" title="1.1 AWK 简介及基本用法"></a>1.1 AWK 简介及基本用法</h3><p>gawk - pattern scanning and processing language</p><ul><li>文本处理</li><li>输出格式化的文本报表</li><li>执行算术运算</li><li>执行字符串操作</li></ul><p>格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">awk [options] <span class="string">&#x27;program&#x27;</span> var=value file...</span><br><span class="line">awk [options] -f programfile var=value file...</span><br><span class="line"></span><br><span class="line">program 通常放在单引号中，通常由三种部分组成</span><br><span class="line"> - BEGIN 语句块</span><br><span class="line"> - 模式匹配的通用语句块</span><br><span class="line"> - END 语句块</span><br><span class="line"></span><br><span class="line">常见选项:</span><br><span class="line"> - -F<span class="string">&quot;分隔符&quot;</span> 指明输入时用到的字段分隔符，默认的分隔符是若干个连续空白符</span><br><span class="line"> - -v var=value 变量赋值</span><br><span class="line"> </span><br><span class="line">program 格式:</span><br><span class="line">pattern&#123;action statements;...&#125;</span><br><span class="line">pattern: 决定动作语句何时触发及触发事件，如：BEGIN、END、正则表达式等</span><br><span class="line">action statements：对数据进行处理，放在&#123;&#125;内指明，常见<span class="built_in">print</span>、<span class="built_in">printf</span></span><br></pre></td></tr></table></figure><p><strong>awk 工作过程</strong></p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220919232411154.png" alt="image-20220919232411154" style="zoom:80%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、通过关键字BEGIN执行BEGIN块的内容，即BEGIN后花括号&#123;&#125;的内容</span><br><span class="line"><span class="number">2</span>、完成BEGIN块的执行，开始执行body块</span><br><span class="line"><span class="number">3</span>、读入有\n换行符分割的记录</span><br><span class="line"><span class="number">4</span>、将每个记录按指定的域分隔符划分域，填充域，$<span class="number">0</span>表示所有域（即该行所有内容），$<span class="number">1</span>表示第一个域，$n表示第n个域</span><br><span class="line"><span class="number">5</span>、依次执行各body块，pattern部分表示匹配到该行内容后才会执行awk-command的内容</span><br><span class="line"><span class="number">6</span>、循环读取每一行直至结束，完成body块执行</span><br><span class="line"><span class="number">7</span>、执行END块语句，输出最终结果</span><br></pre></td></tr></table></figure><p><strong>分隔符、域和记录</strong></p><ul><li>由分隔符将字段分隔形成的各项成为域，标记$1，$2，$3…$n称为域标识，$0为所有域</li><li>文件的每一行称为记录</li><li>如果省略action，默认执行print $0 的操作</li></ul><p><strong>常用的action分类</strong></p><ul><li>output statements：print，printf</li><li>Expressions：算术，比较表达式等</li><li>Compound statements</li><li>Control statements</li><li>input statements</li></ul><p><strong>awk控制语句</strong></p><ul><li>{ statements;··· } 组合语句</li><li>if 语句</li><li>while 语句</li><li>do ··· while 语句</li><li>for 语句</li><li>break、continue、exit </li></ul><h3 id="1-2-动作-print"><a href="#1-2-动作-print" class="headerlink" title="1.2 动作 print"></a>1.2 动作 print</h3><p>格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> item1,item2,···</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>逗号分隔符</li><li>输出item可以是字符串、数值、当前记录的字段、变量或awk的表达式</li><li>如果省略item，则默认print $0</li><li>固定字符使用“ ”引起来，变量和字符不需要</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># seq 1 | awk &#x27;&#123;print &quot;hello,awk!&quot;&#125;&#x27;</span></span><br><span class="line">hello,awk!</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print $1,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print $1&quot;\t&quot;$3&#125;&#x27; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>Example1：取出网站访问量最大的前3个IP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat nginx.access.log-20200428 | head -5</span></span><br><span class="line">58.87.87.99 - - [27/Apr/2020:03:10:51 +0800] <span class="string">&quot;POST /wp-cron.php?doing_wp_cron=1587928251.0032949447631835937500 HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">61.131.3.225 - - [27/Apr/2020:03:10:51 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:52 +0800] <span class="string">&quot;GET /wp-login.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:53 +0800] <span class="string">&quot;POST /wp-login.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">157.245.106.153 - - [27/Apr/2020:03:10:54 +0800] <span class="string">&quot;POST /xmlrpc.php HTTP/1.1&quot;</span> <span class="string">&quot;&quot;</span>sendfileon</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print $1&#125;&#x27; nginx.access.log-20200428 | sort | uniq -c | sort -nr | head -n 3</span></span><br><span class="line">   5498 122.51.38.20</span><br><span class="line">   2161 117.157.173.214</span><br><span class="line">    953 211.159.177.120</span><br></pre></td></tr></table></figure><p><strong>Example2：取出分区利用率</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分隔符支持使用扩展的正则表达式</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># df | grep &quot;^/dev/sd&quot; | awk -F&quot;[[:space:]]+|%&quot; &#x27;&#123;print $1,$5&#125;&#x27;</span></span><br><span class="line">/dev/sdc1 56</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sda1 15</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># df |  awk -F&quot;[[:space:]]+|%&quot; &#x27;/^\/dev\/sd/&#123;print $1,$5&#125;&#x27;</span></span><br><span class="line">/dev/sdc1 56</span><br><span class="line">/dev/sdb1 55</span><br><span class="line">/dev/sda1 15</span><br></pre></td></tr></table></figure><p><strong>Example3：取Nginx的访问日志中的IP和时间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -F&#x27;[[ ]&#x27; &#x27;&#123;print $1,$5&#125;&#x27; nginx.access.log-20200428 | head -3</span></span><br><span class="line">58.87.87.99 27/Apr/2020:03:10:51</span><br><span class="line">61.131.3.225 27/Apr/2020:03:10:51</span><br><span class="line">157.245.106.153 27/Apr/2020:03:10:52</span><br></pre></td></tr></table></figure><p><strong>Example4：取 ifconfig 输出结果中的地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print $2&#125;&#x27;</span></span><br><span class="line">192.168.119.165</span><br><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | sed -nr &#x27;2s/^[^0-9]+([0-9.]+) .*$/\1/p&#x27;</span></span><br><span class="line">192.168.119.165</span><br></pre></td></tr></table></figure><p><strong>Example5：参考主机文件host.log格式，提取“.wuhaolam.top”前面主机名部分并写入到该文件中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat host.log </span></span><br><span class="line">1 www.wuhaolam.top</span><br><span class="line">2 blog.wuhaolam.top</span><br><span class="line">3 study.wuhaolam.top</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&#x27;[ .]&#x27; &#x27;&#123;print $2&#125;&#x27; host.log &gt;&gt; host.log </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># cat host.log</span></span><br><span class="line">1 www.wuhaolam.top</span><br><span class="line">2 blog.wuhaolam.top</span><br><span class="line">3 study.wuhaolam.top</span><br><span class="line">www</span><br><span class="line">blog</span><br><span class="line">study</span><br></pre></td></tr></table></figure><h3 id="1-3-awk-变量"><a href="#1-3-awk-变量" class="headerlink" title="1.3 awk 变量"></a>1.3 awk 变量</h3><h4 id="1-3-1-awk常见的内置变量"><a href="#1-3-1-awk常见的内置变量" class="headerlink" title="1.3.1 awk常见的内置变量"></a>1.3.1 awk常见的内置变量</h4><ul><li>FS：输入字段分隔符，默认为空白字符，相当于 -F</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用FS指定，可以当作变量在输出时当作分隔符</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; &#x27;&#123;print $1,FS,$3&#125;&#x27; /etc/passwd | head -3</span></span><br><span class="line">root : 0</span><br><span class="line">bin : 1</span><br><span class="line">daemon : 2</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&quot;:&quot; &#x27;&#123;print $1FS$3&#125;&#x27; /etc/passwd | head -n 3</span></span><br><span class="line">root:0</span><br><span class="line">bin:1</span><br><span class="line">daemon:2</span><br></pre></td></tr></table></figure><ul><li>OFS：输出字段分隔符，默认为空白字符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; &#x27;&#123;print $1,$3,$7&#125;&#x27; /etc/passwd  | head -n1 </span></span><br><span class="line">root 0 /bin/bash</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -v FS=&#x27;:&#x27; -v OFS=&#x27;:&#x27; &#x27;&#123;print $1,$3,$7&#125;&#x27; /etc/passwd  | head -n1 </span></span><br><span class="line">root:0:/bin/bash</span><br></pre></td></tr></table></figure><ul><li>RS：输入记录record分隔符，指定输入时的换行符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd</span></span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd | awk -v RS=&#x27; &#x27; &#x27;&#123;print&#125;&#x27;</span></span><br><span class="line">polkitd:x:999:998:User</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line">polkitd:/:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li>ORS：输出记录分隔符，输出时用指定符号代替换行符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;polkitd&quot; /etc/passwd | awk -v RS=&#x27; &#x27; -v ORS=&#x27; &#x27; &#x27;&#123;print&#125;&#x27;</span></span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line"> [root@centos7 ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li>NF：字段个数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 引用内置变量不需要使用$</span></span><br><span class="line"><span class="comment"># 将显示以:作为分隔符的每一个记录将会被分割成多少个域的数量</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;&#123;print NF&#125;&#x27; /etc/fstab </span></span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>Example1：连接数最多的前三个IP</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat ss.log </span></span><br><span class="line">State      Recv-Q Send-Q        Local Address:Port          Peer Address:Port </span><br><span class="line">ESTAB      0      0            123.57.218.140:80           210.21.36.228:17036 </span><br><span class="line">ESTAB      0      0                 127.0.0.1:55388            127.0.0.1:27017 </span><br><span class="line">ESTAB      0      0            123.57.218.140:22         101.200.188.230:42002 </span><br><span class="line">ESTAB      0      96           123.57.218.140:22          61.149.193.234:50314</span><br><span class="line">···</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&quot; +|:&quot; &#x27;&#123;print $(NF-2)&#125;&#x27; ss.log | sort | uniq -c | sort -nr | head -n3</span></span><br><span class="line">     44 127.0.0.1</span><br><span class="line">     10 113.234.28.244</span><br><span class="line">      8 124.64.18.135</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F&quot; +|:&quot; &#x27;/^ESTAB/&#123;print $(NF-2)&#125;&#x27; ss.log | sort | uniq -c | sort -nr | head -n3</span></span><br></pre></td></tr></table></figure><p><strong>Example2：将连接数超过100个以上的IP放入黑名单拒绝访问</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cat deny_IP.sh </span></span><br><span class="line">LINK=100</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  ss -nt | awk -F<span class="string">&#x27; +|:&#x27;</span> <span class="string">&#x27;/^ESTAB/&#123;print $(NF-2)&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="keyword">while</span> <span class="built_in">read</span> count ip;<span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$count</span> -gt <span class="variable">$LINK</span> ];<span class="keyword">then</span></span><br><span class="line">      iptables -A INPUT -s <span class="variable">$ip</span> -j REJECT</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><ul><li>NR：记录的编号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;END&#123;print NR&#125;&#x27; /etc/passwd</span></span><br><span class="line">21</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk -F: &#x27;BEGIN&#123;print NR&#125;&#x27; /etc/passwd</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>Example1：显示awk处理文本时的记录及每条记录对应的内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">4 CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><p><strong>Example2：取IP地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;/\&lt;inet\&gt;/&#123;print $2&#125;&#x27;</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ifconfig eth0 | awk &#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>FNR：对各自的文件的记录进行编号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print NR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">4 CentOS Linux release 7.9.2009 (Core)</span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print FNR,$0&#125;&#x27; /etc/issue /etc/centos-release</span></span><br><span class="line">1 \S</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3 </span><br><span class="line">1 CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure><ul><li>FILENAME：当前文件名</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每行记录前显示该条记录所在的文件</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;&#123;print FILENAME&#125;&#x27; /etc/fstab</span></span><br></pre></td></tr></table></figure><ul><li>ARGC：命令行参数的个数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;BEGIN&#123;print ARGC&#125;&#x27; /etc/issue /etc/redhat-release </span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><ul><li>ARGV：数组，保存的是命令行所给的各参数，ARGV[0],····</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk &#x27;BEGIN&#123;print ARGV[0]&quot;\n&quot;ARGV[1]&quot;\n&quot;ARGV[2]&#125;&#x27; /etc/issue /etc/redhat-release </span></span><br><span class="line">awk</span><br><span class="line">/etc/issue</span><br><span class="line">/etc/redhat-release</span><br></pre></td></tr></table></figure><h4 id="1-3-2-自定义变量"><a href="#1-3-2-自定义变量" class="headerlink" title="1.3.2 自定义变量"></a>1.3.2 自定义变量</h4><p>​    自定义变量区分大小写，有如下两种定义方式：</p><ul><li>-v var=value</li><li>在program中直接定义</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># awk -v test1=test2=&quot;hello&quot; &#x27;BEGIN&#123;print test1,test2&#125;&#x27;</span></span><br><span class="line">test2=hello</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># awk  &#x27;BEGIN&#123;test1=test2=&quot;hello&quot;;print test1,test2&#125;&#x27;</span></span><br><span class="line">hello hello</span><br><span class="line"></span><br><span class="line">注：若两种方式同时使用，在program中定义的变量优先级更高</span><br></pre></td></tr></table></figure><h3 id="1-4-printf-动作"><a href="#1-4-printf-动作" class="headerlink" title="1.4 printf 动作"></a>1.4 printf 动作</h3><h3 id="1-5-操作符"><a href="#1-5-操作符" class="headerlink" title="1.5 操作符"></a>1.5 操作符</h3><h3 id="1-6-模式-PATTERN"><a href="#1-6-模式-PATTERN" class="headerlink" title="1.6 模式 PATTERN"></a>1.6 模式 PATTERN</h3><h3 id="1-7-条件判断-if-else"><a href="#1-7-条件判断-if-else" class="headerlink" title="1.7 条件判断 if-else"></a>1.7 条件判断 if-else</h3><h3 id="1-8-条件判断-switch"><a href="#1-8-条件判断-switch" class="headerlink" title="1.8 条件判断 switch"></a>1.8 条件判断 switch</h3><h3 id="1-9-循环-while"><a href="#1-9-循环-while" class="headerlink" title="1.9 循环 while"></a>1.9 循环 while</h3><h3 id="1-10-循环-do-···-while"><a href="#1-10-循环-do-···-while" class="headerlink" title="1.10 循环 do ··· while"></a>1.10 循环 do ··· while</h3><h3 id="1-11-循环-for"><a href="#1-11-循环-for" class="headerlink" title="1.11 循环 for"></a>1.11 循环 for</h3><h3 id="1-12-continue-和-break"><a href="#1-12-continue-和-break" class="headerlink" title="1.12 continue 和 break"></a>1.12 continue 和 break</h3><h3 id="1-13-next"><a href="#1-13-next" class="headerlink" title="1.13 next"></a>1.13 next</h3><h3 id="1-14-数组"><a href="#1-14-数组" class="headerlink" title="1.14 数组"></a>1.14 数组</h3><h3 id="1-15-awk-函数"><a href="#1-15-awk-函数" class="headerlink" title="1.15 awk 函数"></a>1.15 awk 函数</h3><h3 id="1-16-awk-脚本"><a href="#1-16-awk-脚本" class="headerlink" title="1.16 awk 脚本"></a>1.16 awk 脚本</h3><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本处理工具与正则表达式</title>
      <link href="/archives/bd60744f.html"/>
      <url>/archives/bd60744f.html</url>
      
        <content type="html"><![CDATA[<h1 id="文本编辑工具-vim"><a href="#文本编辑工具-vim" class="headerlink" title="文本编辑工具 vim"></a>文本编辑工具 vim</h1><p><strong>vi 和 vim 简介</strong></p><p>​    vi 是文本编辑器，vim 是 vi 的增强版。</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220817084311877.png" alt="image-20220817084311877"  /><h2 id="一、vim-的常见模式和转换"><a href="#一、vim-的常见模式和转换" class="headerlink" title="一、vim 的常见模式和转换"></a>一、vim 的常见模式和转换</h2><p><strong>1、三种常见模式</strong></p><ul><li>命令或普通模式    vim 打开一个文件的默认启动模式，可以实现光标移动、剪切/粘贴文本</li><li>插入或编辑模式    修改文本</li><li>扩展命令或命令（末）行模式    保存、退出等</li></ul><p><strong>2、模式之间的转换</strong></p><p>命令模式 —&gt; 插入模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i insert，在光标所在处插入</span><br><span class="line">I在当前光标所在行的行首输入</span><br><span class="line">aappend，在光标所在处后面插入</span><br><span class="line">A在当前光标所在行的行尾输入</span><br><span class="line">o在光标所在行的下方插入一个新行</span><br><span class="line">O在当前光标所在行的上方打开一个新行</span><br></pre></td></tr></table></figure><p>插入模式 —&gt; 命令模式        Esc</p><p>命令模式 —&gt; 末行模式        :</p><p>末行模式 —&gt; 命令模式        Esc，Enter</p><p>示例：插入颜色字符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、切换至插入模式</span><br><span class="line">2、按ctrl+v+[ 三个键，显示^[</span><br><span class="line">3、后续输入颜色信息</span><br><span class="line">4、切换至扩展命令模式，保存退出</span><br><span class="line">5、<span class="built_in">cat</span> 文件内容时看见相关颜色文本内容</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vim color.txt</span></span><br><span class="line">^[[1;31mHello^[[0m</span><br><span class="line"><span class="comment"># 结果如下图</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat color.txt</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20221008222224417.png" alt="image-20221008222224417"></p><h2 id="二、末行模式"><a href="#二、末行模式" class="headerlink" title="二、末行模式"></a>二、末行模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按 : 进入末行模式</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># vi /etc/shadow</span></span><br><span class="line">  1 root:$6$gwZKY4RbKMpHlO7S<span class="variable">$FztMVac</span>/skadP5/ALb.KQvjNRS4CvFcpiD8FfGPPMcbPahW/LfsEXHQXfz.f3eTVpMFvaDQCPLeX/dAPElpjK0::0:99999:7:::</span><br><span class="line">  2 bin:*:18700:0:99999:7:::</span><br><span class="line">  3 daemon:*:18700:0:99999:7:::</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line"> 26 saslauth:!!:19078::::::</span><br><span class="line">~                                                                                                        </span><br><span class="line">:</span><br></pre></td></tr></table></figure><h3 id="2-1-末行模式基本命令"><a href="#2-1-末行模式基本命令" class="headerlink" title="2.1 末行模式基本命令"></a>2.1 末行模式基本命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">w          保存文件</span><br><span class="line">wq       写入并退出</span><br><span class="line">x       写入并退出</span><br><span class="line">X       加密</span><br><span class="line">q       退出</span><br><span class="line">q!       强制退出</span><br><span class="line">r filename读入一个文件内容到当前文件的光标所在处</span><br><span class="line">w filename将当前文件内容写入另一个文件中</span><br><span class="line">!<span class="built_in">command</span>在不退出vim的情况下，临时执行一个命令</span><br><span class="line">r!<span class="built_in">command</span>读入一个命令的输出到当前文件中</span><br></pre></td></tr></table></figure><h3 id="2-2-地址定界"><a href="#2-2-地址定界" class="headerlink" title="2.2 地址定界"></a>2.2 地址定界</h3><p>格式 <code>:start_pos,end_pos CMD</code></p><h4 id="2-2-1-地址定界格式"><a href="#2-2-1-地址定界格式" class="headerlink" title="2.2.1 地址定界格式"></a>2.2.1 地址定界格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#        具体第#行</span></span><br><span class="line"><span class="comment">#,#      从第几行到第几行</span></span><br><span class="line"><span class="comment">#,+#  例：3,+3 从第三行到第六行</span></span><br><span class="line">.        当前行</span><br><span class="line">$        最后一行</span><br><span class="line">.,$-1当前行到倒数第二行</span><br><span class="line">%全文</span><br><span class="line"></span><br><span class="line">/PATTERN/从当前行向下查找，直到匹配查找到的字符串。支持正则表达式</span><br><span class="line">/pat1/,/pat2/从第一个匹配到的模式开始到第二次匹配到的模式结束</span><br><span class="line"><span class="comment">#,/pat/从#行开始，到匹配到pattern的行结束</span></span><br><span class="line">/pat/,$从匹配到的第一个pat开始到文件末尾的所有行</span><br></pre></td></tr></table></figure><h4 id="2-2-2-地址定界后跟编辑命令"><a href="#2-2-2-地址定界后跟编辑命令" class="headerlink" title="2.2.2 地址定界后跟编辑命令"></a>2.2.2 地址定界后跟编辑命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">d删除</span><br><span class="line">y复制</span><br><span class="line">wfile将匹配到的行另存到指定文件中</span><br><span class="line">r file在指定位置插入指定文件的内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除2~5行</span></span><br><span class="line">:2,5d</span><br><span class="line"><span class="comment"># 在第五行读入指定文件的内容，在指定行下方插入</span></span><br><span class="line">:5 r /etc/shadow</span><br></pre></td></tr></table></figure><h3 id="2-3-查找替换"><a href="#2-3-查找替换" class="headerlink" title="2.3 查找替换"></a>2.3 查找替换</h3><h4 id="2-3-1-查找"><a href="#2-3-1-查找" class="headerlink" title="2.3.1 查找"></a>2.3.1 查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/PATTERN从当前光标所在处向文件尾部查找；</span><br><span class="line">?PATTERN从当前光标所在处向文件首部查找；</span><br><span class="line">  n：与命令同方向</span><br><span class="line">  N：与命令反方向</span><br><span class="line">例：</span><br><span class="line">?\&lt;love\&gt;     从当前光标处向文件首部查找love这个单词</span><br></pre></td></tr></table></figure><h4 id="2-3-2-查找并替换"><a href="#2-3-2-查找并替换" class="headerlink" title="2.3.2 查找并替换"></a>2.3.2 查找并替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s: 在末行模式下完成查找替换操作</span><br><span class="line">s/要查找的内容/替换为的内容/修饰符</span><br><span class="line">要查找的内容：可使用模式</span><br><span class="line">替换为的内容：不能使用模式，但可以使用\1, \2, ...等后向引用符号；还可以使用“&amp;”引用前面查找时查找到的整个内容；</span><br><span class="line">修饰符：</span><br><span class="line">i: 忽略大小写</span><br><span class="line">g: 全局替换；默认情况下，每一行只替换第一次出现；</span><br><span class="line">查找替换中的分隔符/可替换为其它字符,否则就要用到转义符，例如</span><br><span class="line">s@@@</span><br><span class="line">s<span class="comment">###</span></span><br><span class="line">例：</span><br><span class="line">:%s/\/etc\/fstab/\/var\/log/g    或</span><br><span class="line">:%s@/var/log@/etc/fstab@g</span><br></pre></td></tr></table></figure><h3 id="2-4-定制-vim-工作特性"><a href="#2-4-定制-vim-工作特性" class="headerlink" title="2.4 定制 vim 工作特性"></a>2.4 定制 vim 工作特性</h3><p>使用末行模式的配置只是对当前vim进程有效，可将配置存放在文件中永久保存。</p><p>配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/vimrc    全局</span><br><span class="line">~/.vimrc      个人</span><br></pre></td></tr></table></figure><h4 id="2-4-1-行号"><a href="#2-4-1-行号" class="headerlink" title="2.4.1 行号"></a>2.4.1 行号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示：<span class="built_in">set</span> number, 简写为<span class="built_in">set</span> nu</span><br><span class="line">取消显示：<span class="built_in">set</span> nonumber, 简写为<span class="built_in">set</span> nonu</span><br></pre></td></tr></table></figure><h4 id="2-4-2-忽略字符大小写"><a href="#2-4-2-忽略字符大小写" class="headerlink" title="2.4.2 忽略字符大小写"></a>2.4.2 忽略字符大小写</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ic</span><br><span class="line">不忽略：<span class="built_in">set</span> noic</span><br></pre></td></tr></table></figure><h4 id="2-4-3-自动缩进"><a href="#2-4-3-自动缩进" class="headerlink" title="2.4.3 自动缩进"></a>2.4.3 自动缩进</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ai</span><br><span class="line">禁用：<span class="built_in">set</span> noai</span><br></pre></td></tr></table></figure><h4 id="2-4-4-复制保留模式"><a href="#2-4-4-复制保留模式" class="headerlink" title="2.4.4 复制保留模式"></a>2.4.4 复制保留模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> <span class="built_in">paste</span></span><br><span class="line">禁用：<span class="built_in">set</span> nopaste</span><br></pre></td></tr></table></figure><h4 id="2-4-5-显示Tab-l-和换行符-显示"><a href="#2-4-5-显示Tab-l-和换行符-显示" class="headerlink" title="2.4.5 显示Tab ^l 和换行符 $ 显示"></a>2.4.5 显示Tab ^l 和换行符 $ 显示</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> list</span><br><span class="line">禁用：<span class="built_in">set</span> nolist</span><br></pre></td></tr></table></figure><h4 id="2-4-6-高亮搜索"><a href="#2-4-6-高亮搜索" class="headerlink" title="2.4.6 高亮搜索"></a>2.4.6 高亮搜索</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> hlsearch</span><br><span class="line">禁用：<span class="built_in">set</span> nohl</span><br></pre></td></tr></table></figure><h4 id="2-4-7-语法高亮"><a href="#2-4-7-语法高亮" class="headerlink" title="2.4.7 语法高亮"></a>2.4.7 语法高亮</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：syntax on</span><br><span class="line">禁用：syntax off</span><br></pre></td></tr></table></figure><h4 id="2-4-8-文件格式"><a href="#2-4-8-文件格式" class="headerlink" title="2.4.8 文件格式"></a>2.4.8 文件格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启用windows格式：<span class="built_in">set</span> fileformat=dos</span><br><span class="line">启用unix格式：<span class="built_in">set</span> fileformat=unix</span><br><span class="line">简写 <span class="built_in">set</span> ff=dos|unix</span><br></pre></td></tr></table></figure><h4 id="2-4-9-Tab-用空格代替"><a href="#2-4-9-Tab-用空格代替" class="headerlink" title="2.4.9 Tab 用空格代替"></a>2.4.9 Tab 用空格代替</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> expandtab(<span class="built_in">set</span> et) 默认8个空格</span><br><span class="line">禁用：<span class="built_in">set</span> noet</span><br></pre></td></tr></table></figure><h4 id="2-4-10-Tab-用指定空格的个数代替"><a href="#2-4-10-Tab-用指定空格的个数代替" class="headerlink" title="2.4.10 Tab 用指定空格的个数代替"></a>2.4.10 Tab 用指定空格的个数代替</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> ts=<span class="comment">#   #为空格的个数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-11-设置缩进宽度"><a href="#2-4-11-设置缩进宽度" class="headerlink" title="2.4.11 设置缩进宽度"></a>2.4.11 设置缩进宽度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> sw=<span class="comment">##为空格的个数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-12-设置文本宽度"><a href="#2-4-12-设置文本宽度" class="headerlink" title="2.4.12 设置文本宽度"></a>2.4.12 设置文本宽度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> textwidth=65 (vim only) <span class="comment">#从左向右计数</span></span><br><span class="line"><span class="built_in">set</span> wrapmargin=15 <span class="comment">#从右到左计数</span></span><br></pre></td></tr></table></figure><h4 id="2-4-13-设置光标所在行的标识线"><a href="#2-4-13-设置光标所在行的标识线" class="headerlink" title="2.4.13 设置光标所在行的标识线"></a>2.4.13 设置光标所在行的标识线</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> cul</span><br><span class="line">禁用：<span class="built_in">set</span> nocul</span><br></pre></td></tr></table></figure><h4 id="2-4-14-加密"><a href="#2-4-14-加密" class="headerlink" title="2.4.14 加密"></a>2.4.14 加密</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：<span class="built_in">set</span> key=PASSWORD</span><br><span class="line">禁用：<span class="built_in">set</span> key=</span><br></pre></td></tr></table></figure><h4 id="2-4-15-了解更多"><a href="#2-4-15-了解更多" class="headerlink" title="2.4.15 了解更多"></a>2.4.15 了解更多</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> </span><br><span class="line"><span class="built_in">set</span> all</span><br></pre></td></tr></table></figure><h2 id="三、命令模式"><a href="#三、命令模式" class="headerlink" title="三、命令模式"></a>三、命令模式</h2><h3 id="3-1-退出vim"><a href="#3-1-退出vim" class="headerlink" title="3.1 退出vim"></a>3.1 退出vim</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ZZ保存退出</span><br><span class="line">ZQ不保存退出</span><br></pre></td></tr></table></figure><h3 id="3-2-光标跳转"><a href="#3-2-光标跳转" class="headerlink" title="3.2 光标跳转"></a>3.2 光标跳转</h3><h4 id="3-2-1-字符间跳转"><a href="#3-2-1-字符间跳转" class="headerlink" title="3.2.1 字符间跳转"></a>3.2.1 字符间跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h左</span><br><span class="line">l右</span><br><span class="line">j下</span><br><span class="line">k上</span><br><span class="line"><span class="comment">#COMMAND跳转到由#指定的个数的字符</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2-单词间跳转"><a href="#3-2-2-单词间跳转" class="headerlink" title="3.2.2 单词间跳转"></a>3.2.2 单词间跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">w下一个单词的词首</span><br><span class="line">e当前或下一个单词的词尾</span><br><span class="line">b当前或前一个单词的词首</span><br><span class="line"><span class="comment">#COMMAND由#指定一次跳转的单词数</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3-当前页跳转"><a href="#3-2-3-当前页跳转" class="headerlink" title="3.2.3 当前页跳转"></a>3.2.3 当前页跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">H页首</span><br><span class="line">M页中间行</span><br><span class="line">L页底</span><br><span class="line">zt将光标所在当前行移到屏幕顶端</span><br><span class="line">zz将光标所在当前行移到屏幕中间</span><br><span class="line">zb将光标所在当前行移到屏幕底端</span><br></pre></td></tr></table></figure><h4 id="3-2-4-行首行尾跳转"><a href="#3-2-4-行首行尾跳转" class="headerlink" title="3.2.4 行首行尾跳转"></a>3.2.4 行首行尾跳转</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">^跳转至行首的第一个非空白字符</span><br><span class="line">0跳转至行首</span><br><span class="line">$跳转至行尾</span><br></pre></td></tr></table></figure><h4 id="3-2-5-行间移动"><a href="#3-2-5-行间移动" class="headerlink" title="3.2.5 行间移动"></a>3.2.5 行间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">G最后一行</span><br><span class="line">gg第一行</span><br></pre></td></tr></table></figure><h4 id="3-2-6-句间移动"><a href="#3-2-6-句间移动" class="headerlink" title="3.2.6 句间移动"></a>3.2.6 句间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">）下一句</span><br><span class="line">（上一句</span><br></pre></td></tr></table></figure><h4 id="3-2-7-段落间移动"><a href="#3-2-7-段落间移动" class="headerlink" title="3.2.7 段落间移动"></a>3.2.7 段落间移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#125;下一段</span><br><span class="line">&#123;上一段</span><br></pre></td></tr></table></figure><h4 id="3-2-8-命令模式翻屏操作"><a href="#3-2-8-命令模式翻屏操作" class="headerlink" title="3.2.8 命令模式翻屏操作"></a>3.2.8 命令模式翻屏操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+f 向文件尾部翻一屏,相当于Pagedown</span><br><span class="line">Ctrl+b 向文件首部翻一屏,相当于Pageup</span><br><span class="line">Ctrl+d 向文件尾部翻半屏</span><br><span class="line">Ctrl+u 向文件首部翻半屏</span><br></pre></td></tr></table></figure><h3 id="3-3-字符编辑"><a href="#3-3-字符编辑" class="headerlink" title="3.3 字符编辑"></a>3.3 字符编辑</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x      剪切光标处的字符</span><br><span class="line"><span class="comment">#x剪切光标处起始的#个字符</span></span><br><span class="line">xp交换光标所在处的字符及其后面字符的位置</span><br><span class="line">~转换大小写</span><br><span class="line">J删除当前行后的换行符</span><br></pre></td></tr></table></figure><h3 id="3-4-替换命令"><a href="#3-4-替换命令" class="headerlink" title="3.4 替换命令"></a>3.4 替换命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r只替换光标所在处的一个字符</span><br><span class="line">R切换成REPLACE模式（末行有 -- REPLACE -- 提示），按Esc键回到命令模式</span><br></pre></td></tr></table></figure><h3 id="3-5-删除命令（实际为剪切）"><a href="#3-5-删除命令（实际为剪切）" class="headerlink" title="3.5 删除命令（实际为剪切）"></a>3.5 删除命令（实际为剪切）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">d删除，可通过光标跳转字符，实现范围删除</span><br><span class="line">d$删除到行尾</span><br><span class="line">d^删除到非空行首</span><br><span class="line">d0删除到行首</span><br><span class="line">dw</span><br><span class="line">de</span><br><span class="line">db</span><br><span class="line"><span class="built_in">dd</span>删除光标所在的行</span><br><span class="line"><span class="comment">#dd多行删除</span></span><br><span class="line">D从当前光标位置一直删除到行尾，等同于d$</span><br></pre></td></tr></table></figure><h3 id="3-6-复制命令"><a href="#3-6-复制命令" class="headerlink" title="3.6 复制命令"></a>3.6 复制命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">y 复制，行为相似于d命令</span><br><span class="line">y$</span><br><span class="line">y0</span><br><span class="line">y^</span><br><span class="line">ye</span><br><span class="line">yw</span><br><span class="line">yb</span><br><span class="line"><span class="comment">#COMMAND</span></span><br><span class="line">yy：复制行</span><br><span class="line"><span class="comment">#yy 复制多行</span></span><br><span class="line"></span><br><span class="line">------ 类似于d命令 ------</span><br></pre></td></tr></table></figure><h3 id="3-7-粘贴命令"><a href="#3-7-粘贴命令" class="headerlink" title="3.7 粘贴命令"></a>3.7 粘贴命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p 缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面</span><br><span class="line">P 缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面</span><br></pre></td></tr></table></figure><h3 id="3-8-改变命令"><a href="#3-8-改变命令" class="headerlink" title="3.8 改变命令"></a>3.8 改变命令</h3><p>使用 c 命令后会进入到插入模式，用法类似于 d 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c$</span><br><span class="line">c^</span><br><span class="line">c0</span><br><span class="line">cb</span><br><span class="line">ce</span><br><span class="line">cw</span><br><span class="line"><span class="comment">#COMMAND</span></span><br><span class="line">cc <span class="comment">#删除当前行并输入新内容，相当于S</span></span><br><span class="line"><span class="comment">#cc</span></span><br><span class="line">C <span class="comment">#删除当前光标到行尾，并切换成插入模式,相当于c$</span></span><br></pre></td></tr></table></figure><h3 id="3-9-撤销更改"><a href="#3-9-撤销更改" class="headerlink" title="3.9 撤销更改"></a>3.9 撤销更改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u 撤销最近的更改，相当于windows中ctrl+z</span><br><span class="line"><span class="comment">#u 撤销之前多次更改</span></span><br><span class="line">U 撤消光标落在这行后所有此行的更改</span><br><span class="line">Ctrl-r 重做最后的“撤消”更改，相当于windows中crtl+y</span><br><span class="line">. 重复前一个操作</span><br><span class="line"><span class="comment">#. 重复前一个操作#次</span></span><br></pre></td></tr></table></figure><h2 id="四、可视化模式"><a href="#四、可视化模式" class="headerlink" title="四、可视化模式"></a>四、可视化模式</h2><p>进入到可视化模式，末行有“– – VISUAL – –”指示</p><p>可视化模式的类型</p><ul><li>v 面向字符  – VISUAL –</li><li>V 面向整行  – VISUAL LINE –</li><li>ctrl+v  面向块  – VISUAL BLOCK –</li></ul><p>进入到可视化模式，被选中的文字可被删除，复制，变更，过滤，搜索，替换等</p><p>范例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、在文件指定行的行首插入<span class="comment">#</span></span><br><span class="line">- 先将光标移动到指定的第一行的行首</span><br><span class="line">- 输入ctrl+v 进入到可视化模式</span><br><span class="line">- 向下移动光标，选中希望操作的每一行的第一个字符</span><br><span class="line">- 输入大写字母 I 切换至插入模式</span><br><span class="line">- 输入 <span class="comment">#</span></span><br><span class="line">- 按 Esc 键</span><br></pre></td></tr></table></figure><h2 id="五、多文件模式"><a href="#五、多文件模式" class="headerlink" title="五、多文件模式"></a>五、多文件模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim FILE1 FILE2 FILE3 ...</span><br><span class="line">:next 下一个</span><br><span class="line">:prev 前一个</span><br><span class="line">:first 第一个</span><br><span class="line">:last 最后一个</span><br><span class="line">:wall 保存所有</span><br><span class="line">:qall 不保存退出所有</span><br><span class="line">:wqall保存退出所有</span><br></pre></td></tr></table></figure><h2 id="六、多窗口模式"><a href="#六、多窗口模式" class="headerlink" title="六、多窗口模式"></a>六、多窗口模式</h2><p><strong>多文件模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim FILE1 FILE2 FILE3 ...</span><br><span class="line">:next 下一个</span><br><span class="line">:prev 前一个</span><br><span class="line">:first 第一个</span><br><span class="line">:last 最后一个</span><br><span class="line">:wall 保存所有</span><br><span class="line">:qall 退出所有</span><br></pre></td></tr></table></figure><p><strong>窗口分割模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim -o|-O FILE1 FILE2 ...</span><br><span class="line">-o: 水平分割</span><br><span class="line">-O: 垂直分割</span><br><span class="line">在窗口间切换：Ctrl+w, Arrow</span><br><span class="line">单文件窗口分割：</span><br><span class="line"> Ctrl+w,s: <span class="built_in">split</span>, 水平分割</span><br><span class="line"> Ctrl+w,v: vertical, 垂直分割</span><br><span class="line"> ctrl+w,q：取消相邻窗口</span><br><span class="line">ctrl+w,o：取消全部窗口</span><br><span class="line">:wqall 退出</span><br></pre></td></tr></table></figure><hr><h1 id="文本常见处理工具"><a href="#文本常见处理工具" class="headerlink" title="文本常见处理工具"></a>文本常见处理工具</h1><h2 id="一、查看文件内容"><a href="#一、查看文件内容" class="headerlink" title="一、查看文件内容"></a>一、查看文件内容</h2><h3 id="1-1-查看文本文件内容"><a href="#1-1-查看文本文件内容" class="headerlink" title="1.1 查看文本文件内容"></a>1.1 查看文本文件内容</h3><h4 id="1-1-1-cat"><a href="#1-1-1-cat" class="headerlink" title="1.1.1 cat"></a>1.1.1 cat</h4><p>NAME<br>       cat - concatenate files and print on the standard output</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[option]</span><br><span class="line">  -E：显示行结束符$</span><br><span class="line">  -A：显示所有控制符</span><br><span class="line">  -n：对显示出的每一行进行编号</span><br><span class="line">  -b：只对非空行进行编号</span><br><span class="line">  -s：压缩连续的空行成一行</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">------------ 支持标准输入 -----------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat &gt; file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat &gt;&gt; file4 &lt;&lt; EOF    // 多行重定向</span></span><br><span class="line">&gt; line5</span><br><span class="line">&gt; EOF</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file4</span></span><br><span class="line">aaa</span><br><span class="line">ss</span><br><span class="line"><span class="built_in">dd</span></span><br><span class="line">gg</span><br><span class="line">line5</span><br></pre></td></tr></table></figure><h4 id="1-1-2-nl（相当于-cat-b）"><a href="#1-1-2-nl（相当于-cat-b）" class="headerlink" title="1.1.2 nl（相当于 cat -b）"></a>1.1.2 nl（相当于 cat -b）</h4><p>NAME<br>       nl - number lines of files</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat -n file2</span></span><br><span class="line">     1  1</span><br><span class="line">     2  2</span><br><span class="line">     3  3</span><br><span class="line">     4</span><br><span class="line">     5  5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># nl file2# nl 只对非空行进行编号</span></span><br><span class="line">     1  1</span><br><span class="line">     2  2</span><br><span class="line">     3  3</span><br><span class="line">       </span><br><span class="line">     4  5</span><br></pre></td></tr></table></figure><h4 id="1-1-3-tac"><a href="#1-1-3-tac" class="headerlink" title="1.1.3 tac"></a>1.1.3 tac</h4><p>NAME<br>       tac - concatenate and print files in reverse</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># tac file1</span></span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="1-1-4-rev"><a href="#1-1-4-rev" class="headerlink" title="1.1.4 rev"></a>1.1.4 rev</h4><p>NAME<br>       rev - reverse lines characterwise</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file</span></span><br><span class="line">01234</span><br><span class="line">56789</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tac file</span></span><br><span class="line">56789</span><br><span class="line">01234</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># rev file</span></span><br><span class="line">43210</span><br><span class="line">98765</span><br></pre></td></tr></table></figure><h3 id="1-2-查看非文本文件内容"><a href="#1-2-查看非文本文件内容" class="headerlink" title="1.2 查看非文本文件内容"></a>1.2 查看非文本文件内容</h3><h4 id="1-2-1-hexdump"><a href="#1-2-1-hexdump" class="headerlink" title="1.2.1 hexdump"></a>1.2.1 hexdump</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       hexdump - display file contents <span class="keyword">in</span> hexadecimal, decimal, octal, or ascii</span><br><span class="line">SYNOPSIS</span><br><span class="line">       hexdump [options] file...</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hexdump -C -n 5 /dev/sda  </span></span><br><span class="line">00000000  eb 63 90 10 8e                                    |.c...|</span><br><span class="line">00000005</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | hexdump -C</span></span><br><span class="line">00000000  61 20 62 20 63 20 64 20  65 20 66 0a              |a b c d e f.|</span><br><span class="line">0000000c</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; |tr -d &#x27; &#x27; | hexdump -C</span></span><br><span class="line">00000000  61 62 63 64 65 66 0a                              |abcdef.|</span><br><span class="line">00000007</span><br></pre></td></tr></table></figure><h4 id="1-2-2-od"><a href="#1-2-2-od" class="headerlink" title="1.2.2 od"></a>1.2.2 od</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       <span class="built_in">od</span> - dump files <span class="keyword">in</span> octal and other formats</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..z&#125; | tr -d &#x27; &#x27;|od -t x</span></span><br><span class="line">0000000 64636261 68676665 6c6b6a69 706f6e6d</span><br><span class="line">0000020 74737271 78777675 000a7a79</span><br><span class="line">0000033</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..z&#125; | tr -d &#x27; &#x27;|od -t x1</span></span><br><span class="line">0000000 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70</span><br><span class="line">0000020 71 72 73 74 75 76 77 78 79 7a 0a</span><br><span class="line">0000033</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | tr -d &#x27; &#x27; |od -t x1z </span></span><br><span class="line">0000000 61 62 63 64 65 66 0a                             &gt;abcdef.&lt;</span><br><span class="line">0000007</span><br></pre></td></tr></table></figure><h4 id="1-2-3-xxd"><a href="#1-2-3-xxd" class="headerlink" title="1.2.3 xxd"></a>1.2.3 xxd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NAME</span><br><span class="line">       xxd - make a hexdump or <span class="keyword">do</span> the reverse.</span><br><span class="line">-------------------------------------------------------------------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#123;a..f&#125; | tr -d &#x27; &#x27; | xxd</span></span><br><span class="line">00000000: 6162 6364 6566 0a                        abcdef.</span><br></pre></td></tr></table></figure><h2 id="二、分页查看文件内容"><a href="#二、分页查看文件内容" class="headerlink" title="二、分页查看文件内容"></a>二、分页查看文件内容</h2><ul><li>more</li><li>less</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">more 和 less 都可实现文件的翻页</span><br><span class="line">使用 more 查看文件到末尾时会自动退出，而 less 不会</span><br><span class="line">less 查看文件时，支持使用模式匹配/文本 搜索文本  n/N 跳到下一个 或 上一个匹配</span><br></pre></td></tr></table></figure><h2 id="三、显示文本前或后行内容"><a href="#三、显示文本前或后行内容" class="headerlink" title="三、显示文本前或后行内容"></a>三、显示文本前或后行内容</h2><h3 id="3-1-head"><a href="#3-1-head" class="headerlink" title="3.1 head"></a>3.1 head</h3><p>选项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c <span class="comment">#指定获取前#字节</span></span><br><span class="line">-n <span class="comment">#指定获取前#行，#如果为负数，表示从文件头取到倒数第#行，不包括倒数第#行</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># head -n -3 file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="3-2-tail"><a href="#3-2-tail" class="headerlink" title="3.2 tail"></a>3.2 tail</h3><p>选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-c <span class="comment">#指定获取后#个字节</span></span><br><span class="line">-n <span class="comment">#指定获取后#行，如果#前有加号，表示从第#行开始到文件结束</span></span><br><span class="line">-f跟踪显示文件中的内容，当文件删除在新建一个同名文件时，无法继续跟踪</span><br><span class="line">-F也可跟踪显示文件中的内容，当文件删除又新建一个同名文件时可继续追踪</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># tail -n +4 file1</span></span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="四、按列抽取文本-cut"><a href="#四、按列抽取文本-cut" class="headerlink" title="四、按列抽取文本 cut"></a>四、按列抽取文本 cut</h2><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-dDELIMITER：指明分隔符，默认为 Tab</span><br><span class="line">-fFILEDS:</span><br><span class="line">  <span class="comment">#: 第#个字段</span></span><br><span class="line">    <span class="comment">#,#: 指定多个不连续的字段，如 1，3，5</span></span><br><span class="line">    <span class="comment">#-#: 连续的多个字段</span></span><br><span class="line">    混合使用:<span class="number">1</span>-<span class="number">3</span>,<span class="number">7</span></span><br><span class="line">-c按字符切割</span><br><span class="line">--output-delimiter=STRING指定输出分隔符</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | tail -n $(echo `df | wc -l`-1|bc)</span></span><br><span class="line">devtmpfs               897476       0    897476   0% /dev</span><br><span class="line">tmpfs                  916616       0    916616   0% /dev/shm</span><br><span class="line">tmpfs                  916616    8884    907732   1% /run</span><br><span class="line">tmpfs                  916616       0    916616   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root  31441920 1849564  29592356   6% /</span><br><span class="line">/dev/mapper/rl-data  17410832   45084  16458280   1% /data</span><br><span class="line">/dev/sda1             1038336  216624    821712  21% /boot</span><br><span class="line">tmpfs                  183320       0    183320   0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="五、合并多个文件-paste"><a href="#五、合并多个文件-paste" class="headerlink" title="五、合并多个文件 paste"></a>五、合并多个文件 paste</h2><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-d DELIMITER: 指定分隔符，默认为 Tab</span><br><span class="line">-s所有行合成一行显示</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f1 </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat f2</span></span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># paste -d &#x27; &#x27; f1 f2</span></span><br><span class="line">2 b</span><br><span class="line">3 c</span><br><span class="line">4 d</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># paste -s  -d &#x27; &#x27; f1 f2</span></span><br><span class="line">2 3 4</span><br><span class="line">b c d</span><br></pre></td></tr></table></figure><h2 id="六、分析文本的工具"><a href="#六、分析文本的工具" class="headerlink" title="六、分析文本的工具"></a>六、分析文本的工具</h2><h3 id="6-1-文本统计数据-wc"><a href="#6-1-文本统计数据-wc" class="headerlink" title="6.1 文本统计数据 wc"></a>6.1 文本统计数据 wc</h3><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-l只计数行数</span><br><span class="line">-w只计数单词总数</span><br><span class="line">-c统计字节总数</span><br><span class="line">-L显示文件中最长行的长度</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># wc /etc/passwd</span></span><br><span class="line">  27   46    1262 /etc/passwd</span><br><span class="line"> 行数单词数  字节数</span><br></pre></td></tr></table></figure><h3 id="6-2-文本排序-sort"><a href="#6-2-文本排序-sort" class="headerlink" title="6.2 文本排序 sort"></a>6.2 文本排序 sort</h3><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-r，--reversereverse the result of comparisons</span><br><span class="line">-R随机排序</span><br><span class="line">-n按照数字大小整理</span><br><span class="line">-h易读性排序，如 2M 1K</span><br><span class="line">-f忽略字符大小写</span><br><span class="line">-u去重</span><br><span class="line">-t指定字段分隔符</span><br><span class="line">-k<span class="comment">#对指定分隔符后的#列进行排序</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">============== 统计分区的利用率 ==============</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># df |tail -n $(echo `df | wc -l` -1 | bc) | tr -s &#x27; &#x27;| cut -d&#x27; &#x27; -f1,5 | sort -n -t&#x27; &#x27; -k2 -r</span></span><br><span class="line">/dev/sda1 <span class="number">21</span>%</span><br><span class="line">/dev/mapper/rl-root <span class="number">7</span>%</span><br><span class="line">tmpfs <span class="number">1</span>%</span><br><span class="line">/dev/mapper/rl-data <span class="number">1</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">tmpfs <span class="number">0</span>%</span><br><span class="line">devtmpfs <span class="number">0</span>%</span><br><span class="line"></span><br><span class="line">============== 有两个文件，a.txt和b.txt，合并两个文件，并输出时确保每个数字唯一 =============</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort -u</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h3 id="6-3-文本去重-uniq"><a href="#6-3-文本去重-uniq" class="headerlink" title="6.3 文本去重 uniq"></a>6.3 文本去重 uniq</h3><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-c显示每行重复出现的次数</span><br><span class="line">-d仅显示重复过的行</span><br><span class="line">-u仅显示没有重复的行</span><br><span class="line"><span class="comment">#      注：重复为连续且相同   #</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file3</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># uniq -d file3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># uniq -u file3</span></span><br><span class="line"><span class="number">22</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">43</span></span><br><span class="line"><span class="number">23</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><p><strong>常与 sort 命令一起使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-- 并发连接最多的远程主机 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &quot;ESTAB&quot; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr</span></span><br><span class="line">      4 192.168.119.1</span><br><span class="line">      2 192.168.119.158</span><br><span class="line">      1 192.168.119.147</span><br><span class="line"></span><br><span class="line">-- 取两个文件的相同和不同的行 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt </span></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat b.txt </span></span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅显示两个文件中相同的内容</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort | uniq -d</span></span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示两个文件中没有重复的</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat a.txt b.txt | sort | uniq -u</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="6-4-比较文件"><a href="#6-4-比较文件" class="headerlink" title="6.4 比较文件"></a>6.4 比较文件</h3><h4 id="6-4-1-diff"><a href="#6-4-1-diff" class="headerlink" title="6.4.1 diff"></a>6.4.1 diff</h4><p><code>-u 选项，使用 unified 格式显示</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1</span></span><br><span class="line">root</span><br><span class="line">nginx</span><br><span class="line">wh</span><br><span class="line">wuhao</span><br><span class="line">harry</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file2</span></span><br><span class="line">mage</span><br><span class="line">root</span><br><span class="line">wuhao</span><br><span class="line">apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># diff  -u file1 file2</span></span><br><span class="line">--- file1       2022-03-22 08:35:52.270539575 -0400</span><br><span class="line">+++ file2       2022-03-22 08:38:20.195502598 -0400</span><br><span class="line">@@ -1,5 +1,4 @@</span><br><span class="line">+mage</span><br><span class="line"> root</span><br><span class="line">-nginx</span><br><span class="line">-wh</span><br><span class="line"> wuhao</span><br><span class="line">-harry</span><br><span class="line">+apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># diff  -u file1 file2 &gt; f.patch</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># rm -f file2           // 删除file2文件</span></span><br><span class="line">-- 先将 file1 文件备份成file1.org，然后根据f.patch文件和file1文件恢复原来的file2文件，但此时名称命名为file1 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># patch -b file1 f.patch </span></span><br><span class="line">patching file file1</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1      // 恢复的file2文件</span></span><br><span class="line">mage</span><br><span class="line">root</span><br><span class="line">wuhao</span><br><span class="line">apache</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat file1.orig </span></span><br><span class="line">root</span><br><span class="line">nginx</span><br><span class="line">wh</span><br><span class="line">wuhao</span><br><span class="line">harry</span><br></pre></td></tr></table></figure><h4 id="6-4-2-patch"><a href="#6-4-2-patch" class="headerlink" title="6.4.2 patch"></a>6.4.2 patch</h4><p>略</p><h4 id="6-4-3-vimdiff"><a href="#6-4-3-vimdiff" class="headerlink" title="6.4.3 vimdiff"></a>6.4.3 vimdiff</h4><p>略</p><h4 id="6-4-4-cmp"><a href="#6-4-4-cmp" class="headerlink" title="6.4.4 cmp"></a>6.4.4 cmp</h4><p>略</p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1、找出ifconfig “网卡名” 命令结果中本机的IPv4地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig ens33 | tr -s &#x27; &#x27; | cut -d&#x27; &#x27; -f3 | sort -nr | head -1</span></span><br><span class="line">192.168.119.128</span><br></pre></td></tr></table></figure><p>2、查出分区空间使用率的最大百分比值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df |tail -n $(echo `df | wc -l` -1 | bc) | tr -s &#x27; &#x27;| cut -d&#x27; &#x27; -f5 | sort -nr | head -n1</span></span><br><span class="line">21%</span><br></pre></td></tr></table></figure><p>3、查出用户UID最大值的用户名、UID及shell类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-mini3 ~]<span class="comment"># sort -t: -k3 -n /etc/passwd | tail -1 | cut -d: -f 1,3,7</span></span><br><span class="line">wh:1000:/bin/bash</span><br></pre></td></tr></table></figure><p>4、查出/tmp的权限，以数字方式显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-mini3 ~]<span class="comment"># stat /tmp | tr -s &#x27;/(&#x27; &#x27; &#x27; | cut -d &#x27; &#x27; -f 2 | sed  -n &#x27;4p&#x27;</span></span><br><span class="line">1777</span><br></pre></td></tr></table></figure><p>5、统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ss -nt | grep &quot;ESTAB&quot; | tr -s &#x27; &#x27; : | cut -d: -f6 | sort | uniq -c | sort -nr</span></span><br><span class="line">      4 192.168.119.1</span><br><span class="line">      2 192.168.119.158</span><br><span class="line">      1 192.168.119.147</span><br></pre></td></tr></table></figure><hr><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><p>通配符通常用来匹配文件名，而正则表达式是用来匹配文本中的字符串。</p><p>正则表达式分类：</p><ul><li>基本正则表达式</li><li>扩展正则表达式</li></ul><p>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组</p><p><em>注：grep命令的使用见文本处理三剑客文章</em></p><h2 id="一、基本正则表达式元字符"><a href="#一、基本正则表达式元字符" class="headerlink" title="一、基本正则表达式元字符"></a>一、基本正则表达式元字符</h2><h3 id="1-1-字符匹配"><a href="#1-1-字符匹配" class="headerlink" title="1.1 字符匹配"></a>1.1 字符匹配</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.匹配任意单个字符，可以使一个汉字</span><br><span class="line">[]匹配指定范围内的任意单个字符</span><br><span class="line">[^]匹配指定范围外的任意单个字符</span><br><span class="line">[:alnum:]字母和数字</span><br><span class="line">[:alpha:]任意大小写字母</span><br><span class="line">[:lower:]任意小写字母</span><br><span class="line">[:upper:]任意大写字母</span><br><span class="line">[:blank:]空白字符（空格和制表符）</span><br><span class="line">[:space:]包括空格、制表符、换行符、回车符等各种类型的空白</span><br><span class="line">[:cntrl:]不能打印的控制字符（退格、删除、警铃···）</span><br><span class="line">[:digit:]十进制数字</span><br><span class="line">[:xdigit:]十六进制数字</span><br><span class="line">[:graph:]可打印的非空白字符</span><br><span class="line">[:<span class="built_in">print</span>:]可打印字符</span><br><span class="line">[:punct:]标点符号</span><br><span class="line"></span><br><span class="line">\w <span class="comment">#匹配单词构成部分，等价于[_[:alnum:]]</span></span><br><span class="line">\W <span class="comment">#匹配非单词构成部分，等价于[^_[:alnum:]]</span></span><br><span class="line">\S <span class="comment">#匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</span></span><br><span class="line">\s <span class="comment">#匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意</span></span><br><span class="line">Unicode 正则表达式会匹配全角空格符</span><br></pre></td></tr></table></figure><h3 id="1-2-匹配次数"><a href="#1-2-匹配次数" class="headerlink" title="1.2 匹配次数"></a>1.2 匹配次数</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*匹配前面的字符任意次，贪婪模式：尽可能长的匹配</span><br><span class="line">.*任意长度的任意字符</span><br><span class="line">\?匹配其前面的字符出现<span class="number">0</span>次或<span class="number">1</span>次</span><br><span class="line">\+匹配其前面的字符至少出现<span class="number">1</span>次</span><br><span class="line">\&#123;n\&#125;匹配前面的字符n次</span><br><span class="line">\&#123;m,n\&#125;匹配前面的字符至少m次，最多n次</span><br><span class="line">\&#123;,n\&#125;匹配前面的字符最多n次</span><br><span class="line">\&#123;m,\&#125;匹配前面的字符至少m次</span><br></pre></td></tr></table></figure><h3 id="1-3-位置锚定"><a href="#1-3-位置锚定" class="headerlink" title="1.3 位置锚定"></a>1.3 位置锚定</h3><p>位置锚定可以定位出现的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">^               行首锚定，用于模式的最左侧</span><br><span class="line">$              行尾锚定，用于模式的最右侧</span><br><span class="line">^PATTERN$       模式匹配整行</span><br><span class="line">^$            匹配空行</span><br><span class="line">^[[:space:]]    空白行</span><br><span class="line">\&lt;              词首锚定</span><br><span class="line">\&gt;              词尾锚定</span><br><span class="line">\&lt;PATTERN\&gt;     匹配整个单词</span><br><span class="line"></span><br><span class="line">注：单词是由字母、数字、下划线组成，其他均为单词的分隔符</span><br><span class="line">如：http_122、788hhh 为单词；http-<span class="number">122</span>、<span class="number">788</span>:hhh 为两个单词</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">----------- 排除掉空行和<span class="string">&quot;#&quot;</span>开头的行 -----------</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep -v &#x27;^$&#x27; /etc/profile|grep -v &#x27;^#&#x27;</span></span><br><span class="line">[root@centos8 ~]<span class="comment">#grep &#x27;^[^$#]&#x27; /etc/profile</span></span><br></pre></td></tr></table></figure><h3 id="1-4-分组、或者"><a href="#1-4-分组、或者" class="headerlink" title="1.4 分组、或者"></a>1.4 分组、或者</h3><p><strong>分组：</strong>（）将多个字符捆绑在一起，当作一个整体处理，如：\(root\)</p><p><strong>后向引用：</strong>分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为：\1,\2,\3,…（\1 表示从左侧第一个左括号与之匹配的右括号之间的模式匹配到的内容）</p><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\(ab\+\(xy\)*\)：</span><br><span class="line">\1: ab\+\(xy\)*</span><br><span class="line">\2：xy</span><br><span class="line">后向引用：引用前面的分组括号中的模式所匹配到的字符（也就是匹配到的结果），而非模式本身。</span><br></pre></td></tr></table></figure><p><strong>或者：\|</strong></p><p>Example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a\|ba或b</span><br><span class="line">c\|<span class="built_in">cat</span>c或<span class="built_in">cat</span></span><br><span class="line">\(C\|c\)atCat或<span class="built_in">cat</span></span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-------------------- 排除空行和<span class="string">&#x27;#&#x27;</span>开头的行 ----------------------</span><br><span class="line">grep -v <span class="string">&#x27;^#&#x27;</span> /PATH/TO/FILE |grep -v ^$</span><br><span class="line">grep -v <span class="string">&#x27;^#\|^$&#x27;</span> /PATH/TO/FILE</span><br><span class="line">grep -v <span class="string">&#x27;^\(#\|$\)&#x27;</span> /PATH/TO/FILE</span><br><span class="line">grep <span class="string">&quot;^[^#]&quot;</span> /PATH/TO/FILE</span><br></pre></td></tr></table></figure><h3 id="正则表达式练习"><a href="#正则表达式练习" class="headerlink" title="正则表达式练习"></a>正则表达式练习</h3><p><strong>1、显示/proc/meminfo文件中以大小s开头的行(要求：使用两种方法)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep &quot;^[Ss]&quot; /proc/meminfo</span></span><br><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep -i &quot;^s&quot; meminfo /proc/meminfo</span></span><br></pre></td></tr></table></figure><p><strong>2、显示/etc/passwd文件中不以/bin/bash结尾的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini tmp]<span class="comment"># grep -v  &quot;/bin/bash$&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>3、显示用户rpc默认的shell程序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;^\&lt;rpc\&gt;&quot; /etc/passwd | cut -d: -f7</span></span><br></pre></td></tr></table></figure><p><strong>4、找出/etc/passwd中的两位或三位数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;\&lt;[0-9]\&#123;2,3\&#125;\&gt;&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>5、显示CentOS7的/etc/grub2.cfg文件中，至少以一个空白字符开头的且后面有非空白字符的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep &quot;^[[:space:]]\+[[:alnum:]].*&quot; /etc/grub2.cfg</span></span><br></pre></td></tr></table></figure><p><strong>6、找出“netstat -tan”命令结果中以LISTEN后跟任意多个空白字符结尾的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># netstat -tan | grep &quot;\(LISTEN[[:space:]]*\)$&quot;</span></span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN</span><br></pre></td></tr></table></figure><p><strong>7、显示CentOS8上所有UID小于1000以内的用户名和UID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/passwd | cut -d: -f1,3 | grep &quot;\&lt;[0-9]\&#123;1,3\&#125;\&gt;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>8、添加用户bash、testbash、basher、sh、nologin(其shell为/sbin/nologin),找出/etc/passwd用户名和shell同名的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># grep &quot;^\(\&lt;[[:alnum:]]\+\&gt;\).*\1$&quot; /etc/passwd</span></span><br></pre></td></tr></table></figure><p><strong>9、利用df和grep，取出磁盘各分区利用率，并从大到小排序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># df | grep &quot;^/dev&quot; | tr -s &#x27; &#x27; % | cut -d% -f1,5 --output-delimiter=&#x27;   &#x27; | sort -nr</span></span><br><span class="line">/dev/sda1   21</span><br><span class="line">/dev/mapper/rl-root   7</span><br><span class="line">/dev/mapper/rl-data   1</span><br></pre></td></tr></table></figure><h2 id="二、扩展正则表达式元字符"><a href="#二、扩展正则表达式元字符" class="headerlink" title="二、扩展正则表达式元字符"></a>二、扩展正则表达式元字符</h2><p>扩展正则表达式元字符同基本正则表达式元字符，只是不需要加转义字符，词首锚定和词尾锚定仍然需要。</p><h3 id="扩展正则表达式练习"><a href="#扩展正则表达式练习" class="headerlink" title="扩展正则表达式练习"></a>扩展正则表达式练习</h3><p><strong>1、显示三个用户root、mage、wang的UID和默认shell</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep -E &quot;^(\&lt;root\&gt;|\&lt;mage\&gt;|\&lt;wang\&gt;)&quot; /etc/passwd | cut -d: -f3,7</span></span><br><span class="line">0:/bin/bash</span><br><span class="line">1000:/bin/bash</span><br><span class="line">1001:/bin/bash</span><br></pre></td></tr></table></figure><p><strong>2、找出/etc/rc.d/init.d/functions文件中行首为某单词(包括下划线)后面跟一个小括号的行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># grep -E &quot;^[_[:alnum:]]+\(\)&quot; /etc/rc.d/init.d/functions </span></span><br></pre></td></tr></table></figure><p><strong>3、使用egrep取出/etc/rc.d/init.d/functions中其基名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># basename /etc/rc.d/init.d/functions</span></span><br><span class="line"><span class="built_in">functions</span></span><br><span class="line">[root@centos7 ~]<span class="comment">#echo &quot;/etc/rc.d/init.d/functions/&quot; | grep -E -o &quot;[^/]+/?$&quot; | cut -d/ -f1</span></span><br><span class="line"><span class="built_in">functions</span></span><br></pre></td></tr></table></figure><p><strong>4、使用egrep取出上面路径的目录名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># dirname /etc/rc.d/init.d/functions</span></span><br><span class="line">/etc/rc.d/init.d</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5、统计last命令中以root登录的每个主机IP地址登录次数</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># last | grep -E &quot;\&lt;root\&gt;&quot; | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot; | sort | uniq -c</span></span><br></pre></td></tr></table></figure><p><strong>6、利用扩展正则表达式分别表示0-9、10-99、100-199、200-249、250-255</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;\&lt;[0-9]\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;[0-9]&#123;2&#125;\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;1[0-9]&#123;2&#125;\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;2[0-4][0-9]\&gt;&quot;</span> num.txt</span><br><span class="line">grep -E <span class="string">&quot;\&lt;25[0-5]\&gt;&quot;</span> num.txt</span><br></pre></td></tr></table></figure><p><strong>7、显示ifconfig命令结果中所有IPv4地址</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ifconfig | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>8、将此字符串：welcome to wuhao linux 中的每个字符去重并排序，重复次数多的排到前面</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo ‘welcome to wuhao linux’ | grep -o &quot;[[:alpha:]]&quot; | sort | uniq -c | sort -nr</span></span><br><span class="line">      3 o</span><br><span class="line">      2 w</span><br><span class="line">      2 u</span><br><span class="line">      2 l</span><br><span class="line">      2 e</span><br><span class="line">      1 x</span><br><span class="line">      1 t</span><br><span class="line">      1 n</span><br><span class="line">      1 m</span><br><span class="line">      1 i</span><br><span class="line">      1 h</span><br><span class="line">      1 c</span><br><span class="line">      1 a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础入门和帮助</title>
      <link href="/archives/c31ae19.html"/>
      <url>/archives/c31ae19.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、冯·洛依曼计算机体系结构"><a href="#一、冯·洛依曼计算机体系结构" class="headerlink" title="一、冯·洛依曼计算机体系结构"></a>一、冯·洛依曼计算机体系结构</h3><p><strong>1、结构图</strong></p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/R-C.jpg" style="zoom: 67%;" /><p><strong>2、特点</strong></p><ul><li>指令和数据采用二进制表示</li><li>指令在存储器中按顺序存放</li><li>指令和数据以相同形式存放与存储器中</li><li>指令有操作码和地址码组成</li><li>计算机有运算器、存储器、控制器、输入设备和输出设备五大部件组成</li></ul><h3 id="二、进制转换"><a href="#二、进制转换" class="headerlink" title="二、进制转换"></a>二、进制转换</h3><p><strong>1、bc 命令（进制之间的转换，默认为10进制）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-en ~]<span class="comment"># bc</span></span><br><span class="line">bc 1.07.1</span><br><span class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.</span><br><span class="line">This is free software with ABSOLUTELY NO WARRANTY.</span><br><span class="line">For details <span class="built_in">type</span> `warranty<span class="string">&#x27;. </span></span><br><span class="line"><span class="string">2*3</span></span><br><span class="line"><span class="string">6          // 默认为10进制，得计算结果</span></span><br><span class="line"><span class="string">ibase=2    // 设定输入的数字类型为二进制，输出默认为10进制</span></span><br><span class="line"><span class="string">110</span></span><br><span class="line"><span class="string">6</span></span><br><span class="line"><span class="string">quit</span></span><br><span class="line"><span class="string">[root@Rocky8-en ~]# bc</span></span><br><span class="line"><span class="string">bc 1.07.1</span></span><br><span class="line"><span class="string">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.</span></span><br><span class="line"><span class="string">This is free software with ABSOLUTELY NO WARRANTY.</span></span><br><span class="line"><span class="string">For details type `warranty&#x27;</span>.</span><br><span class="line">obase=2    // 设定输出的类型为二进制，默认输入为十进制</span><br><span class="line">8</span><br><span class="line">1000</span><br><span class="line">9</span><br><span class="line">1001</span><br></pre></td></tr></table></figure><p><strong>2、各进制之间的转换</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-十进制转二进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=2;9&quot; | bc      // 将十进制9转化为二进制输出</span></span><br><span class="line">1001</span><br><span class="line">-八进制转十进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=10;ibase=8;11&quot; | bc </span></span><br><span class="line">9</span><br><span class="line">-二进制转十进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=10;ibase=2;110&quot; | bc</span></span><br><span class="line">6</span><br><span class="line">-二进制转十六进制-</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo &quot;obase=16;ibase=2;10010&quot; | bc</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="三、Unix-的哲学思想"><a href="#三、Unix-的哲学思想" class="headerlink" title="三、Unix 的哲学思想"></a>三、Unix 的哲学思想</h3><ul><li>一切皆文件<ul><li>不管是普通的文件，还是目录、字符设备、快设备、套接字等在Unix中都是以文件形式对待，采用统一的接口被提供</li></ul></li><li>配置数据存储在文本中<ul><li>Linux中大部分配置文件存放在文本中，方便我们进行修改来解决一些发生的错误；像Windows中的程序配置文件放在注册表中，注册表采用若干个二进制文件，出错很难修改。</li></ul></li><li>提供许多小型的单一用途的程序<ul><li>使用单一的程序就可以完成相应的操作</li></ul></li><li>避免令人困惑的用户界面<ul><li>更多的采用字符界面，图形界面会产生一些虚假的现象，执行过程中不稳定</li></ul></li><li>连接程序，完成复杂的功能<ul><li>某些复杂的任务，可以连接多个简单的程序来实现其复杂的功能。像编写SHELL程序。</li></ul></li></ul><h3 id="四、SHELL"><a href="#四、SHELL" class="headerlink" title="四、SHELL"></a>四、SHELL</h3><p>​    Shell是Linux系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前使用的shell</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># echo $SHELL</span></span><br><span class="line">/bin/bash</span><br><span class="line">-- 显示当前系统使用的所有shell</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/shells</span></span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/usr/bin/sh</span><br><span class="line">/usr/bin/bash</span><br><span class="line">wh@unbuntu18:~$ <span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># /etc/shells: valid login shells</span></span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/bin/rbash</span><br><span class="line">/bin/dash</span><br></pre></td></tr></table></figure><h4 id="4-1-Shell中执行的命令"><a href="#4-1-Shell中执行的命令" class="headerlink" title="4.1 Shell中执行的命令"></a>4.1 Shell中执行的命令</h4><h5 id="4-1-1-shell-中可执行的两类命令"><a href="#4-1-1-shell-中可执行的两类命令" class="headerlink" title="4.1.1 shell 中可执行的两类命令"></a>4.1.1 shell 中可执行的两类命令</h5><ul><li>内部命令：由shell自带的，而且通过某命令形式提供，用户登录后自动加载并常驻内存中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-- <span class="built_in">type</span> 判断指定的命令时外部命令还是内部命令</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># type  -a cat       // 外部命令</span></span><br><span class="line"><span class="built_in">cat</span> is /usr/bin/cat</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># type -a echo      // 内部命令也是外部命令</span></span><br><span class="line"><span class="built_in">echo</span> is a shell <span class="built_in">builtin</span></span><br><span class="line"><span class="built_in">echo</span> is /usr/bin/echo</span><br><span class="line">-- 列出当前shell所有的内部命令</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># enable </span></span><br><span class="line"><span class="built_in">enable</span> .</span><br><span class="line"><span class="built_in">enable</span> :</span><br><span class="line"><span class="built_in">enable</span> [</span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">bg</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">bind</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">break</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">builtin</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">caller</span></span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">cd</span></span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line"><span class="built_in">enable</span> <span class="built_in">wait</span></span><br></pre></td></tr></table></figure><ul><li>外部命令：在文件系统路径下有对应的可执行程序文件，当执行命令时才从磁盘加载至内存中，执行完毕后从内存中删除</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查看外部名令的路径</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># which cat</span></span><br><span class="line">/usr/bin/cat</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># whereis cat</span></span><br><span class="line"><span class="built_in">cat</span>: /usr/bin/cat /usr/share/man/man1/cat.1.gz /usr/share/man/man1p/cat.1p.gz</span><br></pre></td></tr></table></figure><ul><li>Hash缓存表</li></ul><p>​    系统初始时hash表为空，当外部命令执行时，默认会从PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当在此使用该命令时，shell解释器首先查看hash表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见用法</span><br><span class="line"><span class="built_in">hash</span> 显示<span class="built_in">hash</span>缓存</span><br><span class="line"><span class="built_in">hash</span> -l 显示<span class="built_in">hash</span>缓存，可作为输入使用</span><br><span class="line"><span class="built_in">hash</span> -p PATH NAME 将命令全路径path起别名为name</span><br><span class="line"><span class="built_in">hash</span> -t NAME 打印缓存中命令的路径</span><br><span class="line"><span class="built_in">hash</span> -d NAME 清除指定命令缓存</span><br><span class="line"><span class="built_in">hash</span> -r 清除缓存</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -t clock</span></span><br><span class="line">/usr/sbin/clock</span><br><span class="line">=========================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -l</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/dnf dnf</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/screen screen</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/systemctl systemctl</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/vim vim</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/date <span class="built_in">date</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/uname <span class="built_in">uname</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/who <span class="built_in">who</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/whoami <span class="built_in">whoami</span></span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/bin/man man</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/shutdown shutdown</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/clock clock</span><br><span class="line"><span class="built_in">builtin</span> <span class="built_in">hash</span> -p /usr/sbin/hwclock hwclock</span><br><span class="line">===========================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -d clock</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line">hits    <span class="built_in">command</span></span><br><span class="line">   1    /usr/bin/dnf</span><br><span class="line">   1    /usr/bin/screen</span><br><span class="line">   1    /usr/bin/systemctl</span><br><span class="line">   1    /usr/bin/vim</span><br><span class="line">   5    /usr/bin/date</span><br><span class="line">   1    /usr/bin/uname</span><br><span class="line">   1    /usr/bin/who</span><br><span class="line">   1    /usr/bin/whoami</span><br><span class="line">   2    /usr/bin/man</span><br><span class="line">   8    /usr/sbin/shutdown</span><br><span class="line">   3    /usr/sbin/hwclock</span><br><span class="line">==============================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash -r</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hash</span></span><br><span class="line"><span class="built_in">hash</span>: <span class="built_in">hash</span> table empty   </span><br></pre></td></tr></table></figure><h5 id="4-1-2、命令别名"><a href="#4-1-2、命令别名" class="headerlink" title="4.1.2、命令别名"></a>4.1.2、命令别名</h5><p>​    对于经常执行的较长命令，可以将其定义为较短的别名，方便执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前shell进程所有可用的命令别名</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># alias</span></span><br><span class="line"></span><br><span class="line">-- 定义别名     <span class="built_in">alias</span> 新名=<span class="string">&#x27;需要定义别名的命令&#x27;</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># ls /etc/yum.repos.d/</span></span><br><span class="line">CentOS-Base.repo  epel-modular.repo  epel.repo  epel-testing-modular.repo  epel-testing.repo</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># alias lsrepo=&#x27;ls /etc/yum.repos.d&#x27;</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># lsrepo</span></span><br><span class="line">CentOS-Base.repo  epel-modular.repo  epel.repo  epel-testing-modular.repo  epel-testing.repo</span><br><span class="line"></span><br><span class="line">-- 取消别名  <span class="built_in">unalias</span> 别名</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># unalias lsrepo</span></span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># lsrepo</span></span><br><span class="line">bash: lsrepo: <span class="built_in">command</span> not found...</span><br><span class="line"></span><br><span class="line">-- 定义别名配置永久有效</span><br><span class="line">* 仅对当前用户~/.bashrc</span><br><span class="line">* 对所有用户     /etc/bashrc</span><br><span class="line"></span><br><span class="line">-- 如果别名同原命令，仍然向执行原命令</span><br><span class="line">\ALIASNAME</span><br><span class="line"><span class="string">&#x27;ALIASNAME&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="4-1-3-命令的执行次序"><a href="#4-1-3-命令的执行次序" class="headerlink" title="4.1.3 命令的执行次序"></a>4.1.3 命令的执行次序</h5><ul><li>系统先判断是否是别名，如果是就立即执行</li><li>如果不是别名，判断是否是内部命令，是就执行</li><li>如果不是内部命令，查询hash对应的缓存区中是否有此命令对应的路径，如果有就按照此路径在磁盘上查找此命令的文件并执行。如果找不到对应的文件，无法执行此命令。</li><li>如果在hash缓存区中没有对应的命令，则按照PATH系统变量指定的路径进行搜索，如果找到了，则立刻执行，停止向后查找。</li><li>如果在PATH系统变量中也无法查找到，则提示没有此命令。</li></ul><h3 id="五、常见命令"><a href="#五、常见命令" class="headerlink" title="五、常见命令"></a>五、常见命令</h3><h4 id="5-1-查看当前所在的终端"><a href="#5-1-查看当前所在的终端" class="headerlink" title="5.1 查看当前所在的终端"></a>5.1 查看当前所在的终端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-en ~]<span class="comment"># tty</span></span><br><span class="line">/dev/pts/0// 伪终端</span><br><span class="line">[root@Rocky8-en ~]<span class="comment"># tty</span></span><br><span class="line">/dev/tty1// 虚拟终端</span><br></pre></td></tr></table></figure><h4 id="5-2-设置主机名"><a href="#5-2-设置主机名" class="headerlink" title="5.2 设置主机名"></a>5.2 设置主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 临时生效</span><br><span class="line">hostname NAME</span><br><span class="line">-- 永久生效（CentOS7和Ubuntu18.04以上版本）</span><br><span class="line">hostnamectl set-hostname NAME</span><br></pre></td></tr></table></figure><h4 id="5-3-查看-CPU的架构信息"><a href="#5-3-查看-CPU的架构信息" class="headerlink" title="5.3 查看 CPU的架构信息"></a>5.3 查看 CPU的架构信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># lscpu</span></span><br><span class="line">Architecture:        x86_64                      //  cpu架构信息</span><br><span class="line">CPU op-mode(s):      32-bit, 64-bit</span><br><span class="line">Byte Order:          Little Endian</span><br><span class="line">CPU(s):              2//  虚拟机的cpu核数</span><br><span class="line">On-line CPU(s) list: 0,1</span><br><span class="line">Thread(s) per core:  1</span><br><span class="line">Core(s) per socket:  2</span><br><span class="line">Socket(s):           1</span><br><span class="line">NUMA node(s):        1</span><br><span class="line">Vendor ID:           GenuineIntel</span><br><span class="line">BIOS Vendor ID:      GenuineIntel</span><br><span class="line">CPU family:          6</span><br><span class="line">Model:               142</span><br><span class="line">Model name:          Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz            // 物理机的CPU型号</span><br><span class="line">BIOS Model name:     Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">Stepping:            9</span><br><span class="line">CPU MHz:             2712.002</span><br><span class="line">BogoMIPS:            5424.00</span><br><span class="line">Hypervisor vendor:   VMware</span><br><span class="line">Virtualization <span class="built_in">type</span>: full</span><br><span class="line">L1d cache:           32K</span><br><span class="line">L1i cache:           32K</span><br><span class="line">L2 cache:            256K</span><br><span class="line">L3 cache:            3072K</span><br><span class="line">NUMA node0 CPU(s):   0,1</span><br><span class="line">Flags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/cpuinfo      // 将每一个cpu的完整信息展现出来</span></span><br><span class="line">processor       : 0</span><br><span class="line">vendor_id       : GenuineIntel</span><br><span class="line">cpu family      : 6</span><br><span class="line">model           : 142</span><br><span class="line">model name      : Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">stepping        : 9</span><br><span class="line">microcode       : 0xc6</span><br><span class="line">cpu MHz         : 2712.002</span><br><span class="line">cache size      : 3072 KB</span><br><span class="line">physical <span class="built_in">id</span>     : 0</span><br><span class="line">siblings        : 2</span><br><span class="line">core <span class="built_in">id</span>         : 0</span><br><span class="line">cpu cores       : 2</span><br><span class="line">apicid          : 0</span><br><span class="line">initial apicid  : 0</span><br><span class="line">fpu             : <span class="built_in">yes</span></span><br><span class="line">fpu_exception   : <span class="built_in">yes</span></span><br><span class="line">cpuid level     : 22</span><br><span class="line">wp              : <span class="built_in">yes</span></span><br><span class="line">flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds</span><br><span class="line">bogomips        : 5424.00</span><br><span class="line">clflush size    : 64</span><br><span class="line">cache_alignment : 64</span><br><span class="line">address sizes   : 45 bits physical, 48 bits virtual</span><br><span class="line">power management:</span><br><span class="line"></span><br><span class="line">processor       : 1</span><br><span class="line">vendor_id       : GenuineIntel</span><br><span class="line">cpu family      : 6</span><br><span class="line">model           : 142</span><br><span class="line">model name      : Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz</span><br><span class="line">stepping        : 9</span><br><span class="line">microcode       : 0xc6</span><br><span class="line">cpu MHz         : 2712.002</span><br><span class="line">cache size      : 3072 KB</span><br><span class="line">physical <span class="built_in">id</span>     : 0</span><br><span class="line">siblings        : 2</span><br><span class="line">core <span class="built_in">id</span>         : 1</span><br><span class="line">cpu cores       : 2</span><br><span class="line">apicid          : 1</span><br><span class="line">initial apicid  : 1</span><br><span class="line">fpu             : <span class="built_in">yes</span></span><br><span class="line">fpu_exception   : <span class="built_in">yes</span></span><br><span class="line">cpuid level     : 22</span><br><span class="line">wp              : <span class="built_in">yes</span></span><br><span class="line">flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss ht syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single pti ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat md_clear flush_l1d arch_capabilities</span><br><span class="line">bugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds swapgs itlb_multihit srbds</span><br><span class="line">bogomips        : 5424.00</span><br><span class="line">clflush size    : 64</span><br><span class="line">cache_alignment : 64</span><br><span class="line">address sizes   : 45 bits physical, 48 bits virtual</span><br><span class="line">power management:</span><br></pre></td></tr></table></figure><h4 id="5-4-查看内存大小"><a href="#5-4-查看内存大小" class="headerlink" title="5.4 查看内存大小"></a>5.4 查看内存大小</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-- 展示系统内存的使用情况，-h 选项便于可读 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          1.7Gi       254Mi       1.1Gi       8.0Mi       437Mi       1.3Gi</span><br><span class="line">Swap:         2.0Gi          0B       2.0Gi</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/meminfo</span></span><br><span class="line">MemTotal:        1833232 kB</span><br><span class="line">MemFree:         1124496 kB</span><br><span class="line">MemAvailable:    1410600 kB</span><br><span class="line">Buffers:            3164 kB</span><br><span class="line">Cached:           400380 kB</span><br><span class="line">SwapCached:            0 kB</span><br><span class="line">Active:           246284 kB</span><br><span class="line">Inactive:         257196 kB</span><br><span class="line">Active(anon):       1928 kB</span><br><span class="line">Inactive(anon):   106892 kB</span><br><span class="line">Active(file):     244356 kB</span><br><span class="line">Inactive(file):   150304 kB</span><br><span class="line">Unevictable:           0 kB</span><br><span class="line">Mlocked:               0 kB</span><br><span class="line">SwapTotal:       2129916 kB</span><br><span class="line">···</span><br><span class="line">···</span><br><span class="line">DirectMap1G:           0 kB</span><br></pre></td></tr></table></figure><h4 id="5-5-查看硬盘和分区情况"><a href="#5-5-查看硬盘和分区情况" class="headerlink" title="5.5 查看硬盘和分区情况"></a>5.5 查看硬盘和分区情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># lsblk      // 默认查看所有设备，也可后接设备，查看指定的设备</span></span><br><span class="line">NAME        MAJ:MIN RM SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0  50G  0 disk </span><br><span class="line">├─sda1        8:1    0   1G  0 part /boot</span><br><span class="line">└─sda2        8:2    0  49G  0 part </span><br><span class="line">  ├─rl-root 253:0    0  47G  0 lvm  /</span><br><span class="line">  └─rl-swap 253:1    0   2G  0 lvm  [SWAP]</span><br><span class="line">sr0          11:0    1  10G  0 rom  </span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /proc/partitions</span></span><br><span class="line">major minor  <span class="comment">#blocks  name</span></span><br><span class="line"></span><br><span class="line">   8        0   52428800 sda</span><br><span class="line">   8        1    1048576 sda1</span><br><span class="line">   8        2   51379200 sda2</span><br><span class="line">  11        0   10465280 sr0</span><br><span class="line"> 253        0   49246208 dm-0</span><br><span class="line"> 253        1    2129920 dm-1</span><br></pre></td></tr></table></figure><h4 id="5-6-查看系统版本信息"><a href="#5-6-查看系统版本信息" class="headerlink" title="5.6 查看系统版本信息"></a>5.6 查看系统版本信息</h4><ul><li>查看系统架构</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># arch</span></span><br><span class="line">x86_64</span><br></pre></td></tr></table></figure><ul><li>查看内核版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># uname -r</span></span><br><span class="line">4.18.0-348.el8.0.2.x86_64</span><br><span class="line">[root@centos7-mini ~]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-1160.el7.x86_64</span><br></pre></td></tr></table></figure><ul><li>查看操作系统发行版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">Rocky Linux release 8.5 (Green Obsidian)</span><br><span class="line">=========================================================================================</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat /etc/os-release</span></span><br><span class="line">NAME=<span class="string">&quot;Rocky Linux&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;8.5 (Green Obsidian)&quot;</span></span><br><span class="line">ID=<span class="string">&quot;rocky&quot;</span></span><br><span class="line">ID_LIKE=<span class="string">&quot;rhel centos fedora&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;8.5&quot;</span></span><br><span class="line">PLATFORM_ID=<span class="string">&quot;platform:el8&quot;</span></span><br><span class="line">PRETTY_NAME=<span class="string">&quot;Rocky Linux 8.5 (Green Obsidian)&quot;</span></span><br><span class="line">ANSI_COLOR=<span class="string">&quot;0;32&quot;</span></span><br><span class="line">CPE_NAME=<span class="string">&quot;cpe:/o:rocky:rocky:8.5:GA&quot;</span></span><br><span class="line">HOME_URL=<span class="string">&quot;https://rockylinux.org/&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.rockylinux.org/&quot;</span></span><br><span class="line">ROCKY_SUPPORT_PRODUCT=<span class="string">&quot;Rocky Linux&quot;</span></span><br><span class="line">ROCKY_SUPPORT_PRODUCT_VERSION=<span class="string">&quot;8&quot;</span></span><br></pre></td></tr></table></figure><h4 id="5-7-日期和时间"><a href="#5-7-日期和时间" class="headerlink" title="5.7 日期和时间"></a>5.7 日期和时间</h4><p>Linux的两种时钟：</p><ul><li>系统时钟    Linux内核通过CPU工作频率进行计时</li><li>硬件时钟    计算机主板的内部物理芯片计时</li></ul><p>（1）date </p><p>date - print or set the system date and time</p><p>date [OPTION]… [+FORMAT]<br>date [-u|–utc|–universal] [MMDDhhmm[[CC]YY][.ss]]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-- 显示当前默认时间格式 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date   </span></span><br><span class="line">Wed Mar  2 01:56:39 EST 2022</span><br><span class="line">-- 只显示当前日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date +%F</span></span><br><span class="line">2022-03-02</span><br><span class="line">-- 只显示当前的小时、分钟、秒数时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date +%T</span></span><br><span class="line">02:12:05</span><br><span class="line">-- 显示昨天的日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date -d &#x27;-1 day&#x27; +%F</span></span><br><span class="line">2022-03-01</span><br><span class="line">-- 设置当前的日期为明年的日期 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date -s &#x27;1 year&#x27; +%F</span></span><br><span class="line">2023-03-02</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date &quot;+%F %T&quot;</span></span><br><span class="line">2023-03-02 02:10:19</span><br><span class="line">-- 设置时间为2022年7月1日12点30分30秒 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date 070112302022.30</span></span><br><span class="line">Fri Jul  1 12:30:30 EDT 2022</span><br></pre></td></tr></table></figure><p>（2）hwclock/clock   操作硬件时钟</p><p>-s    以硬件时间为准，设定系统时间</p><p>-w    以系统时间为准，设定硬件时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 显示硬件时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hwclock </span></span><br><span class="line">2022-03-04 06:30:41.965061-05:00</span><br><span class="line">-- 调整系统时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># hwclock -s</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># clock;date</span></span><br><span class="line">2022-03-04 06:32:00.405387-05:00</span><br><span class="line">Fri Mar  4 06:32:00 EST 2022</span><br></pre></td></tr></table></figure><h4 id="5-8-关机和重启"><a href="#5-8-关机和重启" class="headerlink" title="5.8 关机和重启"></a>5.8 关机和重启</h4><p>关机：shutdown、halt、poweroff</p><p>重启：reboot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">shutdown now 立刻关机</span><br><span class="line">+<span class="comment"># #分钟之后关机</span></span><br><span class="line">hh:mm    指明具体时间</span><br><span class="line">-c  取消关机</span><br><span class="line">-r 重启</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># shutdown 12:30   //十二点半关机</span></span><br><span class="line">Shutdown scheduled <span class="keyword">for</span> Fri 2022-03-04 12:30:00 EST, use <span class="string">&#x27;shutdown -c&#x27;</span> to cancel.</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># shutdown +5      // 五分钟后关机</span></span><br><span class="line">Shutdown scheduled <span class="keyword">for</span> Fri 2022-03-04 06:42:52 EST, use <span class="string">&#x27;shutdown -c&#x27;</span> to cancel.</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># date</span></span><br><span class="line">Fri Mar  4 06:37:58 EST 2022</span><br></pre></td></tr></table></figure><h4 id="5-9-用户登录信息查看"><a href="#5-9-用户登录信息查看" class="headerlink" title="5.9 用户登录信息查看"></a>5.9 用户登录信息查看</h4><p>whoami    显示当前登录的有效用户</p><p>who    显示系统当前所有的登录会话</p><p>w    显示系统当前所有的登录会话及所做的操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># whoami</span></span><br><span class="line">root</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># who</span></span><br><span class="line">root     pts/0        2022-03-04 06:16 (192.168.84.1)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># w</span></span><br><span class="line"> 06:49:03 up 48 min,  1 user,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    192.168.84.1     06:16    5.00s  0.15s  0.00s w</span><br></pre></td></tr></table></figure><h4 id="5-10-会话管理"><a href="#5-10-会话管理" class="headerlink" title="5.10 会话管理"></a>5.10 会话管理</h4><p>​        当我们打开一个终端窗口的时候，终端的窗口与启动的进程连接在一起。如果此时窗口突然关闭了，那我们正在执行的某个进程也会终止。使用会话，可以在终端窗口不正常关闭的同时，依然保存着他当前的会话。</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/2704859-20220304234120701-648595415.png" alt="image" style="zoom: 50%;" /><p>删除掉此screen会话，在新建一个正常会话，查看ping命令是否还在继续执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># ps aux | grep ping      // ping 命令还在继续执行</span></span><br><span class="line">root        2464  0.0  0.2  55252  5012 pts/0    S+   10:09   0:00 ping www.baidu.com</span><br><span class="line">root        2495  0.0  0.0  12136  1176 pts/3    S+   10:14   0:00 grep --color=auto ping</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># kill -15 2464         // 终止此命令</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># ps aux | grep ping</span></span><br><span class="line">root        2497  0.0  0.0  12136  1176 pts/3    S+   10:14   0:00 grep --color=auto ping</span><br></pre></td></tr></table></figure><h4 id="5-11-命令行历史（history）"><a href="#5-11-命令行历史（history）" class="headerlink" title="5.11 命令行历史（history）"></a>5.11 命令行历史（history）</h4><p>​        当执行一条命令时，系统会在内存记录执行过的命令，当用户退出时，会将内存的命令写入对应的历史文件中（~/.bash_history）</p><p>常用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-c：清空命令历史</span><br><span class="line">-d NUMBER：删除历史中指定的第几条命令</span><br><span class="line">n：显示最近到的n条历史</span><br><span class="line">-a：追加新执行的命令到历史文件中</span><br></pre></td></tr></table></figure><p>命令历史环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HISTSIZE：命令历史记录的条数</span><br><span class="line">HISTFILE：指定历史文件，默认为~/.bash_history</span><br><span class="line">HISTFILESIZE：命令历史文件记录历史的条数</span><br><span class="line">HISTTIMEFORMAT=<span class="string">&quot;%F %T `whoami` &quot;</span> 显示时间和用户</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-- 设置查看命令历史时可以查看执行的时间 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># export HISTTIMEFORMAT=&quot;%F %T&quot;</span></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># history | head</span></span><br><span class="line">    1  2022-03-04 10:11:16ip a</span><br><span class="line">    2  2022-03-04 10:11:16systemctl restart network</span><br><span class="line">    3  2022-03-04 10:11:16systemctl restart network-manager</span><br><span class="line">    4  2022-03-04 10:11:16quit</span><br><span class="line">    5  2022-03-04 10:11:16exit</span><br><span class="line">    6  2022-03-04 10:11:16ls]</span><br><span class="line">    7  2022-03-04 10:11:16ls</span><br><span class="line">    8  2022-03-04 10:11:16cd /root</span><br><span class="line">    9  2022-03-04 10:11:16ls</span><br><span class="line">   10  2022-03-04 10:11:16cd /honme</span><br><span class="line">==============================================================================</span><br><span class="line">-- 如果需要永久存储，需要写进配置文件中 --</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat ~/.bash_profile</span></span><br><span class="line"><span class="comment"># .bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the aliases and functions</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/.bashrc ]; <span class="keyword">then</span></span><br><span class="line">        . ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific environment and startup programs</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T&quot;</span></span><br></pre></td></tr></table></figure><h4 id="5-12-tr"><a href="#5-12-tr" class="headerlink" title="5.12 tr"></a>5.12 tr</h4><p>​    tr 命令可以接受标准输入并按指定规则进行转换</p><p>SYNOPSIS<br>                tr [OPTION]… SET1 [SET2]</p><p>常用选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c, -C, --complementuse the complement of SET1</span><br><span class="line">-d, --deletedelete characters <span class="keyword">in</span> SET1, <span class="keyword">do</span> not translate</span><br><span class="line">-s, --squeeze-repeats 将最后指定的 SET 中列出的重复字符的每个序列替换为该字符的单个匹配项</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># cat /dev/urandom | tr -dc [:alnum:] | echo `head -c 8`</span></span><br><span class="line">Q9WE83YS</span><br><span class="line">[root@Rocky8-mini <span class="built_in">test</span>]<span class="comment"># echo Ixamxwh | tr -s x &quot; &quot;</span></span><br><span class="line">I am wh</span><br></pre></td></tr></table></figure><h4 id="5-13-输出信息-echo"><a href="#5-13-输出信息-echo" class="headerlink" title="5.13 输出信息 echo"></a>5.13 输出信息 echo</h4><h5 id="5-13-1-基础用法"><a href="#5-13-1-基础用法" class="headerlink" title="5.13.1 基础用法"></a>5.13.1 基础用法</h5><p>​    将echo后面的字符进行输出，默认以空白字符分隔。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">option：</span><br><span class="line">-E 不支持转义（默认）</span><br><span class="line">-n 不自动换行</span><br><span class="line">-e 启用 <span class="string">&#x27;\&#x27;</span> 字符功能 </span><br></pre></td></tr></table></figure><p>​    显示变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var_name</span>&quot;</span>弱引用，会输出变量的值</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$var_name&#x27;</span>强引用，变量的值不会输出</span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &quot;$PATH&quot;</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo &#x27;$PATH&#x27;</span></span><br><span class="line"><span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>​    使用-e选项后支持的转义符号及所表达的意思</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">\\     backslash</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e \\</span></span><br><span class="line">\</span><br><span class="line"></span><br><span class="line">\a     alert (BEL)</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e &#x27;\a&#x27;</span></span><br><span class="line"></span><br><span class="line">\b     backspace</span><br><span class="line"></span><br><span class="line">\c     produce no further output</span><br><span class="line"></span><br><span class="line">\e     escape</span><br><span class="line"></span><br><span class="line">\f     form feed</span><br><span class="line"></span><br><span class="line">\n     new line换行</span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># echo -e &#x27;abc\nasdf&#x27;</span></span><br><span class="line">abc</span><br><span class="line">asdf</span><br><span class="line"></span><br><span class="line">\r     carriage <span class="built_in">return</span>回车，光标移至行首，但不换行</span><br><span class="line"></span><br><span class="line">\t     horizontal tab</span><br><span class="line"></span><br><span class="line">\v     vertical tab</span><br><span class="line"></span><br><span class="line">\0NNN  byte with octal value NNN (1 to 3 digits)</span><br><span class="line"></span><br><span class="line">\xHH   byte with hexadecimal value HH (1 to 2 digits)</span><br></pre></td></tr></table></figure><h5 id="5-13-2-高级用法"><a href="#5-13-2-高级用法" class="headerlink" title="5.13.2 高级用法"></a>5.13.2 高级用法</h5><p>​    在终端中，可以输出带有颜色的字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;\033[字符背景颜色;字体颜色m字符串\033[0m&quot;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字体颜色范围：30--37</span></span><br><span class="line">30 黑</span><br><span class="line">31 红</span><br><span class="line">32 绿</span><br><span class="line">33 黄</span><br><span class="line">34 蓝</span><br><span class="line">35 紫</span><br><span class="line">36 深绿</span><br><span class="line">37 白</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符背景颜色范围：40--47</span></span><br><span class="line">40 黑</span><br><span class="line">41 红</span><br><span class="line">42 绿</span><br><span class="line">43 黄</span><br><span class="line">44 蓝</span><br><span class="line">45 紫</span><br><span class="line">46 深绿</span><br><span class="line">47 白</span><br></pre></td></tr></table></figure><h3 id="六、命令行历史（history）"><a href="#六、命令行历史（history）" class="headerlink" title="六、命令行历史（history）"></a>六、命令行历史（history）</h3><p>​    在终端执行命令后，系统会在内存记录执行过的命令。当用户正常退出时，会将内存中保存的命令写入到对于应的历史文件中，默认是<code>~/.bash_history</code>。当再一次登录到shell时，会读取历史文件中记录的命令到内存中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">常用选项：</span><br><span class="line">-c清空命令历史</span><br><span class="line">-d offset删除历史中指定的第offset命令</span><br><span class="line">n显示最近的n跳命令</span><br><span class="line">-a手动将新执行的命令列表写入到历史文件中</span><br><span class="line">-w保存历史列表到指定的历史文件</span><br></pre></td></tr></table></figure><p><strong>命令历史相关环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HISTSIZE命令历史记录的条数</span><br><span class="line"></span><br><span class="line">HISTFILE指定存储命令历史的文件，默认~/.bash_history</span><br><span class="line"></span><br><span class="line">HISTFILESIZE命令历史文件记录历史命令的条数</span><br><span class="line"></span><br><span class="line">HISTTIMEFORMAT=<span class="string">&quot;%F %T `whoami`&quot;</span>显示时间和用户</span><br><span class="line"></span><br><span class="line">HISTCONTROL控制命令历史的记录方式</span><br><span class="line">ignoredups默认，忽略重复的命令，相同且连续为“重复”</span><br><span class="line">ignorespace忽略所有以空白开头的命令</span><br><span class="line">ignoreboth相当于ignoredups，ignorespace的组合</span><br><span class="line">erasedups删除重复命令</span><br></pre></td></tr></table></figure><p><strong>持久保存变量</strong></p><p>​    使用 export 变量名=”值” 的形式存放在 /etc/profile 或 ~/.bash_profile 中实现永久保存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@Rocky8-mini ~]<span class="comment"># cat ./.bash_profile</span></span><br><span class="line"><span class="comment"># .bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the aliases and functions</span></span><br><span class="line"><span class="keyword">if</span> [ -f ~/.bashrc ]; <span class="keyword">then</span></span><br><span class="line">. ~/.bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific environment and startup programs</span></span><br><span class="line"></span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"><span class="built_in">export</span> HISTCONTROL=ignoreboth</span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;%F %T &quot;</span></span><br><span class="line"></span><br><span class="line">[root@Rocky8-mini ~]<span class="comment"># history 2</span></span><br><span class="line">  999  2022-08-16 08:02:43 <span class="built_in">exit</span></span><br><span class="line"> 1000  2022-08-16 08:02:47 <span class="built_in">history</span> 2</span><br></pre></td></tr></table></figure><h3 id="七、BASH快捷键"><a href="#七、BASH快捷键" class="headerlink" title="七、BASH快捷键"></a>七、BASH快捷键</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + l清屏，相当于clear命令</span><br><span class="line">Ctrl + s阻止屏幕输出</span><br><span class="line">Ctrl + q允许屏幕输出</span><br><span class="line">Ctrl + c终止命令</span><br><span class="line">Ctrl + z挂起命令</span><br><span class="line">Ctrl + a光标移动到行首</span><br><span class="line">Ctrl + e光标移动到行尾</span><br><span class="line">Ctrl + u从光标处删除至命令行首</span><br><span class="line">Ctrl + k从光标处删除至命令行尾</span><br><span class="line">Alt + r删除整行</span><br><span class="line">Ctrl + w从光标处向左删除单词首</span><br><span class="line">Alt + d从光标处向右删除至词尾</span><br></pre></td></tr></table></figure><p>​    注：为了防止Alt快捷键与其他软件冲突，在 Xshell 中启动自己的Alt键</p><img src="https://cdn.jsdelivr.net/gh/wuhaolam/picgo_demo/img/image-20220816201742468.png" alt="image-20220816201742468" style="zoom: 80%;" />]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
